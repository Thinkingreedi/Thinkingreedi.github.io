{"title":"基于hexo框架快速从0到1搭建个人博客--部署","uid":"a11af56428ea215f0c979eabeef2dc52","slug":"基于hexo框架快速从0到1搭建个人博客----部署","date":"2022-08-14T23:40:56.000Z","updated":"2025-07-14T15:12:20.468Z","comments":true,"path":"api/articles/基于hexo框架快速从0到1搭建个人博客----部署.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/d3b3c1e3e3494db9b5870742534e0919.png","content":"<h1 id=\"一、-GitHub-Pages-介绍\"><a href=\"#一、-GitHub-Pages-介绍\" class=\"headerlink\" title=\"一、 GitHub Pages 介绍\"></a>一、 GitHub Pages 介绍</h1><ul>\n<li><p>我们利用 Hexo 框架在本地搭建了一个精美的博客，可是只能本地访问，要想发布到互联网上，还需要将它部署在网站上</p>\n</li>\n<li><p>博客的功能只要能阅读文章就够了，因此可以考虑将其部署在提供静态网页托管服务的网站上，这样就省去了购买服务器(云主机)，购买域名这些步骤，不仅省钱省事</p>\n</li>\n<li><p>当前许多平台都提供了静态网页托管服务，其中最方便的当然是 GitHub Pages，只需要注册一个账号就可以使用</p>\n</li>\n<li><p><a href=\"https://pages.github.com/\">GitHub Pages </a></p>\n</li>\n</ul>\n<h1 id=\"二、GitHub-Pages-准备\"><a href=\"#二、GitHub-Pages-准备\" class=\"headerlink\" title=\"二、GitHub Pages 准备\"></a>二、GitHub Pages 准备</h1><ul>\n<li><p>首先进入官网：<a href=\"https://github.com/\">GitHub</a>，登录（这里需要一个账号，此处不再赘述，没有账号的根据要求提示注册一个账号即可）</p>\n</li>\n<li><p>点击右上角 Sign in 登录后，点击左上角 New（或者右上角+）新建仓库</p>\n</li>\n<li><p>由于<strong>每个 GitHub 账户只能建立一个 GitHub Pages 页面</strong>，所以 Repository name 必须填 <strong>&lt;你的用户名&gt;.github.io</strong> ！！！否则就会建立一个普通仓库，GitHub Pages 功能不会生效</p>\n</li>\n<li><p>比如用户名是 demo，Repository name 这里就填 demo.github.io，不知道用户名是哪个，可以点击页面右上角头像，看到第一行“Signed in as xxx”字样， xxx 即为这里的用户名</p>\n</li>\n<li><p>Description 填写仓库描述，比如 blog 等，可不填。<strong>注意勾选 Public</strong> ，否则 GitHub Pages 功能不会生效。建议勾选 Add a README file，会自动生成一个 readme.md 文件。最后点击 Create repository 创建仓库</p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/6dbc033c112c4b51ae02e321cc93ae4b.png#pic_center\"></p>\n<h1 id=\"三、GitHub-Pages-发布\"><a href=\"#三、GitHub-Pages-发布\" class=\"headerlink\" title=\"三、GitHub Pages 发布\"></a>三、GitHub Pages 发布</h1><h2 id=\"3-1-配置\"><a href=\"#3-1-配置\" class=\"headerlink\" title=\"3.1 配置\"></a>3.1 配置</h2><ul>\n<li>我们把自己的博客生成静态 html 网页，提交到这个仓库目录下，就可以在我们的网址看到博客页面了，这就是 Hexo 框架部署博客的原理。对于 Hexo 来说，提交部署只需要几条命令即可。</li>\n<li>在博客根目录下，右键，打开 Git Bash Here。配置用户名和邮箱，这两个参数用于 Git 提交时的身份识别：</li>\n</ul>\n<div class=\"language-markdown\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">markdown</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\"># </span><span style=\"color: #FFCB6B\">其中 username 和 username@XXX.com 是你注册 GitHub 的用户名和邮箱</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">git config --global user.name &quot;username&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">git config --global user.email &quot;username@XXX.com&quot;</span></span></code></pre></div><ul>\n<li>生成 SSH keys，主要用于 Git 提交时的权限控制和加密，本地根据 RSA 算法生成公私密钥对，然后将公钥添加到 GitHub 上，本机就可以提交代码到自己的 GitHub 库了。这个是根据当前使用的电脑的一些信息生成的，所以换电脑提交时要重新生成并添加。输入下面命令，然后一直按回车，直到结束：</li>\n</ul>\n<div class=\"language-markdown\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">markdown</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\"> # </span><span style=\"color: #FFCB6B\">其中 username@XXX.com 是你注册 GitHub 的邮箱</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> ssh-keygen -t rsa -C &quot;username@XXX.com&quot;</span></span></code></pre></div><ul>\n<li>输入下面的命令，查看公钥内容，应该是一个<code>ssh-rsa</code>开头，以<code>你的邮箱</code>结尾的长字符串：</li>\n</ul>\n<div class=\"language-markdown\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">markdown</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\"># </span><span style=\"color: #FFCB6B\">cat后面的路径就是上图中的公钥文件路径，直接复制过来就可以</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">cat /C/Users/XXX/.ssh/id_rsa.pub</span></span></code></pre></div><ul>\n<li>复制公钥内容，打开自己的 Github 主页，点击右上角的头像，点击 Settings。点击 SSH and GPG keys，然后点击 New SSH keys</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/23a411519afd45a1afd9e1b2a1d1b171.png#pic_center\"></p>\n<ul>\n<li><p>Title 可以随便起一个名字，Key 填写上一步复制的公钥内容，然后点击 Add SSH key</p>\n</li>\n<li><p>最后执行下面的命令，测试一下 Git 参数是否配置成功。出现<code>你的用户名</code>和<code>successfully</code>字样，说明配置成功。</p>\n</li>\n</ul>\n<div class=\"language-markdown\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">markdown</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">ssh -T git@github.com</span></span></code></pre></div><p><img src=\"https://img-blog.csdnimg.cn/a63da1971eb34d809361244fa63a1490.png#pic_center\"></p>\n<h2 id=\"3-2-安装插件\"><a href=\"#3-2-安装插件\" class=\"headerlink\" title=\"3.2 安装插件\"></a>3.2 安装插件</h2><ul>\n<li>在博客根目录下，右键，打开 Git Bash Here。输入下面的命令，安装<code>hexo-deployer-git</code>。这个插件用于把生成好的静态页面上传到 GitHub Pages 仓库。</li>\n</ul>\n<div class=\"language-markdown\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">markdown</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">npm install hexo-deployer-git</span></span></code></pre></div><h2 id=\"3-3-发布\"><a href=\"#3-3-发布\" class=\"headerlink\" title=\"3.3 发布\"></a>3.3 发布</h2><ul>\n<li>打开博客根目录配置文件(D:\\hexoblog\\ _config.yaml)，拉到文件最后一行，修改为下面的配置（没有的配置项自行添加），保存：</li>\n</ul>\n<div class=\"language-markdown\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">markdown</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\"># </span><span style=\"color: #FFCB6B\">其中 xxxxxx 是前面多次用到的你的GitHub用户名</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">deploy:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  type: git</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  repo: git@github.com:xxxxxx/xxxxxx.github.io.git</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  branch: main</span></span></code></pre></div><p><img src=\"https://img-blog.csdnimg.cn/79156bb380fd4af28a9888af721edc89.png#pic_center\"></p>\n<ul>\n<li>执行下列命令：</li>\n</ul>\n<div class=\"language-markdown\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">markdown</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\"># </span><span style=\"color: #FFCB6B\">注意最后变成d了，原来的s表示服务起在本地，现在的d表示部署在远端</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">hexo g &amp;&amp; hexo d</span></span></code></pre></div><ul>\n<li>待命令执行完毕，打开浏览器，输入网址<code>https://你的用户名.github.io</code>，可以看到一个本地部署的一模一样的博客出现了。<code>https://你的用户名.github.io</code>就是你的个人博客地址了，其他人都可以访问。</li>\n</ul>\n<h1 id=\"四、总结\"><a href=\"#四、总结\" class=\"headerlink\" title=\"四、总结\"></a>四、总结</h1><ul>\n<li>至此，我们从 0 到 1 快速搭建一个博客的任务初步完成了。本篇文章介绍了利用 GitHub Pages 发布个人博客的方法，如果觉得 GitHub 访问速度太慢，也可以参考对照着基于 Gitee Pages 搭建国内博客站点。后续就是对文章发布，博客迁移，网站优化的内容了，创作不易，感谢三连~</li>\n</ul>\n","feature":true,"text":"博客的功能只要能阅读文章就够了，因此可以考虑将其部署在提供静态网页托管服务的网站上，这样就省去了购买服务器(云主机)，购买域名这些步骤，不仅省钱省事。当前许多平台都提供了静态网页托管服务，其中最方便的当然是 GitHub Pages，只需要注册一个账号就可以使用。...","permalink":"/post/基于hexo框架快速从0到1搭建个人博客----部署","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"博客","slug":"博客","count":6,"path":"api/categories/博客.json"}],"tags":[{"name":"hexo","slug":"hexo","count":5,"path":"api/tags/hexo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81-GitHub-Pages-%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">一、 GitHub Pages 介绍</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81GitHub-Pages-%E5%87%86%E5%A4%87\"><span class=\"toc-text\">二、GitHub Pages 准备</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81GitHub-Pages-%E5%8F%91%E5%B8%83\"><span class=\"toc-text\">三、GitHub Pages 发布</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3.1 配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">3.2 安装插件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-%E5%8F%91%E5%B8%83\"><span class=\"toc-text\">3.3 发布</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">四、总结</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"基于hexo框架快速从0到1搭建个人博客--文章写作","uid":"287062fb47b340e917d6f903629b5049","slug":"基于hexo框架快速从0到1搭建个人博客----文章写作","date":"2022-08-17T00:00:19.000Z","updated":"2025-07-14T15:12:20.468Z","comments":true,"path":"api/articles/基于hexo框架快速从0到1搭建个人博客----文章写作.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/d3b3c1e3e3494db9b5870742534e0919.png","text":"前面已经介绍了框架和搭建的一些步骤，本文介绍了Typora + PicGo + GitHub图床 + jsDelivr CDN加速的组合优化博客文章写作。...","permalink":"/post/基于hexo框架快速从0到1搭建个人博客----文章写作","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"博客","slug":"博客","count":6,"path":"api/categories/博客.json"}],"tags":[{"name":"hexo","slug":"hexo","count":5,"path":"api/tags/hexo.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true},"next_post":{"title":"基于hexo框架快速从0到1搭建个人博客--评论功能","uid":"751b4d19fb5d415ca6cc059441dc288b","slug":"基于hexo框架快速从0到1搭建个人博客----评论功能","date":"2022-08-13T01:19:27.000Z","updated":"2025-07-14T15:12:20.468Z","comments":true,"path":"api/articles/基于hexo框架快速从0到1搭建个人博客----评论功能.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/d3b3c1e3e3494db9b5870742534e0919.png","text":"Valine 诞生于 2017 年 8 月 7 日，是一款基于 LeanCloud 的快速、简洁且高效的无后端评论系统。理论上支持但不限于静态博客，目前已有 Hexo、Jekyll、Typecho、Hugo、Ghost 等博客程序在使用 Valine。...","permalink":"/post/基于hexo框架快速从0到1搭建个人博客----评论功能","photos":[],"count_time":{"symbolsCount":779,"symbolsTime":"1 mins."},"categories":[{"name":"博客","slug":"博客","count":6,"path":"api/categories/博客.json"}],"tags":[{"name":"hexo","slug":"hexo","count":5,"path":"api/tags/hexo.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}