{"title":"图","uid":"0b9c5318228023fdd1e179358a45ba07","slug":"数据结构（C语言版）-- 图笔记","date":"2022-02-20T12:59:01.000Z","updated":"2025-07-14T15:12:20.468Z","comments":true,"path":"api/articles/数据结构（C语言版）-- 图笔记.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/56d020cfc5f84516b5980d6710ece105.png","content":"<hr>\n<h1 id=\"1、图的定义和基本术语\"><a href=\"#1、图的定义和基本术语\" class=\"headerlink\" title=\"1、图的定义和基本术语\"></a>1、图的定义和基本术语</h1><h2 id=\"①-图的定义\"><a href=\"#①-图的定义\" class=\"headerlink\" title=\"①.图的定义\"></a>①.图的定义</h2><p>&#x3D;&#x3D;图(Graph )G由两个集合V和E组成，记为<strong>G&#x3D;(V,E)<strong>，其中</strong>V是顶点的有穷非空集合</strong>，<strong>E是V中顶点偶对的有穷集合</strong>，这些顶点偶对称为边&#x3D;&#x3D;。V(G)和E(G)通常分别表示图G的顶点集合和边集合，E(G)可以为空集。若E(G)为空，则图G只有顶点而没有边。</p>\n<p><strong>有向图:</strong></p>\n<p>每条边都是有方向的，边也称作弧，如G1</p>\n<p><strong>无向图:</strong></p>\n<p>每条边都是无方向的，如G2</p>\n<p><img src=\"https://img-blog.csdnimg.cn/5889e557346c44588921b4fa3d27b51f.png#pic_center\"></p>\n<h2 id=\"②-图的基本术语\"><a href=\"#②-图的基本术语\" class=\"headerlink\" title=\"②.图的基本术语\"></a>②.图的基本术语</h2><p>设n表示图中顶点数目，e表示边的数目</p>\n<p>&#x3D;&#x3D;<strong>完全图</strong>：任意两个点都有一条边相连&#x3D;&#x3D;</p>\n<p><img src=\"https://img-blog.csdnimg.cn/c6aad8d28a404598928f30fcad5a6c86.png#pic_center\"></p>\n<p>&#x3D;&#x3D;<strong>稀疏图</strong>：如果边或弧的个数满足e &lt; n log<del>2</del>n ,则称作稀疏图，否则称作稠密图&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;<strong>子图</strong>：设有两个图G&#x3D;(V，{E}) 、G1&#x3D; (V1，{E1})，若V1⊆ V，E1⊆ E，则称G1是G的子图。&#x3D;&#x3D;</p>\n<p><img src=\"https://img-blog.csdnimg.cn/fa863bdd35674aa29a319187177bbd89.png#pic_center\"></p>\n<p>&#x3D;&#x3D;<strong>权与网</strong>：图中边或弧所具有的数称为权。表明从一个顶点到另一个顶点的距离或耗费。带权的图称为网。&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;对无向图来说：<br><strong>邻接点</strong>:若顶点v和顶点w之间存在一条边a，则称顶点v和w互为邻接点。边a与顶点v和w相关联。<br><strong>度</strong>:与顶点v关联的边的数目，记为TD(v)&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;对有向图来说：<br>&lt;x,y&gt;为有向边（弧），<br>x为有向边的起点（弧尾)，y为有向边的终点（弧头）<br><strong>顶点v的入度</strong>是以v为终点的有向边的条数,记作ID(v)<br><strong>顶点v的出度</strong>是以v为始点的有向边的条数,记作OD(v)&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;<strong>路径</strong>:接续的边构成的顶点序列。&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;<strong>路径长度</strong>:路径上边或弧的数目。&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;<strong>简单路径</strong>:除路径起点和终点可以相同外，其余顶点均不相同的路径。&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;<strong>简单回路(简单环)</strong>:除路径起点和终点相同外，其余顶点均不相同的路径.&#x3D;&#x3D;</p>\n<p><img src=\"https://img-blog.csdnimg.cn/e158eb694bec4fbe85d988fffaa92ffe.png#pic_center\"></p>\n<p>&#x3D;&#x3D;若无向图中任意两个顶点之间都有路径相通，则称此图为<strong>连通图</strong>(G1);若无向图为非连通图，则图中各个连通子图称作此图的<strong>连通分量</strong>(G2)。&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;若有向图中任意两个顶点之间都存在一条有向路径，则称此有向图为强连通图，否则，其各个强连通子图称作它的<strong>强连通分量</strong>。&#x3D;&#x3D;</p>\n<p><img src=\"https://img-blog.csdnimg.cn/033ac64c141141baa9d7db44a11d660d.png#pic_center\"></p>\n<hr>\n<h1 id=\"2、图的类型定义\"><a href=\"#2、图的类型定义\" class=\"headerlink\" title=\"2、图的类型定义\"></a>2、图的类型定义</h1><p><strong>图的抽象数据类型定义：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/510eb32f1b894c3fb5fcb0f0bc9ee5af.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/d213c4028c1e48c4b25ca3f7b6c3299b.png#pic_center\"></p>\n<hr>\n<h1 id=\"3、图的存储结构\"><a href=\"#3、图的存储结构\" class=\"headerlink\" title=\"3、图的存储结构\"></a>3、图的存储结构</h1><p>由于图的结构比较复杂，任意两个顶点之间都可能存在联系，因此无法以数据元素在存储区中的物理位置来表示元素之间的关系，即<strong>图没有顺序存储结构</strong>，但可以借助二维数组来表示元素之间的关系，即邻接矩阵表示法。另一方面，由于图的任意两个顶点间都可能存在关系，因此，用链式存储表示图是很自然的事，图的链式存储有多种，有邻接表、十字链表和邻接多重表，应根据实际需要的不同选择不同的存储结构。</p>\n<h2 id=\"①-邻接矩阵\"><a href=\"#①-邻接矩阵\" class=\"headerlink\" title=\"①.邻接矩阵\"></a>①.邻接矩阵</h2><p><strong>邻接矩阵表示法</strong></p>\n<p><strong>邻接矩阵是表示顶点之间相邻关系的矩阵。设G（V，E）是具有n个顶点的图，则G的邻接矩阵是具有如下性质的n阶方阵。</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/97522e6906ef4913bb0b4fcdbdcf36b9.png#pic_center\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/079231c04e2641b78e9b8db50d9e07f4.png#pic_center\"></p>\n<p>在有向图的邻接矩阵中，</p>\n<ul>\n<li><strong>第i行含义︰以结点v;为起点的边(即出度边);</strong></li>\n<li><strong>第i列含义:以结点v;为终点的边(即入度边)。</strong></li>\n</ul>\n<p>有向图的邻接矩阵可能是不对称的。</p>\n<ul>\n<li><strong>顶点的出度-第i行元素之和</strong></li>\n<li><strong>顶点的入度-第i列元素之和</strong></li>\n<li><strong>顶点的度-第i行元素之和+第i列元素之和</strong></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/c12873e1d7794b12802953ca6dea50c1.png#pic_center\"></p>\n<p>无向图的邻接矩阵是对称的;</p>\n<ul>\n<li><strong>顶点i的度&#x3D;第i 行（列)中1的个数;</strong></li>\n<li><strong>图的边数&#x3D;所有非0元素之和的一半;</strong></li>\n<li><strong>完全图的邻接矩阵中，对角元素为0，其余1。</strong></li>\n</ul>\n<p>若G是网，则邻接矩阵可以定义为：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/4f0bd60aab4d459a918215b44eef9e45.png#pic_center\"></p>\n<p>其中，w<del>i,j</del>表示边上的权值;∞表示计算机允许的、大于所有边上权值的数。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/6fd74f7f3ea24ebbacb2d89879db1178.png#pic_center\"><br>邻接矩阵表示法的特点</p>\n<ul>\n<li>优点:容易实现图的操作。<br>如:求某顶点的度、判断顶点之间是否有边、找顶点的邻接点……</li>\n<li>缺点:n个顶点需要n*n个单元存储边;空间效率为O(n^2^)。<br>对稀疏图而言尤其浪费空间。</li>\n</ul>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//图的邻接矩阵存储表示</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MaxInt</span><span style=\"color: #BABED8\"> 32767     //表示极大值，即∞</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100        //最大顶点数</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //假设顶点的数据类型为字符型</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">     //假设边的权值类型为整型</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType </span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">     //顶点表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType </span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> //邻接矩阵</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">         //图的当前顶点数和边数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>采用邻接矩阵表示法创建无向网</strong></p>\n<ol>\n<li>输入总顶点数和总边数。</li>\n<li>依次输入点的信息存入顶点表中。</li>\n<li>初始化邻接矩阵，使每个权值初始化为极大值。</li>\n<li>构造邻接矩阵。依次输人每条边依附的顶点和其权值，确定两个顶点在图中的位置之后，使相应边赋予相应的权值，同时使其对称边赋予相同的权值。</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">Status</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">                                //采用邻接矩阵表示法，创建无向网G</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //输入总顶点数，总边数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">          //依次输入点的信息</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\"> //初始化邻接矩阵，边的权值均置为极大值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> MaxInt</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\"> //构造邻接矩阵</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //输入一条边依附的顶点及权值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">        //确定v1和v2在G中的位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            //边&lt;v1, v2&gt;的权值置为w</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> //置&lt;v1, v2&gt;的对称边&lt;v2, v1&gt;的权值为w</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">                                // for</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // CreateUDN</span></span>\n<span class=\"line\"></span></code></pre></div><p>该算法的时间复杂度是&#x3D;&#x3D;O(n^2^)&#x3D;&#x3D;。</p>\n<p>若要建立无向图，只需对上述算法做两处小的改动:一是初始化邻接矩阵时，将边的权值均初始化为0;二是构造邻接矩阵时，将权值w改为常量值1即可。同样，将该算法稍做修改即可建立一个有向网或有向图。</p>\n<h2 id=\"②-邻接表\"><a href=\"#②-邻接表\" class=\"headerlink\" title=\"②.邻接表\"></a>②.邻接表</h2><p><strong>邻接表(Adjacency List）是图的一种链式存储结构。在邻接表中，对图中每个顶点v;建立一个单链表，把与v相邻接的顶点放在这个链表中。邻接表中每个单链表的第一个结点存放有关顶点的信息，把这一结点看成链表的表头，其余结点存放有关边的信息，这样邻接表便由两部分组成:表头结点表和边表。</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/d1027b1a3cad48f6b2ec2bdfa3704b19.png#pic_center\"></p>\n<p>无向图的邻接表表示</p>\n<p><img src=\"https://img-blog.csdnimg.cn/534bbdd59a674d96a0049d0659f6bba5.png#pic_center\"></p>\n<p>有向图的邻接表表示</p>\n<p><img src=\"https://img-blog.csdnimg.cn/8deb9cf11caf4b97b816347b2017ecb5.png#pic_center\"></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//图的邻接表存储表示</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100 //最大顶点数</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">ArcNode</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> adjvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              // 该边所指向的顶点的位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">ArcNode</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">*</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> // 指向下一条边的指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    OtherInfo info</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">          // 和边相关的信息</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">ArcNode</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">VNode</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VertexType data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">     // 顶点信息</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">   // 指向第一条依附该顶点的边</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">VNode</span><span style=\"color: #F07178\">, </span><span style=\"color: #FFCB6B\">AdjList</span><span style=\"color: #F07178\">[</span><span style=\"color: #FFCB6B\">MVNum</span><span style=\"color: #F07178\">]</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> // AdjList表示邻接表类型</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    AdjList vertices</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">   // vertices—vertex的复数</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //图的当前顶点数和边数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><p><strong>采用邻接表表示法创建无向图</strong></p>\n<ol>\n<li>输人总顶点数和总边数。</li>\n<li>依次输入点的信息存入顶点表中，使每个表头结点的指针域初始化为NULL。</li>\n<li>创建邻接表。依次输入每条边依附的两个顶点，确定这两个顶点的序号i和j之后，将此边结点分别插入v<del>i</del>和v<del>j</del>对应的两个边链表的头部。</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">Status</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDG</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">                                //采用邻接表表示法，创建无向图G</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //输入顶点数和弧数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">                                  //输入各点，构造表头结点表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">     //输入顶点值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL;</span><span style=\"color: #676E95; font-style: italic\"> //初始化表头结点的指针域为NULL</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\"> //输入各边，构造邻接表，头插法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //输入一条边依附的两个顶点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        p1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #F07178\"> ArcNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //生成一个新的边结点*p1</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p1</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">   //邻接点序号为j</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p1</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> p1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">          //将新结点*p1插入到顶点vi的边表头部</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        p2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #F07178\"> ArcNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                     //生成一个新的边结点*p2</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p2</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                       //邻接点序号为j</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p2</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //插入弧结点到单链表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> p2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">          //将新结点*p2插入到顶点vj的边表头部</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">                                         //头插法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // CreateUDG</span></span>\n<span class=\"line\"></span></code></pre></div><p>该算法的时间复杂度是&#x3D;&#x3D;O(n+e)&#x3D;&#x3D;。</p>\n<p>建立有向图的邻接表与此类似，只是更加简单，每读入一个顶点对序号&lt;i,j&gt;，仅需生成一个邻接点序号为j的边表结点，并将其插入到v的边链表头部即可。若要创建网的邻接表，可以将边的权值存储在info域中。</p>\n<p><strong>邻接矩阵与邻接表的比较</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/c44dc1fe4ddc40c7b0be7728e53515a3.png#pic_center\"></p>\n<p>例1：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/d8a7f7784fb54c86abe0370349473e93.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/9d43c13493ec41bab804a3904bc51f75.png#pic_center\"></p>\n<p>例2：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/b7da64ef02c64970888ca29b97ccc4a9.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/5295de9604764fcf9c07dbf032b016f2.png#pic_center\"></p>\n<h2 id=\"④-十字链表\"><a href=\"#④-十字链表\" class=\"headerlink\" title=\"④.十字链表\"></a>④.十字链表</h2><p><strong>十字链表(Orthogonal List)是有向图的另一种链式存储结构。可以看成是将有向图的邻接表和逆邻接表结合起来得到的一种链表。在十字链表中，对应于有向图中每一条弧有一个结点，对应于每个顶点也有一个结点。</strong></p>\n<p>在弧结点中有5个域:其中尾域( tailvex )和头域( headvex )分别指示弧尾和弧头这两个顶点在图中的位置，链域hlink指向弧头相同的下一条弧，而链域tlink 指向弧尾相同的下一条弧，info域指向该弧的相关信息。弧头相同的弧在同一链表上，弧尾相同的弧也在同一链表上。它们的头结点即为顶点结点，它由3个域组成:其中 data域存储和顶点相关的信息，如顶点的名称等;firstin和 firstout为两个链域，分别指向以该顶点为弧头或弧尾的第一个弧结点。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">名称</th>\n<th align=\"center\">解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">tailvex</td>\n<td align=\"center\">指示弧尾顶点在图中的位置。</td>\n</tr>\n<tr>\n<td align=\"center\">headtex</td>\n<td align=\"center\">指示弧头顶点在图中的位置。</td>\n</tr>\n<tr>\n<td align=\"center\">hlink</td>\n<td align=\"center\">是指向弧头相同的下一条弧的指针。</td>\n</tr>\n<tr>\n<td align=\"center\">tlink</td>\n<td align=\"center\">是指向弧尾相同的下一条弧的指针。</td>\n</tr>\n<tr>\n<td align=\"center\">Info</td>\n<td align=\"center\">指向该弧的相关信息。</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://img-blog.csdnimg.cn/3f6e27895ee541ffb35fb0ff9e26a537.png#pic_center\"></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//有向图的十字链表存储表示</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAX_VERTEX_NUM</span><span style=\"color: #BABED8\"> 20</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">ArcBox</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> tailvex</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> headvex</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">ArcBox</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">*</span><span style=\"color: #BABED8\">hlink</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">tlink</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    InfoType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">info</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">ArcBox</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">VexNode</span><span style=\"color: #F07178\"> </span><span style=\"color: #676E95; font-style: italic\">// ArcBox为弧结点变量</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VertexType data</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcBox </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">firstin</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">firstout</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">VexNode</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #676E95; font-style: italic\">// VexNode为顶点变量</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VexNode </span><span style=\"color: #BABED8\">xlist</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MAX_VERTEX_NUM</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> // 表头向</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            // 有向图的当前顶点数和弧数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">OLGraph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre></div><p>例：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/a6aea7ac55ed4f42bfcdb5bb37200f2a.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/a920d93055314208999e55367e9ff6e7.png#pic_center\"></p>\n<h2 id=\"④-邻接多重表\"><a href=\"#④-邻接多重表\" class=\"headerlink\" title=\"④.邻接多重表\"></a>④.邻接多重表</h2><p><strong>邻接多重表是无向图的另一种链式存储结构，由于用邻接表存储无向图时，虽然容易求出顶点和边的各种信息，但在邻接表中每一条边有两个结点，分别在第i和第j个链表中，给图的某些操作带来不便。在邻接多重表中，每一条边只有一个边结点，为有关边的处理提供了方便。</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">名称</th>\n<th align=\"center\">解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">mark</td>\n<td align=\"center\">为标志域，可用以标记该条边是否被搜索过</td>\n</tr>\n<tr>\n<td align=\"center\">ivex和jvex</td>\n<td align=\"center\">为该边依附的两个顶点在图中的位置;</td>\n</tr>\n<tr>\n<td align=\"center\">ilnk</td>\n<td align=\"center\">指向下一条依附于顶点ivex的边;</td>\n</tr>\n<tr>\n<td align=\"center\">jlink</td>\n<td align=\"center\">指向下一条依附于顶点jvex的边</td>\n</tr>\n<tr>\n<td align=\"center\">info</td>\n<td align=\"center\">为指向和边相关的各种信息的指针域。</td>\n</tr>\n</tbody></table>\n<p>例：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/1d52ad2eb0564c46af086ad8ff60083d.png#pic_center\"></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//无向图的邻接多重表存储表示</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAX_VERTEX_NUM</span><span style=\"color: #BABED8\"> 20</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">enum</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">unvisited</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">viseited</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> ViseitIF</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">EBox</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VisitIf mark</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">               //访问标志域</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> ivex</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> jvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">             //该边依附的两个顶点在表头数组中位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">EBox</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">*</span><span style=\"color: #BABED8\">ilink</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">jlink</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //分别指向依附于ivex和jvex的下一条边</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    InfoType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">info</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">Ebox</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">VexBox</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VertexType data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //存与顶点有关的信息</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    EBox </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">firstedge</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //指向第一条依附于该顶点的边</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">VexBox</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VexBox </span><span style=\"color: #BABED8\">adjmulist</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MAX_VERTEX_NUM</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> // 表头向量</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> edgenum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              // 无向图的当前顶点数和弧数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">AMLGraph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre></div><p>例：画出无向图G的邻接多重表</p>\n<p><img src=\"https://img-blog.csdnimg.cn/c9411620611f4952a1d84b33c3bc19cf.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/a38fd52e3137451e8ffdd29969663cd1.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/22495a9e70204f52bbd695cb5c10a458.png#pic_center\"></p>\n<hr>\n<h1 id=\"4、图的遍历\"><a href=\"#4、图的遍历\" class=\"headerlink\" title=\"4、图的遍历\"></a>4、图的遍历</h1><p>从图中某个顶点V。出发，沿着一些边访问图中所有的顶点，且使每个顶点被访问一次且只访问一次，就叫做图的遍历。它是图的基本运算。</p>\n<h2 id=\"①-深度优先搜索\"><a href=\"#①-深度优先搜索\" class=\"headerlink\" title=\"①.深度优先搜索\"></a>①.深度优先搜索</h2><p>&#x3D;&#x3D;深度优先搜索( Depth First Search，DFS)遍历类似于树的先序遍历，是树的先序遍历的推广&#x3D;&#x3D;。对于一个连通图，深度优先搜索遍历的过程如下。</p>\n<ol>\n<li>从图中某个顶点v出发，访问v。</li>\n<li>找出刚访问过的顶点的第一个未被访问的邻接点，访问该顶点。以该顶点为新顶点，重复此步骤,直至刚访问过的顶点没有未被访问的邻接点为止。</li>\n<li>返回前一个访问过的且仍有未被访问的邻接点的顶点，找出该顶点的下一个未被访问的邻接点，访问该顶点。</li>\n<li>重复步骤（2）和（3)，直至图中所有顶点都被访问过，搜索结束。</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/a510d5470cc247dfa2fcf56f4fb3469b.png#pic_center\"></p>\n<p>对无向连通图，如果将一次深度优先搜索时前进操作所经过的边保留下来则可构成一棵深度优先搜索生成树。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/a44a9d7a871b44c09d087e2090402098.png#pic_center\"></p>\n<p><strong>深度优先搜索遍历的算法实现</strong></p>\n<p>显然，深度优先搜索遍历连通图是一个递归的过程。为了在遍历过程中便于区分顶点是否已被访问，需附设访问标志数组visited[n]，其初值为“false”，一旦某个顶点被访问，则其相应的分量置为“true”。</p>\n<ol>\n<li>从图中某个顶点v出发，访问v，并置visited[y]的值为true。</li>\n<li>依次检查v的所有邻接点w，如果visited[w]的值为false，再从w出发进行递归遍历,直到图中所有顶点都被访问过。</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//深度优先搜索遍历连通图的递归算法</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100        //最大顶点数</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //假设顶点的数据类型为字符型</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">     //假设边的权值类型为整型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType </span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">     //顶点表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType </span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> //邻接矩阵</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">         //图的当前点数和边数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">bool</span><span style=\"color: #BABED8\"> visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                   //访问标志数组，其初值为&quot;false&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FirstAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">       //返回v的第一个邻接点</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">NextAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">w</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> //返回v相对于w的下一个邻接点</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerTexType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //确定点v在G中的位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // LocateVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //采用邻接矩阵表示法，创建无向网G</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入总顶点数，总边数 , 以空格隔开:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //输入总顶点数，总边数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入点的名称，如 a：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个点的名称:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> //依次输入点的信息</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\"> //初始化邻接矩阵，边的权值均置为极大值MaxInt</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入边依附的顶点，如：a b</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\"> //构造邻接矩阵</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        VerTexType v1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">k </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">条边依附的顶点:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //输入一条边依附的顶点及权值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">            //确定v1和v2在G中的位置，即顶点数组的下标</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //置&lt;v1, v2&gt;的对称边&lt;v2, v1&gt;的权值为w</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">                                    // for</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // CreateUDN</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\"> //从第v个顶点出发递归地深度优先遍历图G</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true;</span><span style=\"color: #676E95; font-style: italic\"> //访问第v个顶点，并置访问标志数组相应分量值为true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">w </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FirstAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">NextAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //依次检查v的所有邻接点w ，FirstAdjVex(G, v)表示v的第一个邻接点</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        // NextAdjVex(G, v, w)表示v相对于w的下一个邻接点，w≥0表示存在邻接点</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">w</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #82AAFF\">DFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> //对v的尚未访问的邻接顶点w递归调用DFS</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // DFS</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FirstAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">false)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // FirstAdjVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">NextAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">w</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">false)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // NextAdjVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">************深度优先搜索遍历连通图的递归算法**************</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">         </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Graph G</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">无向连通图G创建完成！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">         </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入遍历连通图的起始点：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    VerTexType c</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> c</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">c </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">该点不存在，请重新输入！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入遍历连通图的起始点：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> c</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">c </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">深度优先搜索遍历连通图结果：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">DFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // main</span></span>\n<span class=\"line\"></span></code></pre></div><div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//深度优先搜索遍历非连通图</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100        //最大顶点数</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //假设顶点的数据类型为字符型</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">     //假设边的权值类型为整型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//-------------图的邻接矩阵-----------------</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType </span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">     //顶点表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType </span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> //邻接矩阵</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">         //图的当前点数和边数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">bool</span><span style=\"color: #BABED8\"> visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                   //访问标志数组，其初值为&quot;false&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FirstAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">       //返回v的第一个邻接点</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">NextAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">w</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> //返回v相对于w的下一个邻接点</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerTexType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //确定点v在G中的位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // LocateVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //采用邻接矩阵表示法，创建无向网G</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入总顶点数，总边数，以空格隔开:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //输入总顶点数，总边数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入点的名称，如a</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个点的名称:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> //依次输入点的信息</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\"> //初始化邻接矩阵，边的权值均置为极大值MaxInt</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入边依附的顶点，如a b</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\"> //构造邻接矩阵</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        VerTexType v1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">k </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">条边依附的顶点:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //输入一条边依附的顶点及权值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">            //确定v1和v2在G中的位置，即顶点数组的下标</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //置&lt;v1, v2&gt;的对称边&lt;v2, v1&gt;的权值为w</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">                                    // for</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // CreateUDN</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //从第v个顶点出发递归地深度优先遍历图G</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true;</span><span style=\"color: #676E95; font-style: italic\"> //访问第v个顶点，并置访问标志数组相应分量值为true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">w </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FirstAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">NextAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //依次检查v的所有邻接点w ，FirstAdjVex(G, v)表示v的第一个邻接点</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        // NextAdjVex(G, v, w)表示v相对于w的下一个邻接点，w≥0表示存在邻接点</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">w</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #82AAFF\">DFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> //对v的尚未访问的邻接顶点w递归调用DFS</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // DFS</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DFSTraverse</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //对非连通图G做深度优先遍历</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">v </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> v </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false;</span><span style=\"color: #676E95; font-style: italic\">        //访问标志数组初始化</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">v </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> v </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\"> //循环调用算法6.3</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #82AAFF\">DFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> //对尚未访问的顶点调用DFS</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // DFSTraverse</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FirstAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //返回v的第一个邻接点</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">false)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // FirstAdjVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">NextAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">w</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //返回v相对于w的下一个邻接点</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">false)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // NextAdjVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">************深度优先搜索遍历非连通图**************</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">         </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Graph G</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">无向图G创建完成！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">         </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">深度优先搜索遍历非连通图结果：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">DFSTraverse</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // main</span></span>\n<span class=\"line\"></span></code></pre></div><h2 id=\"②-广度优先搜索\"><a href=\"#②-广度优先搜索\" class=\"headerlink\" title=\"②.广度优先搜索\"></a>②.广度优先搜索</h2><p>&#x3D;&#x3D;广度优先搜索（ Breadth First Search，BFS）遍历类似于树的按层次遍历的过程。&#x3D;&#x3D;</p>\n<p>广度优先搜索遍历的过程如下。</p>\n<ol>\n<li>从图中某个顶点v出发，访问v。</li>\n<li>依次访问v的各个未曾访问过的邻接点。</li>\n<li>分别从这些邻接点出发依次访问它们的邻接点，并使“先被访问的顶点的邻接点”先于“后被访问的顶点的邻接点”被访问。重复步骤3，直至图中所有已被访问的顶点的邻接点都被访问到。</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/b38d873f7db345fb9e1af669a1ca2a33.png#pic_center\"><br>广度优先生成树：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/5d8d5d18139b45ceb9cea446061845b4.png#pic_center\"><br><strong>广度优先搜索遍历连通图</strong></p>\n<ol>\n<li>从图中某个顶点v出发，访问v，并置 visited[y]的值为true，然后将v进队。</li>\n<li>只要队列不空，则重复下述操作:<br>- 队头顶点u出队;<br>- 依次检查u的所有邻接点w，如果visited[w]的值为false，则访问w，并置visited[w]的值为true，然后将w进队。</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//广度优先搜索遍历连通图</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100                       \t//最大顶点数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAXQSIZE</span><span style=\"color: #BABED8\"> 100\t\t\t\t\t\t//最大队列长度</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t//假设顶点的数据类型为字符型</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                  \t\t//假设边的权值类型为整型</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">bool</span><span style=\"color: #BABED8\"> visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">           \t\t\t\t//访问标志数组，其初值为&quot;false&quot; </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//-----图的邻接矩阵存储表示----- </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType </span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">            \t\t//顶点表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType </span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">      \t\t//邻接矩阵</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//图的当前点数和边数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//----队列的定义及操作--------</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">base</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//初始化的动态分配存储空间</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> front</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t//头指针，若队列不空，指向队头元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> rear</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t//尾指针，若队列不空，指向队尾元素的下一个位置</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">sqQueue</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">sqQueue</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //构造一个空队列Q</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXQSIZE</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">     </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t//存储分配失败</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//InitQueue</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">sqQueue</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ArcType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //插入元素e为Q的新的队尾元素</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #BABED8\"> MAXQSIZE </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> e</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #BABED8\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//EnQueue</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">bool</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">QueueEmpty</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">sqQueue</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //判断是否为空队</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//QueueEmpty</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">sqQueue</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ArcType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">u</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //队头元素出队并置为u </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    u </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #BABED8\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//DeQueue   \t\t\t\t\t\t\t\t</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//--------------------------------------------------</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerTexType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //确定点v在G中的位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//LocateVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //采用邻接矩阵表示法，创建无向网G </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入总顶点数，总边数，以空格隔开:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//输入总顶点数，总边数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入点的名称，如a</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #F07178\">   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个点的名称:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                        \t\t\t//依次输入点的信息 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">                \t\t\t//初始化邻接矩阵，边的权值均置为极大值MaxInt </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">   </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入边依附的顶点，如a b</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//构造邻接矩阵 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        VerTexType v1 </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">k </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">条边依附的顶点:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t//输入一条边依附的顶点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\">  j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t//确定v1和v2在G中的位置，即顶点数组的下标 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t//边&lt;v1, v2&gt;的权值置为w </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//置&lt;v1, v2&gt;的对称边&lt;v2, v1&gt;的权值为w </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//CreateUDN</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FirstAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //返回v的第一个邻接点</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">false)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//FirstAdjVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">NextAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">u</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">w</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //返回v相对于w的下一个邻接点</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">u</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">false)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//NextAdjVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">BFS</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //按广度优先非递归遍历连通图G </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    sqQueue Q</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ArcType u</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ArcType w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">    visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true;</span><span style=\"color: #676E95; font-style: italic\">     \t\t\t\t\t\t//访问第v个顶点，并置访问标志数组相应分量值为true </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">              \t\t\t\t\t\t\t\t\t\t\t\t\t//辅助队列Q初始化，置空         </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t\t\t\t\t\t\t\t//v进队 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #82AAFF\">QueueEmpty</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">))&#123;</span><span style=\"color: #676E95; font-style: italic\">   \t\t\t\t\t\t\t\t\t\t\t\t\t//队列非空 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> u</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">       \t\t\t\t\t\t\t\t\t\t\t\t\t//队头元素出队并置为u</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">w </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">FirstAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> u</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\"> w </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> w </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">NextAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> u</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">            //依次检查u的所有邻接点w ，FirstAdjVex(G, u)表示u的第一个邻接点 </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">            //NextAdjVex(G, u, w)表示u相对于w的下一个邻接点，w≥0表示存在邻接点 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">])&#123;</span><span style=\"color: #676E95; font-style: italic\">\t           \t\t\t\t\t\t\t\t\t\t//w为u的尚未访问的邻接顶点 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">   </span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">true;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//访问w，并置访问标志数组相应分量值为true </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t\t//w进队 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//if </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//while </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//BFS </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">************算法广度优先搜索遍历连通图**************</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Graph G</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">无向连通图G创建完成！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入遍历连通图的起始点：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    VerTexType c</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> c</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">c </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">该点不存在，请重新输入！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入遍历连通图的起始点：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> c</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">c </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">深度优先搜索遍历连通图结果：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">BFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//main</span></span>\n<span class=\"line\"></span></code></pre></div><hr>\n<h1 id=\"5、图的应用\"><a href=\"#5、图的应用\" class=\"headerlink\" title=\"5、图的应用\"></a>5、图的应用</h1><h2 id=\"①-最小生成树\"><a href=\"#①-最小生成树\" class=\"headerlink\" title=\"①.最小生成树\"></a>①.最小生成树</h2><p>&#x3D;&#x3D;<strong>极小连通子图</strong>:该子图是G的连通子图，在该子图中删除任何一条边，子图不再连通。&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;<strong>生成树</strong>:包含图G所有顶点的极小连通子图&#x3D;&#x3D;</p>\n<p>生成树的顶点集合与图的顶点集合相等，顶点数为n；不存在回路，边数为n-1</p>\n<p><img src=\"https://img-blog.csdnimg.cn/7aa8f27f6d864a329b6750fd66fbb135.png#pic_center\"></p>\n<p><strong>在网的多个生成树中，寻找一个各边权值之和最小的生成树，即最小生成树</strong></p>\n<p>构造最小生成树的准则：</p>\n<ul>\n<li>必须只使用该网中的边来构造最小生成树;</li>\n<li>必须使用且仅使用n-1条边来联结网络中的n个顶点</li>\n<li>不能使用产生回路的边</li>\n</ul>\n<p><strong>普里姆算法（加点法）</strong></p>\n<p>假设N&#x3D;(V,E)是连通网，TE是N上最小生成树中边的集合。</p>\n<ol>\n<li>U&#x3D; {u<del>0</del>}(u<del>0</del>∈V)，TE&#x3D;{}。</li>\n<li>在所有u∈U，v∈V-U的边(u,v)∈E中找一条权值最小的边(u<del>0</del>, v<del>0</del>)并入集合TE，同时v<del>0</del>并人U。</li>\n<li>重复②，直至U&#x3D;V为止。</li>\n</ol>\n<p>此时TE中必有n-1条边，则T&#x3D;(V，TE)为N的最小生成树。</p>\n<p>普里姆算法构造最小生成树的过程：<br><img src=\"https://img-blog.csdnimg.cn/7c65af846b0e43f7a91af401c9275f28.png#pic_center\"><br>图采用邻接矩阵存储，二维数组closedeg，记录从U到V-U具有最小代价的边。<br>对每个顶点vi, v-U在辅助数组存在一个相应的分量closedge[i-1]，它包括两个域:</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VertexType adjvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> // 最小边的顶点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VRType lowcost</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">    // 最小边的权值</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">closedge</span><span style=\"color: #F07178\">[</span><span style=\"color: #FFCB6B\">MAX_VERTEX_NUM</span><span style=\"color: #F07178\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre></div><p>adjvex:依附于这条最小代价边的另一个顶点。</p>\n<ul>\n<li>等于0表示顶点i已在U中;</li>\n<li>大于0表示顶点i还在V-U中。</li>\n</ul>\n<p>所以，每次循环须在lowcost &gt;0(在集合V-U中)的那些顶点中选择lowcost最小的顶点加入到集合U中，同时将相关顶点的closedge作相应的调整。</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//普里姆算法</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MaxInt</span><span style=\"color: #BABED8\"> 32767                    \t//表示极大值，即∞</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//辅助数组的定义，用来记录从顶点集U到V-U的权值最小的边</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType adjvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//最小边在U中的那个顶点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType lowcost</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//最小边上的权值</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//- - - - -图的邻接表存储表示- - - - - \t\t\t\t\t\t</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t//假设顶点的数据类型为字符型 </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                  \t\t//假设边的权值类型为整型 </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType </span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">            \t\t//顶点表 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType </span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">      \t\t//邻接矩阵 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//图的当前点数和边数 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerTexType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //确定点v在G中的位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//LocateVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //采用邻接矩阵表示法，创建无向网G </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入总顶点数，总边数，以空格隔开:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//输入总顶点数，总边数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入点的名称，如a</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #F07178\">   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个点的名称:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                        \t\t\t//依次输入点的信息 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">                \t\t\t//初始化邻接矩阵，边的权值均置为极大值MaxInt </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">   </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> MaxInt</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入边依附的顶点及权值，如a b 5</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//构造邻接矩阵 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        VerTexType v1 </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcType w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">k </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">条边依附的顶点及权值:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t//输入一条边依附的顶点及权值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\">  j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t//确定v1和v2在G中的位置，即顶点数组的下标 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t//边&lt;v1, v2&gt;的权值置为w </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//置&lt;v1, v2&gt;的对称边&lt;v2, v1&gt;的权值为w </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//CreateUDN </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Min</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //返回权值最小的点</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> index </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> min </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> MaxInt</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">min </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            min </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            index </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> index</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//Min</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MiniSpanTree_Prim</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerTexType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">u</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //无向网G以邻接矩阵形式存储，从顶点u出发构造G的最小生成树T，输出T的各条边  </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    VerTexType u0 </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> v0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> u</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">           \t\t\t\t\t\t\t\t\t\t//k为顶点u的下标 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">     \t\t\t\t\t\t\t\t\t//对V-U的每一个顶点vi，初始化closedge[i] </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> k</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #F07178\">  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> u</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//&#123;adjvex, lowcost&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//if</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">        \t\t\t\t\t\t\t\t\t//初始，U = &#123;u&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">     \t\t\t\t\t\t\t\t\t//选择其余n-1个顶点，生成n-1条边(n= G.vexnum) </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">Min</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\">  </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //求出T的下一个结点：第k个顶点，closedge[k]中存有当前最小边 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        u0 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">     \t\t\t\t\t\t\t\t\t//u0为最小边的一个顶点，u0∈U </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        v0 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t\t\t\t\t//v0为最小边的另一个顶点，v0∈V-U </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">边  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">u0 </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">---&gt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> v0 </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">           \t\t\t//输出当前的最小边(u0, v0) </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">   \t\t//第k个顶点并入U集 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//新顶点并入U后重新选择最小边 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">closedge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//if </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//MiniSpanTree_Prim </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">************普里姆算法**************</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    AMGraph G</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">无向图G创建完成！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">******利用普里姆算法构造最小生成树结果：******</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">MiniSpanTree_Prim</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//main</span></span></code></pre></div><p>例：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/68cdd0b7c94e4c80801213acdbe9c2a6.png#pic_center\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/8a355d87f12b4b6eb539091803185229.png#pic_center\"></p>\n<p><strong>克鲁斯卡尔算法（加边法）</strong></p>\n<p>假设连通网N&#x3D;(V,E)，将Ⅳ中的边按权值从小到大的顺序排列。</p>\n<ol>\n<li>初始状态为只有n个顶点而无边的非连通图T&#x3D;(V, {),图中每个顶点自成一个连通分量。</li>\n<li>在E中选择权值最小的边，若该边依附的顶点落在T中不同的连通分量上（即不形成回路)，则将此边加人到T中，否则舍去此边而选择下一条权值最小的边。</li>\n<li>重复②，直至T中所有顶点都在同一连通分量上为止。</li>\n</ol>\n<p>克鲁斯卡尔算法构造最小生成树的过程：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/a43e87665309443fa2522ac0c235f508.png#pic_center\"></p>\n<p>算法的实现要引人以下辅助的数据结构。</p>\n<ol>\n<li>结构体数组Edge:存储边的信息，包括边的两个顶点信息和权值。</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//辅助数组Edges的定义</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType Head</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //边的始点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType Tail</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //边的终点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType lowcost</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //边上的权值</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">arcnnum</span><span style=\"color: #89DDFF\">];</span></span></code></pre></div><ol start=\"2\">\n<li>Vexset[i]:标识各个顶点所属的连通分量。对每个顶点v,EV，在辅助数组中存在一个相应元素Vexset[i]表示该顶点所在的连通分量。初始时Vexset[i]&#x3D;i，表示各顶点自成一个连通分量。</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//辅助数组Vexset的定义</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> Vexset</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"></span></code></pre></div><ol>\n<li>将数组Edge中的元素按权值从小到大排序。</li>\n<li>依次查看数组Edge中的边,循环执行以下操作:</li>\n</ol>\n<ul>\n<li>依次从排好序的数组 Edge 中选出一条边(U<del>1</del>,U<del>2</del>);</li>\n<li>在Vexset中分别查找v<del>1</del>和v<del>2</del>所在的连通分量vs<del>1</del>和 vs<del>2</del>，进行判断:<br>  - 如果vs<del>1</del>,和vs<del>2</del>不等、表明所选的两个顶点分属不同的连通分量,输出此边,并合并vs<del>1</del>,和 vs<del>2</del>两个连通分量;<br>  - 如果vs<del>1</del>,和 vs<del>2</del>相等，表明所选的两个顶点属于同一个连通分量，舍去此边而选择下一条权值最小的边。</li>\n</ul>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//克鲁斯卡尔算法</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t//假设顶点的数据类型为字符型 </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">   </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100                       \t//最大顶点数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MaxInt</span><span style=\"color: #BABED8\"> 32767                    \t//表示极大值，即∞</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//----------------图的邻接矩阵---------------------</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType </span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">            \t\t//顶点表 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType </span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">      \t\t//邻接矩阵 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//图的当前点数和边数 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//辅助数组Edges的定义</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType Head</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//边的始点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType Tail</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//边的终点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType lowcost</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//边上的权值</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[(</span><span style=\"color: #F07178\">MVNum </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">MVNum </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> Vexset</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//辅助数组Vexset的定义</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerTexType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //确定点v在G中的位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//LocateVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //采用邻接矩阵表示法，创建无向网G </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入总顶点数，总边数，以空格隔开:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//输入总顶点数，总边数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入点的名称，如a</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #F07178\">   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个点的名称:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                        \t\t//依次输入点的信息 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">                \t\t//初始化邻接矩阵，边的权值均置为极大值MaxInt </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> MaxInt</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入边依附的顶点及权值，如a b 6</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//构造邻接矩阵 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        VerTexType v1 </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcType w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">k </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">条边依附的顶点及权值:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                           //输入一条边依附的顶点及权值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\">  j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t//确定v1和v2在G中的位置，即顶点数组的下标 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t//边&lt;v1, v2&gt;的权值置为w </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//置&lt;v1, v2&gt;的对称边&lt;v2, v1&gt;的权值为w </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Head</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Tail</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//CreateUDN </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//----------冒泡排序-------------------</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> m </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">m </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> flag </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\"> m </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">++)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">                VerTexType temp_Head </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Head</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Head</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Head</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Head</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> temp_Head</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">                VerTexType temp_Tail </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Tail</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Tail</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Tail</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Tail</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> temp_Tail</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                ArcType temp_lowcost </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">lowcost</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> temp_lowcost</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//if</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//while</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//Sort</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MiniSpanTree_Kruskal</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //无向网G以邻接矩阵形式存储，构造G的最小生成树T，输出T的各条边     </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> v1 </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> v2 </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> vs1 </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> vs2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">                 \t\t\t\t\t\t\t//将数组Edge中的元素按权值从小到大排序 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">     \t\t\t\t\t//辅助数组，表示各顶点自成一个连通分量 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Vexset</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #F07178\">      </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //依次查看排好序的数组Edge中的边是否在同一连通分量上     </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        v1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Head</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">     \t\t\t//v1为边的始点Head的下标 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        v2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Tail</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">     \t\t\t//v2为边的终点Tail的下标 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        vs1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Vexset</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v1</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">       \t\t\t\t\t\t//获取边Edge[i]的始点所在的连通分量vs1 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        vs2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Vexset</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v2</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">       \t\t\t\t\t\t//获取边Edge[i]的终点所在的连通分量vs2 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">vs1 </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> vs2</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">         \t\t\t\t\t\t//边的两个顶点分属不同的连通分量 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Head</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">--&gt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Edge</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">Tail</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t//输出此边 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">      \t\t\t//合并vs1和vs2两个分量，即两个集合统一编号 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Vexset</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> vs2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Vexset</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> vs1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t//集合编号为vs2的都改为vs1 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//if </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//MiniSpanTree_Kruskal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">************克鲁斯卡尔算法**************</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    AMGraph G</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">*****无向网G创建完成！*****</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">MiniSpanTree_Kruskal</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">///main</span></span></code></pre></div><p><img src=\"https://img-blog.csdnimg.cn/a8e58fb9d70c4c5280aa65a5254f5042.png#pic_center\"></p>\n<h2 id=\"②-最短路径\"><a href=\"#②-最短路径\" class=\"headerlink\" title=\"②.最短路径\"></a>②.最短路径</h2><p>&#x3D;&#x3D;对于图来说，从一个顶点到另一个顶点可能存在多条路径，每条路径的所包含的边数可能不同。<strong>把所包含的边数最少的那条称为最短路径</strong>。&#x3D;&#x3D;</p>\n<p><strong>最短路径</strong>:对于网(带权的图)来说，从一个顶点到另一个顶点所经过的边的权值之和称为带权路径长度，把带权路径长度最短的那条称为最短路径</p>\n<p><strong>从某个源点到其余各顶点的最短路径——迪杰斯特拉(Dijkstra)算法</strong></p>\n<ol>\n<li>初始化:先找出从源点v<del>0</del>到各终点v的直达路径(v<del>0</del>,v<del>k</del>)，即通过一条弧到达的路径。</li>\n<li>选择:从这些路径中找出一条长度最短的路径(v<del>0</del>,u) 。</li>\n<li>更新:然后对其余各条路径进行适当调整。</li>\n</ol>\n<p>若在图中存在弧(u，v<del>k</del>) ，(v<del>0</del>，u) +(u，v<del>k</del>)&lt; (v<del>0</del>，v<del>k</del>) ,则以路径(v<del>0</del>,u,v<del>k</del>)代替（v<del>0</del>，v<del>k</del>)。<br>在调整后的各条路径中，再找长度最短的路径。</p>\n<p><strong>主要存储结构</strong>︰邻接矩阵G [n][n] (或者邻接表)</p>\n<p><strong>辅助存储结构︰</strong></p>\n<p><strong>数组S[n]:记录相应顶点是否已被确定最短距离</strong><br>true:确定 false:未确定</p>\n<p><strong>数组D[n]:记录源点到相应顶点路径长度</strong><br>初值:如果v0到vi有弧，则D[i]为弧上权值;否则为∞</p>\n<p><strong>数组Path[n]:记录相应顶点的前驱顶点</strong><br>初值:如果v0到vi有弧，则Path[i]为v0，否则为-1</p>\n<p><img src=\"https://img-blog.csdnimg.cn/038a7079b88046a596939a4f7bb02e22.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/a7e8feebb53f4e9ab82572c897006119.png#pic_center\"></p>\n<ol>\n<li><p>初始化:<br>将源点v0加到S中，即S[v0] &#x3D; true;<br>将v0到各个终点的最短路径长度初始化为权值，即D[i]&#x3D; G.arcs[v0][vi]，(vi∈V -S);<br>如果v0和顶点vi之间有弧，则将vi的前驱置为v0，即Path[i] &#x3D; v0，否则Path[i] &#x3D; -1。</p>\n</li>\n<li><p>循环n-1次，执行以下操作:<br>选择下一条最短路径的终点vk，使得:D[k]&#x3D;Min{D[i]viEV-S}<br>将vk加到S中，即S[vk] &#x3D; true。<br>更新从v0出发到集合V-S上任一顶点的最短路径的长度，同时更改vi的前驱为vk。<br>若S[i]&#x3D;false 且D[k]+G.arcs[k][i]&lt;D[i]，则更新D[i]-D[k]+ G.arcs[k][i; Path [i]&#x3D;k;。</p>\n</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//最短路径--迪杰斯特拉算法</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MaxInt</span><span style=\"color: #BABED8\"> 32767                    \t\t\t\t\t//表示极大值，即∞</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100                       \t\t\t\t\t//最大顶点数</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t\t\t\t\t//假设顶点的数据类型为字符型 </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                  \t\t\t\t\t\t//假设边的权值类型为整型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t                    \t\t\t\t//用于记录最短路的长度</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">bool</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">bool</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">          \t\t\t\t\t\t\t//标记顶点是否进入S集合</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">Path</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t//用于记录最短路顶点的前驱</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//------------图的邻接矩阵-----------------</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType </span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t//顶点表 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType </span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">      \t\t\t\t\t\t//邻接矩阵 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t\t\t\t\t//图的当前点数和边数 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerTexType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //确定点v在G中的位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//LocateVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //采用邻接矩阵表示法，创建无向网G </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入总顶点数，总边数，以空格隔开:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//输入总顶点数，总边数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入点的名称:，如a</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #F07178\">   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个点的名称:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                        \t\t\t//依次输入点的信息 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">                \t\t\t//初始化邻接矩阵，边的权值均置为极大值MaxInt </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">   </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> MaxInt</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入边依附的顶点及权值，如a b 7</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//构造邻接矩阵 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        VerTexType v1 </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcType w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">k </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">条边依附的顶点及权值:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t//输入一条边依附的顶点及权值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\">  j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t//确定v1和v2在G中的位置，即顶点数组的下标 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t//边&lt;v1, v2&gt;的权值置为w </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//置&lt;v1, v2&gt;的对称边&lt;v2, v1&gt;的权值为w </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//CreateUDN</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ShortestPath_DIJ</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v0</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //用Dijkstra算法求有向网G的v0顶点到其余顶点的最短路径 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> v </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> min</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> n </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                    \t\t\t\t\t//n为G中顶点的个数 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">v </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> v </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">             \t\t\t\t\t//n个顶点依次初始化 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                  \t\t\t\t\t\t//S初始为空集 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v0</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">           \t\t\t\t\t//将v0到各个终点的最短路径长度初始化为弧上的权值 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> MaxInt</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\">  Path </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> v0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">  \t\t\t\t\t//如果v0和v之间有弧，则将v的前驱置为v0 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> Path </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">               \t\t\t\t\t//如果v0和v之间无弧，则将v的前驱置为-1 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    S</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v0</span><span style=\"color: #89DDFF\">]=true;</span><span style=\"color: #676E95; font-style: italic\">                    \t\t\t\t\t\t\t//将v0加入S </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v0</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                      \t\t\t\t\t\t\t//源点到源点的距离为0 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    /*―初始化结束，开始主循环，每次求得v0到某个顶点v的最短路径，将v加到S集―*/</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t//对其余n-1个顶点，依次进行计算 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        min</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> MaxInt</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">w </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> w </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> min</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//选择一条当前的最短路径，终点为v </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                v </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                min </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//if         \t</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">]=true;</span><span style=\"color: #676E95; font-style: italic\">                   \t\t\t\t\t\t//将v加入S </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">w </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">w </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">           \t\t\t\t\t//更新从v0出发到集合V?S上所有顶点的最短路径长度 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">]))&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">   \t\t\t\t//更新D[w] </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                Path </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> v</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t\t\t\t//更改w的前驱为v </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//if </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for  </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//ShortestPath_DIJ</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DisplayPath</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">begin</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">temp</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //显示最短路</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Path</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">temp</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">DisplayPath</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> begin </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">Path</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">temp</span><span style=\"color: #89DDFF\">]);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Path</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">temp</span><span style=\"color: #89DDFF\">]]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">--&gt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//DisplayPath</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">************迪杰斯特拉算法**************</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    AMGraph G</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">num_start </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> num_destination</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    VerTexType start </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> destination</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">*****无向网G创建完成！*****</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> MaxInt</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\t</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">∞</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\t</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> MaxInt</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">∞</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请依次输入起始点、终点名称：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> start </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> destination</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    num_start </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> start</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    num_destination </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> destination</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">ShortestPath_DIJ</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> num_start</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">最短路径为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">DisplayPath</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> num_start </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> num_destination</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">num_destination</span><span style=\"color: #89DDFF\">]&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//main</span></span>\n<span class=\"line\"></span></code></pre></div><p><img src=\"https://img-blog.csdnimg.cn/4e8ee1ea34e94afc836d76cfa65c6023.png#pic_center\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/4c87f7ab6ffd433789da118140851b63.png#pic_center\"></p>\n<p><strong>每一对顶点之间的最短路径——弗洛伊德(Floyd)算法</strong></p>\n<p>从图的带权邻接矩阵G.arcs出发，<br>假设求顶点Vi到Vj的最短路径。如果从Vi到Vj有弧，则从Vi到Vj存在—条长度为G.arcs[i]i]的路径，但该路径是否一定是最短路径，还需要进行n次试探。</p>\n<ol>\n<li>第一次，判别( Vi, V0 ）和( V0, Vj ) ，即判别(Vi, V0 , Vj)是否存在，若存在，则比较（Vi,<br>Vj）和(Vi, V0 , Vj)的长度，取长度较短的为从Vi到Vj的中间顶点序号不大于0的最短路径。</li>\n<li>第二次，再加一个顶点V1，如果(Vi,… , V1)和(V1,…,<br>Vj)分别是当前找到的中间顶点序号不大于0的最短路径，那么(Vi,… ,V1,…,<br>Vj）就有可能是从Vi到Vj的中间顶点序号不大于1的最短路径。将它和已经得到的从Vi到Vj之间顶点序号不大于0的最短路径相比较，取较短者为从Vi到Vj的中间顶点序号不大于1的最短路径。</li>\n<li>第三次，再加一个顶点V2，继续进行试探。</li>\n</ol>\n<p><strong>求最短路径步骤:</strong></p>\n<ol>\n<li>初始时设置一个n阶方阵,令其对角线元素为0，若存在弧&lt;V<del>i</del>，V<del>j</del> &gt;，则对应元素为权值;否则为无穷大。</li>\n<li>逐步试着在原直接路径中增加中间顶点，若加入中间顶点后路径变短，则修改之;否则，维持原值。所有顶点试探完毕，算法结束。</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/cec207c29cff42d29bc1a5b9cdefad02.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/4efd153b2556458a96cbc792a5a112b5.png#pic_center\"></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//弗洛伊德算法</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MaxInt</span><span style=\"color: #BABED8\"> 32767                    \t//表示极大值，即∞</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100                       \t//最大顶点数</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t//假设顶点的数据类型为字符型 </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                  \t\t//假设边的权值类型为整型 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> Path</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//最短路径上顶点vj的前一顶点的序号</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//记录顶点vi和vj之间的最短路径长度</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//------------图的邻接矩阵---------------</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType </span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">            \t\t//顶点表 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType </span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">      \t\t//邻接矩阵 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//图的当前点数和边数 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerTexType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //确定点v在G中的位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//LocateVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //采用邻接矩阵表示法，创建有向网G </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入总顶点数，总边数，以空格隔开:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//输入总顶点数，总边数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入点的名称，如a</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #F07178\">   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个点的名称:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                        \t\t\t//依次输入点的信息 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">                \t\t\t//初始化邻接矩阵，边的权值均置为极大值MaxInt </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #F07178\">  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> MaxInt</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入边依附的顶点及权值，如a b 3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//构造邻接矩阵 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        VerTexType v1 </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcType w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">k </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">条边依附的顶点及权值:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                           //输入一条边依附的顶点及权值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\">  j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t//确定v1和v2在G中的位置，即顶点数组的下标 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t//边&lt;v1, v2&gt;的权值置为w </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//CreateUDN </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ShortestPath_Floyed</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //用Floyd算法求有向网G中各对顶点i和j之间的最短路径 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">          \t\t//各对结点之间初始已知路径及距离 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> MaxInt </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> i </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\">  </span><span style=\"color: #BABED8\">Path</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">  \t//如果i和j之间有弧，则将j的前驱置为i </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> Path </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t//如果i和j之间无弧，则将j的前驱置为-1 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">])&#123;</span><span style=\"color: #676E95; font-style: italic\">   \t\t//从i经k到j的一条路径更短 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                        </span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">]+</span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">    \t\t//更新D[i][j] </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                        </span><span style=\"color: #BABED8\">Path</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Path</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">       \t\t\t//更改j的前驱为k </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//if </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//ShortestPath_Floyed</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DisplayPath</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">AMGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">begin</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">temp</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //显示最短路径</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Path</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">begin</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">temp</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">DisplayPath</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> begin </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">Path</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">begin</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">temp</span><span style=\"color: #89DDFF\">]);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Path</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">begin</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">temp</span><span style=\"color: #89DDFF\">]]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">--&gt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//DisplayPath</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">************弗洛伊德算法**************</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    AMGraph G</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> start </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> destination</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> num_start </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> num_destination</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">有向网G创建完成！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">ShortestPath_Floyed</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请依次输入路径的起点与终点的名称：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> start </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> destination</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    num_start </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> start</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    num_destination </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> destination</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">DisplayPath</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> num_start </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> num_destination</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">num_destination</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">最短路径的长度为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">num_start</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">num_destination</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//main</span></span></code></pre></div><h2 id=\"③-拓扑排序\"><a href=\"#③-拓扑排序\" class=\"headerlink\" title=\"③.拓扑排序\"></a>③.拓扑排序</h2><p>对一项工程，我们最关心两个问题:</p>\n<ol>\n<li>工程能否顺利完成;(拓扑排序)</li>\n<li>整个工程完成所必需的最短工期。(关键路径)</li>\n</ol>\n<p>&#x3D;&#x3D;有向无环图—-无环的有向图，简称DAG图( directed acycling graph)&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;AOV网:用一个有向图表示一个工程的各子工程及其相互制约的关系，其中以顶点表示活动，弧表示活动之间的优先制约关系，称这种有向图为顶点表示活动的网，简称AOV网。&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;<strong>AOV网应该是一个有向无环图即DAG图。</strong>&#x3D;&#x3D;</p>\n<p><strong>拓扑排序</strong>：</p>\n<p>就是将AOV网中所有顶点排成一个线性序列(称为拓扑序列)，该序列满足∶<br>若在AOV网中由顶点vi到vj有一条路径，则在该线性序列中的顶点v<del>i</del>必定在v<del>j</del>之前</p>\n<ol>\n<li>在有向图中选一个无前驱的顶点且输出它（即入度为0)</li>\n<li>从图中删除该顶点和所有以它为起点的边</li>\n<li>重复(1)(2)，直至不存在无前驱的顶点</li>\n<li>若此时输出的顶点数小于有向图的顶点数，则说明有向图中存在环，否则输出的顶点序列为一个拓扑序列</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/8b9b6fa6e0574148b006be0fbe84b6ca.png#pic_center\"></p>\n<p>拓扑排序实现</p>\n<ol>\n<li><p>求出个顶点的入度存入数组indegree[i]中，并将入度为0的顶点入栈。</p>\n</li>\n<li><p>只要栈不空，重复以下操作<br>- 将栈顶顶点vi出栈并保存在拓扑序列数组topo中;<br>- 对顶点vi的每个邻接点vk的入度减1，如果vk的入度变为0，则将vk入栈</p>\n</li>\n<li><p>如果输出顶点个数少于AOV网的顶点个数，则网址存在有向环，无法进行拓扑排序，否则拓扑排序成功。</p>\n</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//拓扑排序</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100                       \t//最大顶点数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">OK</span><span style=\"color: #BABED8\"> 1\t</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ERROR</span><span style=\"color: #BABED8\"> 0 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//- - - - -图的邻接表存储表示- - - - - </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">ArcNode</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//边结点 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> adjvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                          \t//该边所指向的顶点的位置 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">ArcNode</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">*</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">          \t\t//指向下一条边的指针 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ArcNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">VNode</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                    \t//顶点信息 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//指向第一条依附该顶点的边的指针 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">VNode</span><span style=\"color: #F07178\">, </span><span style=\"color: #FFCB6B\">AdjList</span><span style=\"color: #F07178\">[</span><span style=\"color: #FFCB6B\">MVNum</span><span style=\"color: #F07178\">]</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">               \t\t//AdjList表示邻接表类型 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    AdjList vertices</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                 \t\t//邻接表 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    AdjList converse_vertices</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t//逆邻接表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t//图的当前顶点数和边数 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//- - - - - - - - - - - - - - - -</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//- - - - -顺序栈的定义- - - - -</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">base</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">top</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> stacksize</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">spStack</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//- - - - - - - - - - - - - - - -</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> indegree</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//数组indegree存放个顶点的入度</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">spStack S</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//------------栈的相关操作----------------------</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">spStack</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //初始化栈</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">stacksize </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> MVNum</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//InitStack</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">spStack</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">i</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //进栈</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">stacksize</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//Push</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">spStack</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">i</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //出栈</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*--</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//Pop</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">bool</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">StackEmpty</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">spStack</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //判断栈是否为空</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//StackEmpty</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//-------------------------------------------------</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerTexType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //确定点v在G中的位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">data </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//LocateVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDG</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //创建有向图G的邻接表、逆邻接表</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入总顶点数，总边数，以空格隔开:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t//输入总顶点数，总边数 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入点的名称，如a</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">          \t//输入各点，构造表头结点表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个点的名称:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">           \t//输入顶点值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">converse_vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">data</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //初始化表头结点的指针域为NULL </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">=NULL;</span><span style=\"color: #F07178\">\t\t\t</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">converse_vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">=NULL;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入边依附的顶点，如a b</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">        \t\t//输入各边，构造邻接表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        VerTexType v1 </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">k </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">条边依附的顶点:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//输入一条边依附的两个顶点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\">  j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //确定v1和v2在G中位置，即顶点在G.vertices中的序号 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">p1</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #F07178\"> ArcNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">               \t//生成一个新的边结点*p1 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p1</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                   \t\t//邻接点序号为j</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p1</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">  </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">p1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //将新结点*p1插入顶点vi的边表头部</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">p2</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #F07178\"> ArcNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">               \t//生成一个新的边结点*p1 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p2</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                   \t\t//逆邻接点序号为i</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p2</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">converse_vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">  </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">converse_vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">p2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //将新结点*p1插入顶点vi的边表头部</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> OK</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//CreateUDG</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FindInDegree</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //求出各顶点的入度存入数组indegree中 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> count</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        count </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">converse_vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                count</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">indegree</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> count</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//FindInDegree</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">TopologicalSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">topo</span><span style=\"color: #89DDFF\">[])&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //有向图G采用邻接表存储结构 </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //若G无回路，则生成G的一个拓扑序列topo[]并返回OK，否则ERROR </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> m</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">FindInDegree</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">              \t\t\t\t//求出各顶点的入度存入数组indegree中 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">                          \t\t//栈S初始化为空 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">indegree</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">     \t\t//入度为0者进栈 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    m </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                               \t\t//对输出顶点计数，初始为0 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #82AAFF\">StackEmpty</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">))&#123;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//栈S非空 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">                          \t//将栈顶顶点vi出栈</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">topo</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                         \t\t//将vi保存在拓扑序列数组topo中 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                             \t\t//对输出顶点计数 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">    //p指向vi的第一个邻接点 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//vk为vi的邻接点   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">indegree</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                   \t//vi的每个邻接点的入度减1 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">indegree</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\">  </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> k</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t//若入度减为0，则入栈 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//p指向顶点vi下一个邻接结点 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//while </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//while</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">m </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">    \t\t\t//该有向图有回路 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//TopologicalSort </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">************拓扑排序**************</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ALGraph G</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreateUDG</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">topo </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">有向图的邻接表、逆邻接表创建完成!</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">TopologicalSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> topo</span><span style=\"color: #89DDFF\">))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">该有向图的拓扑有序序列为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">++)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">topo</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]].</span><span style=\"color: #BABED8\">data</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> , </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">topo</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]].</span><span style=\"color: #BABED8\">data</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">网中存在环，无法进行拓扑排序！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//main</span></span>\n<span class=\"line\"></span></code></pre></div><h2 id=\"④-关键路径\"><a href=\"#④-关键路径\" class=\"headerlink\" title=\"④.关键路径\"></a>④.关键路径</h2><p><strong>AOE网(Activity On Edges)—用边表示活动的网络用一个有向图表示一个工程的各子工程及其相互制约的关系，弧表示活动，权表示活动持续的时间，顶点表示事件（活动的开始或结束时间)，称这种有向图为边表示活动的网，简称AOE网;AOE网用来估算工程的完成时间。</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">名称</th>\n<th align=\"center\">解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">源点</td>\n<td align=\"center\">入度为0的顶点（只有1个)</td>\n</tr>\n<tr>\n<td align=\"center\">汇点</td>\n<td align=\"center\">出度为0的顶点(只有1个)</td>\n</tr>\n<tr>\n<td align=\"center\">路径长度</td>\n<td align=\"center\">路径上各活动持续时间之和</td>\n</tr>\n<tr>\n<td align=\"center\">整个工程完成的时间</td>\n<td align=\"center\">从有向图的源点到汇点的最长路径</td>\n</tr>\n<tr>\n<td align=\"center\">关键路径</td>\n<td align=\"center\">路径长度最长的路径</td>\n</tr>\n<tr>\n<td align=\"center\">关键活动</td>\n<td align=\"center\">关键路径上的活动，边上的权值增加将使有向图上的最长路径的长度增加。</td>\n</tr>\n<tr>\n<td align=\"center\">ve(j)</td>\n<td align=\"center\">表示事件V的最早发生时间</td>\n</tr>\n<tr>\n<td align=\"center\">vl(j)</td>\n<td align=\"center\">表示事件V,的最迟发生时间</td>\n</tr>\n<tr>\n<td align=\"center\">e(i)</td>\n<td align=\"center\">表示活动a<del>i</del>的最早开始时间</td>\n</tr>\n<tr>\n<td align=\"center\">l(i)</td>\n<td align=\"center\">表示活动a<del>i</del>的最迟开始时间</td>\n</tr>\n<tr>\n<td align=\"center\">l(i)-e(i)</td>\n<td align=\"center\">表示完成活动a<del>i</del>的时间余量</td>\n</tr>\n</tbody></table>\n<p>注意:在一个AOE网中，可以有不止一条的关键路径。</p>\n<p><strong>关键路径</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/03bd98a06aaf4878a15c01aa52f1cf08.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/1026465e17eb41a19c8436642a993ae6.png#pic_center\"></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//关键路径算法</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100                       \t//最大顶点数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">BDNum</span><span style=\"color: #BABED8\"> MVNum * (MVNum - 1)\t\t\t//最大边数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">OK</span><span style=\"color: #BABED8\"> 1\t</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ERROR</span><span style=\"color: #BABED8\"> 0 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//- - - - -图的邻接表存储表示- - - - - </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">ArcNode</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//边结点 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> adjvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                          \t//该边所指向的顶点的位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> weight</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t//权值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">ArcNode</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">*</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">          \t\t//指向下一条边的指针 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ArcNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">VNode</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                    \t//顶点信息</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//指向第一条依附该顶点的边的指针 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">VNode</span><span style=\"color: #F07178\">, </span><span style=\"color: #FFCB6B\">AdjList</span><span style=\"color: #F07178\">[</span><span style=\"color: #FFCB6B\">MVNum</span><span style=\"color: #F07178\">]</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">               \t\t//AdjList表示邻接表类型 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    AdjList vertices</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                 \t\t//邻接表 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    AdjList converse_vertices</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t//逆邻接表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t//图的当前顶点数和边数 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//- - - - - - - - - - - - - - - -</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//- - - - -顺序栈的定义- - - - -</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">base</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">top</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> stacksize</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">spStack</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//- - - - - - - - - - - - - - - -</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> indegree</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//数组indegree存放个顶点的入度</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ve</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">BDNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t//事件vi的最早发生时间</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> vl</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">BDNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t//事件vi的最迟发生时间</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> topo</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//记录拓扑序列的顶点序号</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">spStack S</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//----------------栈的操作--------------------</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">spStack</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //栈的初始化</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">stacksize </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> MVNum</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//InitStack</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">spStack</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">i</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //入栈</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">stacksize</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//Push</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">spStack</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">i</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //出栈</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*--</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//Pop</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">bool</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">StackEmpty</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">spStack</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //判断栈是否为空</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//StackEmpty</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//---------------------------------------</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerTexType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //确定点v在G中的位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">data </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//LocateVex</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDG</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //创建有向图G的邻接表、逆邻接表</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入总顶点数，总边数，以空格隔开:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t//输入总顶点数，总边数 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入点的名称，如a</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">          \t\t//输入各点，构造表头结点表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个点的名称:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">           \t\t//输入顶点值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">converse_vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">data</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //初始化表头结点的指针域为NULL </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">=NULL;</span><span style=\"color: #F07178\">\t\t\t</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">converse_vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">=NULL;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入边依附的顶点及其权值，如a b 3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">        \t\t\t//输入各边，构造邻接表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        VerTexType v1 </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">k </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">条边依附的顶点及其权值:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//输入一条边依附的两个顶点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\">  j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //确定v1和v2在G中位置，即顶点在G.vertices中的序号 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">p1</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #F07178\"> ArcNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">               \t\t//生成一个新的边结点*p1 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p1</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                   \t\t\t//邻接点序号为j</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p1</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">  </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">p1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p1</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">weight</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //将新结点*p1插入顶点vi的边表头部</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">p2</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #F07178\"> ArcNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">               \t\t//生成一个新的边结点*p1 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p2</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                   \t\t\t//逆邻接点序号为i</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p2</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">converse_vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">  </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">converse_vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">p2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">p2</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">weight</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //将新结点*p1插入顶点vi的边表头部</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> OK</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//CreateUDG</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FindInDegree</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //求出各顶点的入度存入数组indegree中 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> count</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        count </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">converse_vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                count</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//if</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">indegree</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> count</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//FindInDegree</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">TopologicalOrder</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">topo</span><span style=\"color: #89DDFF\">[])&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //有向图G采用邻接表存储结构 </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //若G无回路，则生成G的一个拓扑序列topo[]并返回OK，否则ERROR </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> m</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">FindInDegree</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">              \t\t\t\t//求出各顶点的入度存入数组indegree中 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">                          \t\t//栈S初始化为空 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">indegree</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">     \t\t//入度为0者进栈 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    m </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                               \t\t//对输出顶点计数，初始为0 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #82AAFF\">StackEmpty</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">))&#123;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//栈S非空 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">                          \t//将栈顶顶点vi出栈</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">topo</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                         \t\t//将vi保存在拓扑序列数组topo中 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                             \t\t//对输出顶点计数 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">    //p指向vi的第一个邻接点 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//vk为vi的邻接点   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">indegree</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                   \t//vi的每个邻接点的入度减1 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">indegree</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\">  </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> k</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t//若入度减为0，则入栈 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//p指向顶点vi下一个邻接结点 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//while </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//while</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">m </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">    \t\t\t//该有向图有回路 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//TopologicalOrder</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CriticalPath</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">ALGraph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //G为邻接表存储的有向网，输出G的各项关键活动</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> n </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> e </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> l</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #82AAFF\">TopologicalOrder</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> topo</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //调用拓扑排序算法，使拓扑序列保存在topo中，若调用失败，则存在有向环，返回ERROR </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    n </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                  \t\t\t\t//n为顶点个数 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #676E95; font-style: italic\">               \t\t//给每个事件的最早发生时间置初值0 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        ve</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    /*――――――――――按拓扑次序求每个事件的最早发生时间－――――－―――――*/</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)&#123;</span><span style=\"color: #F07178\">                 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">topo</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                   \t\t\t//取得拓扑序列中的顶点序号k             </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">    //p指向k的第一个邻接顶点  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">p </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL)&#123;</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t//依次更新k的所有邻接顶点的最早发生时间   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">               \t\t//j为邻接顶点的序号                   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ve</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">ve</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">weight</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">    \t//更新顶点j的最早发生时间ve[j] </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">ve</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">ve</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">weight</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">     </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t//p指向k的下一个邻接顶点  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> //while </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> //for </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #676E95; font-style: italic\">                 \t\t\t//给每个事件的最迟发生时间置初值ve[n-1] </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        vl</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">ve</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    /*――――――――――按逆拓扑次序求每个事件的最迟发生时间－――――－―――――*/</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> n </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">--)&#123;</span><span style=\"color: #F07178\">               </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">topo</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                   \t\t\t//取得拓扑序列中的顶点序号k             </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">    //p指向k的第一个邻接顶点  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">p </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL)&#123;</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t//根据k的邻接点，更新k的最迟发生时间   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t//j为邻接顶点的序号                   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">vl</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">vl</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">weight</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">    \t//更新顶点k的最迟发生时间vl[k] </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">vl</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">vl</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">weight</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">       </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t//p指向k的下一个邻接顶点  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//while </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    /*――――――――――――判断每一活动是否为关键活动－――――――－―――――*/</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">关键活动路径为:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)&#123;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//每次循环针对vi为活动开始点的所有活动 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        ArcNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">firstarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">    //p指向i的第一个邻接顶点  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">p </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\">    </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">adjvex</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">             \t\t\t//j为i的邻接顶点的序号    </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">ve</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                 \t\t\t//计算活动&lt;vi, vj&gt;的最早开始时间 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            l </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">vl</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">weight</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">      \t\t//计算活动&lt;vi, vj&gt;的最迟开始时间 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">e </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> l</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">               \t\t\t//若为关键活动，则输出&lt;vi, vj&gt; </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">data</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">--&gt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vertices</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">data</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">nextarc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">              \t\t//p指向i的下一个邻接顶点  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> //while </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> //for  </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//CriticalPath</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">************关键路径算法**************</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ALGraph G</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreateUDG</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">topo </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">有向图创建完成!</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #82AAFF\">CriticalPath</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">网中存在环，无法进行拓扑排序！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//main</span></span>\n<span class=\"line\"></span></code></pre></div><p>例：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/0112e31c04c044fea7681f791d8f37af.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/07d539f42eb9421989d5e7f8f0a219fc.png#pic_center\"></p>\n<hr>\n<h1 id=\"6、总结\"><a href=\"#6、总结\" class=\"headerlink\" title=\"6、总结\"></a>6、总结</h1><p><img src=\"https://img-blog.csdnimg.cn/bb6f82575a8441bbb467695e7c1674d0.png#pic_center\"></p>\n<p>(1)根据不同的分类规则,图分为多种类型:<strong>无向图、有向图、完全图、连通图、强连通图、带权图(网)、稀疏图和稠密图</strong>等。邻接点、路径、回路、度、连通分量、生成树等是在图的算法设计中常用到的重要术语。</p>\n<p>(2)图的存储方式有两大类:<strong>以边集合方式的表示法和以链接方式的表示法</strong>。其中，以边集合方式表示的为邻接矩阵，以链接方式表示的包括邻接表、十字链表和邻接多重表。邻接矩阵表示法借助二维数组来表示元素之间的关系，实现起来较为简单;邻接表、十字链表和邻接多重表都属于链式存储结构，实现起来较为复杂。在实际应用中具体采取哪种存储表示，可以根据图的类型和实际算法的基本思想进行选择。其中，邻接矩阵和邻接表是两种常用的存储结构，二者之间的比较如下图所示。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/6eadb60a2e3d4a1d98c3bb32b5545ae7.png#pic_center\"></p>\n<p>( 3 )图的遍历算法是实现图的其他运算的基础，<strong>图的遍历方法有两种:深度优先搜索遍历和广度优先搜索遍历。</strong>深度优先搜索遍历类似于树的先序遍历，借助于栈结构来实现(递归);广度优先搜索遍历类似于树的层次遍历，借助于队列结构来实现。两种遍历方法的不同之处仅仅在于对顶点访问的顺序不同，所以时间复杂度相同。当用邻接矩阵存储时，时间复杂度为均O(n^2^)，用邻接表存储时，时间复杂度均为O(n+e)。</p>\n<p>(4)图的很多算法与实际应用密切相关，比较常用的算法包括构造最小生成树算法、求解最短路径算法、拓扑排序和求解关键路径算法。<br>①<strong>构造最小生成树有普里姆算法和克鲁斯卡尔算法</strong>,两者都能达到同一目的。但前者算法思想的核心是归并点,时间复杂度是O(n^2^),适用于稠密网;后者是归并边,时间复杂度是O(elog<del>2</del>e),适用于稀疏网。<br>②<strong>最短路径算法</strong>:一种是<strong>迪杰斯特拉算法</strong>，求从某个源点到其余各顶点的最短路径，求解过程是按路径长度递增的次序产生最短路径，时间复杂度是O(n^2^);另一种是<strong>弗洛伊德算法</strong>，求每一对顶点之间的最短路径，时间复杂度是O(n^3^)，从实现形式上来说，这种算法比以图中的每个顶点为源点n次调用迪杰斯特拉算法更为简洁。<br>③<strong>拓扑排序和关键路径都是有向无环图的应用</strong>。拓扑排序是基于用顶点表示活动的有向图，即AOV-网。对于不存在环的有向图，图中所有顶点一定能够排成一个线性序列，即拓扑序列，拓扑序列是不唯一的。用邻接表表示图，拓扑排序的时间复杂度为O(n+e)。<br>④<strong>关键路径算法是基于用弧表示活动的有向图，即AOE-网。关键路径上的活动叫做关键活动</strong>，这些活动是影响工程进度的关键，它们的提前或拖延将使整个工程提前或拖延。关键路径是不唯一的。关键路径算法的实现是在拓扑排序的基础上，用邻接表表示图，关键路径算法的时间复杂度为O(n+e)。</p>\n<hr>\n<h1 id=\"7、例题与应用\"><a href=\"#7、例题与应用\" class=\"headerlink\" title=\"7、例题与应用\"></a>7、例题与应用</h1><p><img src=\"https://img-blog.csdnimg.cn/8ffe8a580c354314825d7454140091e5.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/e4309d6ae82d400d940897600191570c.png#pic_center\"></p>\n<ol>\n<li>编程实现如下功能：<br>（1）输入无向图的顶点数、边数及各条边的顶点对，建立用邻接矩阵表示的无向图。<br>（2）对图进行深度优先搜索和广度优先搜索遍历，并分别输出其遍历序列。</li>\n</ol>\n<p>测试样例无向图<br><img src=\"https://img-blog.csdnimg.cn/41dc11138d854308a4440953eaad5293.png#pic_center\"><br>运行结果<br><img src=\"https://img-blog.csdnimg.cn/1306f3f4609a4456a0c399a811380d54.png#pic_center\"></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">bits/stdc++.h</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MVNum</span><span style=\"color: #BABED8\"> 100</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAXQSIZE</span><span style=\"color: #BABED8\"> 100</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> VerTexType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//图的邻接矩阵存储表示</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    VerTexType </span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType </span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">MVNum</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> vexnum</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> arcnum</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//队列的定义及操作</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ArcType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">base</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> front</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> rear</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">sqQueue</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">bool</span><span style=\"color: #BABED8\"> visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">bool</span><span style=\"color: #BABED8\"> visited1</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MVNum</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FirstAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">NextAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">w</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//构建空队列Q</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">sqQueue</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> ArcType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXQSIZE</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//插入元素e为Q的新的队尾元素</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">sqQueue</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ArcType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #BABED8\"> MAXQSIZE </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> e</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #BABED8\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//判断是否为空队</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">bool</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">QueueEmpty</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">sqQueue</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//队头元素出队并置为u</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">sqQueue</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ArcType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">u</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    u </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #BABED8\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//确定点v在G中的位置</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerTexType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//采用邻接矩阵表示法，创建无向网G</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入总顶点数，总边数，以空格隔开:（例：3 2）</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入点的名称（例：a）</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个点的名称:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入边依附的顶点（例a b）</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> k </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        VerTexType v1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">k </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">条边依附的顶点:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v1 </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">LocateVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> v2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// DFS</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">w </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #BABED8\">w</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">w</span><span style=\"color: #89DDFF\">]))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #82AAFF\">DFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// BFS</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">BFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    sqQueue Q</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ArcType u</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ArcType w</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">v</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #82AAFF\">QueueEmpty</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> u</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">w </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">FirstAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> u</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\"> w </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> w </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">NextAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> u</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">w</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">true;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> w</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//返回v的第一个邻接点</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FirstAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">false)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//返回v相对于w的下一个邻接点</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">NextAdjVex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">v</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">w</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> w</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">arcs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">v</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">false)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Graph G</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreateUDN</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">无向图G创建完成！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">         </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入遍历无向图G的起始点：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    VerTexType c</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> c</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">c </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">该点不存在，请重新输入！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入遍历连通图的起始点：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> c</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">c </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexs</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">深度优先搜索遍历无向图G结果：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">DFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\"> G</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">vexnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        visited</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">广度优先搜索遍历无向图G结果：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">BFS</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">G</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div>","feature":true,"text":"图(Graph )G由两个集合V和E组成，记为G=(V,E)，其中V是顶点的有穷非空集合，E是V中顶点偶对的有穷集合，这些顶点偶对称为边。V(G)和E(G)通常分别表示图G的顶点集合和边集合，E(G)可以为空集。若E(G)为空，则图G只有顶点而没有边。...","permalink":"/post/数据结构（C语言版）-- 图笔记","photos":[],"count_time":{"symbolsCount":"62k","symbolsTime":"56 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%9B%BE%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E5%9F%BA%E6%9C%AC%E6%9C%AF%E8%AF%AD\"><span class=\"toc-text\">1、图的定义和基本术语</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A0-%E5%9B%BE%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">①.图的定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A1-%E5%9B%BE%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%9C%AF%E8%AF%AD\"><span class=\"toc-text\">②.图的基本术语</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%9B%BE%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">2、图的类型定义</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%9B%BE%E7%9A%84%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">3、图的存储结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A0-%E9%82%BB%E6%8E%A5%E7%9F%A9%E9%98%B5\"><span class=\"toc-text\">①.邻接矩阵</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A1-%E9%82%BB%E6%8E%A5%E8%A1%A8\"><span class=\"toc-text\">②.邻接表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A3-%E5%8D%81%E5%AD%97%E9%93%BE%E8%A1%A8\"><span class=\"toc-text\">④.十字链表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A3-%E9%82%BB%E6%8E%A5%E5%A4%9A%E9%87%8D%E8%A1%A8\"><span class=\"toc-text\">④.邻接多重表</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4%E3%80%81%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86\"><span class=\"toc-text\">4、图的遍历</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A0-%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">①.深度优先搜索</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A1-%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">②.广度优先搜索</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%9B%BE%E7%9A%84%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">5、图的应用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A0-%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91\"><span class=\"toc-text\">①.最小生成树</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A1-%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">②.最短路径</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A2-%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">③.拓扑排序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A3-%E5%85%B3%E9%94%AE%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">④.关键路径</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6%E3%80%81%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">6、总结</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#7%E3%80%81%E4%BE%8B%E9%A2%98%E4%B8%8E%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">7、例题与应用</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"查找","uid":"c6ad7ccbed505349c9093570c864bff1","slug":"数据结构（C语言版）-- 查找笔记","date":"2022-02-20T13:03:12.000Z","updated":"2025-07-14T15:12:20.469Z","comments":true,"path":"api/articles/数据结构（C语言版）-- 查找笔记.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/db70ceb9e22c4eebb7eb82117f4787b5.png","text":"查找是数据处理中经常使用的一种操作。本章主要介绍了对查找表的查找，查找表实际上仅仅是一个集合，为了提高查找效率，将查找表组织成不同的数据结构，主要包括3种不同结构的查找表:线性表、树表和散列表。...","permalink":"/post/数据结构（C语言版）-- 查找笔记","photos":[],"count_time":{"symbolsCount":"27k","symbolsTime":"25 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true},"next_post":{"title":"树和二叉树","uid":"50552977e0ec8094596ba83ac872ee52","slug":"数据结构（C语言版）-- 树和二叉树笔记","date":"2022-02-16T04:56:11.000Z","updated":"2025-07-14T15:12:20.469Z","comments":true,"path":"api/articles/数据结构（C语言版）-- 树和二叉树笔记.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/050b725832464411bd17f7b08e4c7ff4.png","text":"树( Tree)是n(n≥0)个结点的有限集，它或为空树(n=0)；或为非空树，对于非空树T：1. 有且仅有一个称之为根的结点;2. 除根结点以外的其余结点可分为m (m>0)个互不相交的有限集T1，T2,…，Tm，其中每一个集合本身又是一棵树，并且称为根的子树( SubTree)。...","permalink":"/post/数据结构（C语言版）-- 树和二叉树笔记","photos":[],"count_time":{"symbolsCount":"27k","symbolsTime":"25 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}