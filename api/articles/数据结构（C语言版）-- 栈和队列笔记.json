{"title":"栈和队列","uid":"32e8754bc216ad5a6afe6dae9987332f","slug":"数据结构（C语言版）-- 栈和队列笔记","date":"2022-02-13T02:39:25.000Z","updated":"2025-07-14T15:12:20.469Z","comments":true,"path":"api/articles/数据结构（C语言版）-- 栈和队列笔记.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/68983f406bb44b89b7de3accaf6351a4.png","content":"<hr>\n<h1 id=\"1、栈和队列的定义和特点\"><a href=\"#1、栈和队列的定义和特点\" class=\"headerlink\" title=\"1、栈和队列的定义和特点\"></a>1、栈和队列的定义和特点</h1><h2 id=\"①-栈的定义和特点\"><a href=\"#①-栈的定义和特点\" class=\"headerlink\" title=\"①.栈的定义和特点\"></a>①.栈的定义和特点</h2><p><strong>栈( stack）</strong>是限定仅在表尾进行插人或删除操作的线性表。因此，对栈来说，表尾端有其特殊含义，称为<strong>栈顶( top )<strong>，相应地，表头端称为</strong>栈底（ bottom )<strong>。不含元素的空表称为</strong>空栈</strong>。&#x3D;&#x3D;<strong>后进先出( Last In First Out，LIFO）</strong>&#x3D;&#x3D;</p>\n<p><img src=\"https://img-blog.csdnimg.cn/425be17ca10c42cbbc7e11cb5d5e826a.png#pic_center\"></p>\n<p>在日常生活中，有很多类似栈的例子。例如，洗干净的盘子总是逐个往上叠放在已经洗好的盘子上面，而用时从上往下逐个取用。栈的操作特点正是上述实际应用的抽象。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/36f868a236494cb59509cb339a51c5c0.png#pic_center\"></p>\n<h2 id=\"②-队列的定义和特点\"><a href=\"#②-队列的定义和特点\" class=\"headerlink\" title=\"②.队列的定义和特点\"></a>②.队列的定义和特点</h2><p>和栈相反，**队列( queue)<strong>是一种 &#x3D;&#x3D;先进先出(First In First Out，FIFO)&#x3D;&#x3D; 的线性表。它只允许在表的一端进行插入，而在另一端删除元素。这和日常生活中的排队是一致的，最早进人队列的元素最早离开。在队列中，允许插入的一端称为</strong>队尾( rear )<strong>，允许删除的一端则称为</strong>队头(front )**。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/fb8368d57f924486b3e7fbc8f3b6aa4f.png#pic_center\"></p>\n<p>队列在程序设计中也经常出现,一个最典型的例子就是操作系统中的作业排队。在允许多道程序运行的计算机系统中，同时有几个作业运行。如果运行的结果都需要通过通道输出，那就要按请求输入的先后次序排队。每当通道传输完毕可以接受新的输出任务时，队头的作业先从队列中退出做输出操作。凡是申请输出的作业都从队尾进入队列。</p>\n<hr>\n<h1 id=\"2、栈的表示和操作的实现\"><a href=\"#2、栈的表示和操作的实现\" class=\"headerlink\" title=\"2、栈的表示和操作的实现\"></a>2、栈的表示和操作的实现</h1><h2 id=\"①-栈的类型定义\"><a href=\"#①-栈的类型定义\" class=\"headerlink\" title=\"①.栈的类型定义\"></a>①.栈的类型定义</h2><p>栈的抽象数据类型定义：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/452a0d181c7f4b26976aa131865f7c60.png#pic_center\"></p>\n<h2 id=\"②-顺序栈的表示和实现\"><a href=\"#②-顺序栈的表示和实现\" class=\"headerlink\" title=\"②.顺序栈的表示和实现\"></a>②.顺序栈的表示和实现</h2><p>顺序栈是指利用顺序存储结构实现的栈，即利用一组地址连续的存储单元依次存放自栈底到栈顶的数据元素，同时附设指针 top指示栈顶元素在顺序栈中的位置。base为栈底指针，stacksize指示栈可使用的最大容量。&#x3D;&#x3D;若base &#x3D; NULL,表示栈结构不存在，base &#x3D; &#x3D; top是栈空标志，top-base &#x3D; &#x3D; stacksize是栈满标志&#x3D;&#x3D;</p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序栈的存储结构</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">base</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //栈底指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">top</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">  //栈顶指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> stacksize</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">   //可使用的最大容量</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> SqStack</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre></div><p>顺序栈中数据元素和栈指针之间的对应关系：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/3d4070d06a574a7cacced8c854ca4d05.png#pic_center\"></p>\n<p><strong>顺序栈的初始化</strong></p>\n<ol>\n<li>为顺序栈动态分配-个最大容量为MAXSIZE的数组空间，使base指向这段空间的基地址，即栈底。</li>\n<li>栈顶指针top初始为base,表示栈为空。</li>\n<li>stacksize置为栈的最大容量MAXSIZE</li>\n</ol>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new </span><span style=\"color: #BABED8\">SElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">OVERFLOW</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">stacksize</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> MAXSIZE</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>顺序栈的入栈</strong></p>\n<ol>\n<li>判断栈是否满,若满则返回ERROR。</li>\n<li>将新元素压入栈顶,栈顶指针加 1。</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/5669f3a508484cab8d236be705a5dc66.png#pic_center\"></p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> SElemType </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\"> // 插入元素e为新的栈顶元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">stacksize</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //栈满</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">     // 新元素e压入栈顶，然后栈顶指针加1(*S.top=e;S.top++;)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>顺序栈的出栈</strong></p>\n<ol>\n<li>判断栈是否空,若空则返回 ERROR。</li>\n<li>栈顶指针减1，栈顶元素出栈。</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/d193f5bfa7ec4a2ba9bc2a76f38edf40.png#pic_center\"></p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> SElemType </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\"> // 删除S的栈顶元素，用e返回其值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //栈空报错</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*--</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">     //栈顶指针减1，然后获取栈顶元素e(--S.top;e=*S.top;)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>顺序栈的实现</strong></p>\n<p>测试样例：SqStack.txt<br>测试内容：<br>A<br>B<br>C<br>D</p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/***顺序栈的实现***/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">fstream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">using namespace std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序栈定义</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">OK</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ERROR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">OVERFLOW</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">2</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\">  </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #676E95; font-style: italic\">//顺序栈存储空间的初始分配量</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> Status</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> SElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">base</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//栈底指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">top</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//栈顶指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> stacksize</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//栈可用的最大容量</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> SqStack</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序栈的初始化</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//构造一个空栈S</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new </span><span style=\"color: #BABED8\">SElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">//为顺序栈动态分配一个最大容量为MAXSIZE的数组空间</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">OVERFLOW</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> //存储分配失败</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //top初始为base，空栈</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">stacksize</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> MAXSIZE</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //stacksize置为栈的最大容量MAXSIZE</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序栈的入栈</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> SElemType </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// 插入元素e为新的栈顶元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">stacksize</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //栈满</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">*(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //元素e压入栈顶，栈顶指针加1</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序栈的出栈</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> SElemType </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//删除S的栈顶元素，用e返回其值\t</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//栈空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*(--</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> //栈顶指针减1，将栈顶元素赋给e</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//取顺序栈的栈顶元素</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">GetTop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqStack </span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//返回S的栈顶元素，不修改栈顶指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\"> //栈非空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> //返回栈顶元素的值，栈顶指针不变</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SqStack s</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> choose</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SElemType j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> t</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1.初始化</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2.入栈</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3.读栈顶元素</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">4.出栈</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">0.退出</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">    choose </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">choose </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请选择:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> choose</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">choose</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\">//顺序栈的初始化</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">成功对栈进行初始化</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">初始化栈失败</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//顺序栈的入栈</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            fstream file</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">open</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">SqStack.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">//</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #F07178\">file</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">错误！未找到文件！</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">ERROR</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">flag</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">进栈元素依次为：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">eof</span><span style=\"color: #89DDFF\">())</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    file </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fail</span><span style=\"color: #89DDFF\">())</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                        </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                        </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">栈未建立，请重新选择</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\">//顺序栈的出栈</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">flag </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> flag </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">栈顶元素为：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">GetTop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">栈中无元素，请重新选择</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\">//取顺序栈的栈顶元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">依次弹出的栈顶元素为:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> t</span><span style=\"color: #89DDFF\">))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> t </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"②-链栈的表示和实现\"><a href=\"#②-链栈的表示和实现\" class=\"headerlink\" title=\"②.链栈的表示和实现\"></a>②.链栈的表示和实现</h2><p>链栈是指采用链式存储结构实现的栈，通常链栈用单链表来表示，链栈的结点结构与单链表的结构相同。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/30c545a234924e1ba29c9009b5829283.png#pic_center\"></p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//链栈的存储结构</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #BABED8\"> StackNode</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ElemType data</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> StackNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">next</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> StackNode</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">LinkStack</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">LinkStack S</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre></div><p>由于栈的主要操作是在栈顶插人和删除，显然以链表的头部作为栈顶是最方便的，而且没必要像单链表那样为了操作方便附加一个头结点。</p>\n<p><strong>链栈的初始化</strong></p>\n<p>链栈的初始化操作就是构造一个空栈，因为没必要设头结点，所以直接将栈顶指针置空即可。</p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\"> // 构造一个空栈 S，栈顶指针置空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    S </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>链栈的入栈</strong></p>\n<ol>\n<li>为入栈元素e分配空间，用指针p指向。</li>\n<li>将新结点数据域置为e。</li>\n<li>将新结点插人栈顶。</li>\n<li>修改栈顶指针为p。</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/58852657c7a14df09c1f7379cbad6696.png#pic_center\"></p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> SElemType </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">                      //在栈顶插入元素e</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new StackNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //生成新结点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">data</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">       //将新结点数据域置为e</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> S</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">       //将新结点插入栈顶</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    S </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">             //修改栈顶指针为p</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>链栈的出栈</strong></p>\n<ol>\n<li>判断栈是否为空，若空则返回ERROR。</li>\n<li>将栈顶元素赋给e。</li>\n<li>临时保存栈顶元素的空间，以备释放。</li>\n<li>修改栈顶指针,指向新的栈顶元素。</li>\n<li>释放原栈顶元素的空间。</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/9a9dbcdb7fe54f808128ffe97bdb73dc.png#pic_center\"></p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> SElemType </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\"> //删除S的栈顶元素，用e返回其值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">S </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //栈空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">      //将栈顶元素赋给e</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> S</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            //用p临时保存栈顶元素空间，以备释放</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    S </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">      //修改栈顶指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    delete p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">         //释放原栈顶元素的空间</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>取链栈的栈顶元素</strong></p>\n<p>与顺序栈—样，当栈非空时，此操作返回当前栈顶元素的值，栈顶指针S保持不变。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/72f3a0f427ea452cafb92a698784d39c.png#pic_center\"></p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">SElemType </span><span style=\"color: #82AAFF\">GetTop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkStack </span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">S </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> S–</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F07178\"> data</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>链栈的实现</strong></p>\n<p>测试样例：SqStack.txt<br>测试内容：<br>A<br>B<br>C<br>D</p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/***链栈的实现***/</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">bits/stdc++.h</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">using namespace std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">OK</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ERROR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> Status</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> SElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//链栈定义</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #BABED8\"> StackNode</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SElemType data</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> StackNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">next</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> StackNode</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">LinkStack</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//链栈的初始化</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\"> // 构造一个空栈 S，栈顶指针置空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    S </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//链栈的入栈</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> SElemType </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\"> //在栈顶插入元素e</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    LinkStack p</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new StackNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //生成新结点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">data</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">       //将新结点数据域置为e</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> S</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">       //将新结点插入栈顶</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    S </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">             //修改栈顶指针为p</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//链栈的出栈</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> SElemType </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\"> //删除S的栈顶元素，用e返回其值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    LinkStack p</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">S </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //栈空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">      //将栈顶元素赋给e</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> S</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            //用p临时保存栈顶元素空间，以备释放</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    S </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">      //修改栈顶指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    delete p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">         //释放原栈顶元素的空间</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//取链栈的栈顶元素</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">SElemType </span><span style=\"color: #82AAFF\">GetTop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkStack </span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">                       //返回S的栈顶元素，不修改栈顶指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">S </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL)</span><span style=\"color: #676E95; font-style: italic\">      //栈非空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //返回栈顶元素的值，栈顶指针不变</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    LinkStack s</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> select</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> t</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1.初始化链栈</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2.链栈的入栈</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3.读栈顶元素</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">4.链栈的出栈</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">0.退出</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请选择:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> select</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">select</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\"> //链栈的初始化</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">成功对栈进行初始化</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">初始化栈失败</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">         </span><span style=\"color: #676E95; font-style: italic\">//链栈的入栈</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入元素个数：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> n </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个元素：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\"> n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">入栈操作成功！</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\"> //取链栈的栈顶元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">flag </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> flag </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">栈顶元素为：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                     </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">GetTop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                     </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">栈中无元素，请重新选择</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                     </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\"> //链栈的出栈</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">flag</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">依次弹出的栈顶元素为:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> t</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> t </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                     </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">栈未建立，请重新选择</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">default</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请重新输入！</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"④-栈与递归\"><a href=\"#④-栈与递归\" class=\"headerlink\" title=\"④.栈与递归\"></a>④.栈与递归</h2><p><strong>递归的定义</strong></p>\n<p>若一个对象部分地包含它自己，或用它自己给自己定义，则称这个对象是递归的;<br>若一个过程直接或间接地调用自己，则称这个过程是递归的。</p>\n<p><strong>递归实例</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/b9be94fbe77b42b6abdefe7fa393ceaa.png#pic_center\"><br><strong>过程的嵌套定义</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/165518d22a084e42a92617e5f0e83497.png\"><br><strong>分治法</strong></p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">long</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Fact</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">long</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">n</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">n </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //基本项</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        temp </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> n </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">Fact</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">n </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> //归纳项</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> temp</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><img src=\"https://img-blog.csdnimg.cn/fbdd486479e64327906280907af5addf.png#pic_center\"></p>\n<h2 id=\"⑤-思考\"><a href=\"#⑤-思考\" class=\"headerlink\" title=\"⑤.思考\"></a>⑤.思考</h2><p>问：根据栈的特性，如果进栈序列为A,B,C,D,E，能否得到D,C,E,A,B和A,C,E,D,B的出栈序列，如果不能得到请说明原因，如果可以得到请写出入栈、出栈的过程。</p>\n<p>答：出栈序列D,C,E,A,B不可能，因为D先出栈，表明这时A、B已经入栈，A为栈底，出栈时A肯定在B之后。出栈序列A,C,E,D,B可能，入栈、出栈的过程:PUSH(S,A);POP(S);PUSH(S,B);PUSH(S,C);POP(S);PUSH(S,D);PUSH(S,E);POP(S);POP(S); POP(S)。</p>\n<hr>\n<h1 id=\"3、队列的表示和操作的实现\"><a href=\"#3、队列的表示和操作的实现\" class=\"headerlink\" title=\"3、队列的表示和操作的实现\"></a>3、队列的表示和操作的实现</h1><h2 id=\"①-队列的类型定义\"><a href=\"#①-队列的类型定义\" class=\"headerlink\" title=\"①.队列的类型定义\"></a>①.队列的类型定义</h2><p>队列的抽象数据类型定义：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/6a1a56f3143c4097a99ca61f1fba15f2.png\"></p>\n<h2 id=\"②-队列的顺序表示和实现\"><a href=\"#②-队列的顺序表示和实现\" class=\"headerlink\" title=\"②.队列的顺序表示和实现\"></a>②.队列的顺序表示和实现</h2><p>和顺序栈相类似，在队列的顺序存储结构中，除了用一组地址连续的存储单元依次存放从队列头到队列尾的元素之外,尚需附设两个整型变量 front和rear分别指示队列头元素及队列尾元素的位置（后面分别称为头指针和尾指针)。队列的顺序存储结构表示如下:</p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAXQSIZE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #676E95; font-style: italic\"> //最大队列长度</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Typedef </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">base</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //存储空间的基地址</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> front</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">       //头指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> rear</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">        //尾指针</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> SqQueue</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre></div><p>顺序分配的队列中头、尾指针和元素之间的关系：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/600b8adebd4d4a2daff3713fad639c8a.png#pic_center\"></p>\n<p>假设当前队列分配的最大空间为6，则当队列处于上图（d）所示的状态时不可再继续插入新的队尾元素，否则会出现溢出现象，即因数组越界而导致程序的非法操作错误。事实上，此时队列的实际可用空间并未占满，所以这种现象称为&#x3D;&#x3D;“假溢出”&#x3D;&#x3D;。这是由“队尾入队，队头出队”这种受限制的操作造成的。解决这种“假溢出”问题一个较巧妙的办法是将顺序队列变为一个环状的空间，如下图所示，称之为循环队列。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/4826c2ff9cb442d1906f64938a1c3db5.png#pic_center\"><br>头、尾指针以及队列元素之间的关系不变，只是在循环队列中，头、尾指针“依环状增1”的操作可用“模”运算来实现。通过取模,头指针和尾指针就可以在顺序表空间内以头尾衔接的方式“循环”移动。循环队列中队空和队满的条件是：</p>\n<p>队空的条件:Q.front &#x3D; &#x3D; Q.rear<br>队满的条件:(Qrear + 1)%MAXQSIZE &#x3D; &#x3D; Q.front</p>\n<p><strong>循环队列的初始化</strong></p>\n<p>为队列分配一个最大容量为MAXSIZE的数组空间，base指向数组空间的首地址。头指针和尾指针置为零，表示队列为空。</p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new </span><span style=\"color: #BABED8\">QElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MAXQSIZE</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">OVERFLOW</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>求循环队列的长度</strong></p>\n<p>对于非循环队列，尾指针和头指针的差值便是队列长度，而对于循环队列,差值可能为负数所以需要将差值加上MAXQSIZE，然后与MAXQSIZE求余。</p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">QueueLength</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>循环队列的入队</strong></p>\n<ol>\n<li>判断队列是否满，若满则返回ERROR。</li>\n<li>将新元素插入队尾。</li>\n<li>队尾指针加1。</li>\n</ol>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">Q，QElemType </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //队满</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>循环队列的出队</strong></p>\n<ol>\n<li>判断队列是否为空，若空则返回ERROR。</li>\n<li>保存队头元素。</li>\n<li>队头指针加1。</li>\n</ol>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">Q，QElemType </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //队空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>取循环队列的队头元素</strong></p>\n<p>当队列非空时，此操作返回当前队头元素的值，队头指针保持不变。</p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">SElemType </span><span style=\"color: #82AAFF\">GetHead</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">     //队列非空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #676E95; font-style: italic\"> //返回队头元素的值，队头指针不变</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>循环队列的实现：</strong></p>\n<p>测试样例：QNode.txt<br>测试内容：<br>A<br>B<br>C<br>D</p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/***循环队列基本操作***/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">fstream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">using namespace std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAXQSIZE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">OK</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ERROR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">OVERFLOW</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">2</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> QElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> SElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> Status</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">base</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//初始化时动态分配存储空间</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> front</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//头指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> rear</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//尾指针</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> SqQueue</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//循环队列的初始化</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//构造一个空队列Q</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new </span><span style=\"color: #BABED8\">QElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MAXQSIZE</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> //为队列分配一个最大容量为MAXSIZE的数组空间</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">OVERFLOW</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> //存储分配失败</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //头指针和尾指针置为零，队列为空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//求循环队列的长度</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">QueueLength</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//返回Q的元素个数，即队列的长度</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//循环队列的入队</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> QElemType </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//插入元素e为Q的新的队尾元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\"> //尾指针在循环意义上加1后等于头指针，表明队满</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //新元素插入队尾</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //队尾指针加1</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//循环队列的出队</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> QElemType </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//删除Q的队头元素，用e返回其值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //队空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> //保存队头元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //队头指针加1</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//取循环队列的队头元素</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">SElemType </span><span style=\"color: #82AAFF\">GetHead</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//返回Q的队头元素，不修改队头指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\"> //队列非空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> //返回队头元素的值，队头指针不变</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> choose</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SqQueue Q</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QElemType e</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1.初始化</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2.入队</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3.读队头元素</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">4.出队</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">0.退出</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">    choose </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">choose </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请选择:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> choose</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">choose</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\">//链队的初始化</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">成功对队列进行初始化</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">初始化队列失败</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//链队的入队</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            fstream file</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">open</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">QNode.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #F07178\">file</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">错误！未找到文件！</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">ERROR</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">flag</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">入队的元素依次为：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">eof</span><span style=\"color: #89DDFF\">())</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    file </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fail</span><span style=\"color: #89DDFF\">())</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                        </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                        </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">队列未建立，请重新选择</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\">//取链队的队头元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">flag </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> flag </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">队头元素为：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">GetHead</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">队列中无元素，请重新选择</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\">//链队的出队</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">依次弹出的队头元素为:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> e </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"③-队列的链式表示和实现\"><a href=\"#③-队列的链式表示和实现\" class=\"headerlink\" title=\"③.队列的链式表示和实现\"></a>③.队列的链式表示和实现</h2><p>链队是指采用链式存储结构实现的队列。通常链队用单链表来表示，一个链队显然需要两个分别指示队头和队尾的指针(分别称为头指针和尾指针)才能唯一确定。这里和线性表的单链表一样，为了操作方便起见，给链队添加一个头结点，并令头指针始终指向头结点。<br><img src=\"https://img-blog.csdnimg.cn/401c8ebbf86743efae5ebab7fc851053.png#pic_center\"></p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #BABED8\"> Qnode</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QElemType data</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> Qnode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">next</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> Qnode</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">QueuePtr</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QueuePtr front</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //队头指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QueuePtr rear</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">  //队尾指针</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> LinkQueue</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>链队的初始化</strong></p>\n<ol>\n<li>生成新结点作为头结点，队头和队尾指针指向此结点。</li>\n<li>头结点的指针域置空。</li>\n</ol>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new QNode</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>链队的入队</strong></p>\n<ol>\n<li>为入队元素分配结点空间，用指针p指向。</li>\n<li>将新结点数据域置为e。</li>\n<li>将新结点插入到队尾。</li>\n<li>修改队尾指针为p。</li>\n</ol>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> QElemType </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new QNode</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">OVERFLOW</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">data</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> p</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> p</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>链队的出队</strong></p>\n<ol>\n<li>判断队列是否为空，若空则返回ERROR。</li>\n<li>临时保存队头元素的空间，以备释放。</li>\n<li>修改队头指针，指向下一个结点。</li>\n<li>判断出队元素是否为最后一个元素，若是，则将队尾指针重新赋值，指向头结点。</li>\n<li>释放原队头元素的空间。</li>\n</ol>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">Q，QElemType </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">        //若队列空，则返回ERROR</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">       // p指向队头元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">             // e保存队头元素的值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //修改头指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> p</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //如果最后一个元素被删，则</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">                          </span><span style=\"color: #676E95; font-style: italic\">//队尾指针指向头结点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    delete p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">             //释放原队头元素的空间</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>取链队的队头元素</strong></p>\n<p>与循环队列一样，当队列非空时，此操作返回当前队头元素的值，队头指针保持不变。</p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">SElemType </span><span style=\"color: #82AAFF\">GetHead</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkQueue </span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\">-&gt;</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //返回队头元素的值，队头指针不变</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>链队的实现：</strong></p>\n<p>测试样例：QNode.txt<br>测试内容：<br>A<br>B<br>C<br>D</p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/***链队的基本操作***/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">fstream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">using namespace std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">OK</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ERROR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">OVERFLOW</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">2</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> QElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> Status</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> SElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//- - - - - 队列的链式存储结构- - - - - </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #BABED8\"> QNode </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QElemType data</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #F07178\"> QNode </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">next</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> QNode</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">QueuePtr</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QueuePtr front</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //队头指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QueuePtr rear</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //队尾指针</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> LinkQueue</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//链队的初始化</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//构造一个空队列Q</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new QNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //生成新结点作为头结点，队头和队尾指针指向此结点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL;</span><span style=\"color: #676E95; font-style: italic\"> //头结点的指针域置空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//链队的入队</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> QElemType </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//插入元素e为Q的新的队尾元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QueuePtr p</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new QNode</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //为入队元素分配结点空间，用指针p指向</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">data</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //将新结点数据域置为e</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">NULL;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //将新结点插入到队尾</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //修改队尾指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//链队的出队</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> QElemType </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//删除Q的队头元素，用e返回其值 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QueuePtr p</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //若队列空，则返回ERROR</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //p指向队头元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //e保存队头元素的值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //修改头指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> p</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //最后一个元素被删，队尾指针指向头结点</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    delete p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //释放原队头元素的空间</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//取链队的队头元素</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">SElemType </span><span style=\"color: #82AAFF\">GetHead</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">LinkQueue </span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//返回Q的队头元素，不修改队头指针</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\"> //队列非空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">next</span><span style=\"color: #F07178\">-&gt;</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //返回队头元素的值，队头指针不变</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> choose</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    LinkQueue Q</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QElemType e</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1.初始化</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2.入队</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3.读队头元素</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">4.出队</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">0.退出</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">    choose </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">choose </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请选择:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> choose</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">choose</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\">//链队的初始化</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">成功对队列进行初始化</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">初始化队列失败</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//链队的入队</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            fstream file</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">open</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">QNode.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #F07178\">file</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">错误！未找到文件！</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">ERROR</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">flag</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">入队的元素依次为：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">eof</span><span style=\"color: #89DDFF\">())</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    file </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fail</span><span style=\"color: #89DDFF\">())</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                        </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                        </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">队列未建立，请重新选择</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">file</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\">//取链队的队头元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">flag </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> flag </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">队头元素为：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">GetHead</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">队列中无元素，请重新选择</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\">//链队的出队</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">依次弹出的队头元素为:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> e </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n<h1 id=\"4、栈和队列总结\"><a href=\"#4、栈和队列总结\" class=\"headerlink\" title=\"4、栈和队列总结\"></a>4、栈和队列总结</h1><p><img src=\"https://img-blog.csdnimg.cn/e827aced3ec94811b9223dd38ef8b4d6.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/1c31bbfa697c40fa8884caf47e25350b.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/fdfdef451f0541dd8682a16a33d4a5b5.png#pic_center\"></p>\n<hr>\n<h1 id=\"5、例题与应用\"><a href=\"#5、例题与应用\" class=\"headerlink\" title=\"5、例题与应用\"></a>5、例题与应用</h1><p><img src=\"https://img-blog.csdnimg.cn/7774498e7df246398c63bbc0a1089213.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/7d62ae6cf53a45089bd0ff5281f0f7c6.png#pic_center\"></p>\n<ol>\n<li>编程实现栈的如下功能：<br>（1）根据输入的栈中元素个数n和各元素值建立一个顺序栈，并输出栈中各元素值。<br>（2）将数据元素e入栈，并输出入栈后的顺序栈中各元素值。<br>（3）将顺序栈中的栈顶元素出栈，并输出出栈元素的值和出栈后顺序栈中各元素值。</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/8cbfebb988fa4703ac0d29f2fc2591c7.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/b418384d10d04a248bf2b2a17c4e5152.png#pic_center\"></p>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">bits/stdc++.h</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">using namespace std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">OK</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ERROR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> Status</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> SElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序栈定义</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">base</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">top</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> stacksize</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> SqStack</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序栈的初始化</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new </span><span style=\"color: #BABED8\">SElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">OVERFLOW</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">        //top初始为base，空栈</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">stacksize</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> MAXSIZE</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //stacksize置为栈的最大容量MAXSIZE</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序栈的遍历</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">StackTraverse</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqStack </span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">顺序栈中元素如下：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">false;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序栈的入栈</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> SElemType </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">stacksize</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">*(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //元素e压入栈顶，栈顶指针加1</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序栈的出栈</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqStack </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> SElemType </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*(--</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">top</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> //栈顶指针减1，将栈顶元素赋给e</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SqStack s</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> select</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> n</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> t</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1.初始化顺序栈</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2.顺序栈的入栈</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3.取出栈顶元素</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">4.顺序栈的出栈</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">0.退出</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #C3E88D\">请选择:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> select</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">select</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">InitStack</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">初始化栈成功</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">初始化栈失败</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #82AAFF\">StackTraverse</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入元素个数：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> n </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个元素：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\"> n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">Push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">入栈操作成功！</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #82AAFF\">StackTraverse</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">取出的栈顶元素为：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> t</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> t </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #82AAFF\">StackTraverse</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">依次弹出的栈顶元素为:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">Pop</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> t</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> t </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                 </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #82AAFF\">StackTraverse</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">default</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请重新输入！</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><ol start=\"2\">\n<li>编程实现队列的如下功能：<br>（1）根据输入的队列长度n和各元素值建立一个循环顺序表表示的队列（循环队列），并输出队列中各元素值。<br>（2）将数据元素e入队，并输出入队后的队列中各元素值。<br>（3）将循环队列的队首元素出队，并输出出队元素的值和出队后队列中各元素值</li>\n</ol>\n<div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">bits/stdc++.h</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">using namespace std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">OK</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ERROR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAXQSIZE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> QElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> SElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> Status</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序队列定义</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    QElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">base</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> front</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> rear</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> SqQueue</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//循环队列的初始化</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> new </span><span style=\"color: #BABED8\">QElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MAXQSIZE</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">exit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">OVERFLOW</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //头指针和尾指针置为零，队列为空</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序队列遍历队列</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">TarverseQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> cur </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">顺序队列中元素如下：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">cur </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">cur</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cur </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">cur </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> // 当前指针向后推移</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//求循环队列的长度</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">QueueLength</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//循环队列的入队</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> QElemType </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">               //新元素插入队尾</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //队尾指针加1</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//循环队列的出队</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Status </span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">SqQueue </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> QElemType </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">rear</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> ERROR</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">base</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                //保存队头元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Q</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">front</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #F07178\"> MAXQSIZE</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //队头指针加1</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> OK</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SqQueue Q</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> select</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> n</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1.初始化顺序队列</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2.顺序队列的入队</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3.取出队头的元素</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">4.顺序队列的出队</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">0.退出</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #C3E88D\">请选择:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> select</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">select</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\"> //链队的初始化</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">InitQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">初始化对列成功</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">初始化队列失败</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #82AAFF\">TarverseQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入元素个数：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> n </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个元素：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\"> n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cin </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">EnQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                    flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">入队操作成功！</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #82AAFF\">TarverseQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\"> //取出链队的队头元素</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">取出的队头元素为：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> e </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #82AAFF\">TarverseQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #676E95; font-style: italic\"> //链队的出队</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">依次弹出的队头元素为:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">DeQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> e</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> e </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                 </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #82AAFF\">TarverseQueue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">Q</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">default</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请重新输入！</span><span style=\"color: #BABED8\">\\n\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div>","feature":true,"text":"栈( stack）是限定仅在表尾进行插人或删除操作的线性表。因此，对栈来说，表尾端有其特殊含义，称为栈顶( top )，相应地，表头端称为栈底（ bottom )。不含元素的空表称为空栈。...","permalink":"/post/数据结构（C语言版）-- 栈和队列笔记","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"25 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">1、栈和队列的定义和特点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A0-%E6%A0%88%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">①.栈的定义和特点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A1-%E9%98%9F%E5%88%97%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">②.队列的定义和特点</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%A0%88%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E6%93%8D%E4%BD%9C%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">2、栈的表示和操作的实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A0-%E6%A0%88%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">①.栈的类型定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A1-%E9%A1%BA%E5%BA%8F%E6%A0%88%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">②.顺序栈的表示和实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A1-%E9%93%BE%E6%A0%88%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">②.链栈的表示和实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A3-%E6%A0%88%E4%B8%8E%E9%80%92%E5%BD%92\"><span class=\"toc-text\">④.栈与递归</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A4-%E6%80%9D%E8%80%83\"><span class=\"toc-text\">⑤.思考</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3%E3%80%81%E9%98%9F%E5%88%97%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E6%93%8D%E4%BD%9C%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">3、队列的表示和操作的实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A0-%E9%98%9F%E5%88%97%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">①.队列的类型定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A1-%E9%98%9F%E5%88%97%E7%9A%84%E9%A1%BA%E5%BA%8F%E8%A1%A8%E7%A4%BA%E5%92%8C%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">②.队列的顺序表示和实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A2-%E9%98%9F%E5%88%97%E7%9A%84%E9%93%BE%E5%BC%8F%E8%A1%A8%E7%A4%BA%E5%92%8C%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">③.队列的链式表示和实现</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4%E3%80%81%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">4、栈和队列总结</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5%E3%80%81%E4%BE%8B%E9%A2%98%E4%B8%8E%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">5、例题与应用</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"串、数组和广义表","uid":"1d7c86a35a2f9ff3da1b325afe7a5b86","slug":"数据结构（C语言版）-- 串、数组和广义表笔记","date":"2022-02-16T04:53:52.000Z","updated":"2025-07-14T15:12:20.468Z","comments":true,"path":"api/articles/数据结构（C语言版）-- 串、数组和广义表笔记.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/e0c03943274e4aef94cf846304d75a73.png","text":"串(String)----零个或多个字符组成的有限序列，是一种特殊的线性表，其数据元素为一个字符，即内容受限的线性表。数组是由类型相同的数据元素构成的有序集合，每个元素称为数组元素。广义表：n ( ≥0)个表元素组成的有限序列。...","permalink":"/post/数据结构（C语言版）-- 串、数组和广义表笔记","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true},"next_post":{"title":"线性表","uid":"b96df039eaa03d2a5634c2cc83e5cad0","slug":"数据结构（C语言版）-- 线性表笔记","date":"2022-02-10T01:41:07.000Z","updated":"2025-07-14T15:12:20.469Z","comments":true,"path":"api/articles/数据结构（C语言版）-- 线性表笔记.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/cc67f280b3744197a9dfe94df485796b.png","text":"线性表的顺序表示指的是用一组地址连续的存储单元依次存储线性表的数据元素，这种表示也称作线性表的顺序存储结构或顺序映像。线性表链式存储结构的特点：用一组任意的存储单元存储线性表的数据元素，这组存储单元可以是连续的，也可以是不连续的。...","permalink":"/post/数据结构（C语言版）-- 线性表笔记","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}