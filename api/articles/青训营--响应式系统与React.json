{"title":"响应式系统与React","uid":"daa70c85e66020d3179c9d18aed40c23","slug":"青训营--响应式系统与React","date":"2022-01-21T07:55:49.000Z","updated":"2025-07-14T15:12:20.472Z","comments":true,"path":"api/articles/青训营--响应式系统与React.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","content":"<h2 id=\"1、React的历史与应用\"><a href=\"#1、React的历史与应用\" class=\"headerlink\" title=\"1、React的历史与应用\"></a>1、React的历史与应用</h2><p> <strong>React的历史</strong></p>\n<ul>\n<li>2010年Facebook在其php生态中引入了xhp框架，首次引入了组合式组件的思想，启发了后来的React的设计。</li>\n<li>2011年Jordan Walke创造了FaxJs,也就是后来的React原型:</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/49796154a6e5414cb3342f128b014d89.png#pic_center\"></p>\n<ul>\n<li>2013年React正式开源，在2013 Jsconf上Jordan Walke介绍了这款全新的框架:<br><img src=\"https://img-blog.csdnimg.cn/6b179b4197324ee98be60cbcbd06d9ce.png#pic_center\"></li>\n<li>2012年在Facebook收购Instagram后，该Faxus项目在内部得到使用。Jordan walke基于FaxJs的经验，创造了React。</li>\n<li>2014年–今天生态大爆发.各种围绕 React的新工具&#x2F;新框架开始涌现…</li>\n</ul>\n<p> <strong>React的应用</strong></p>\n<ol>\n<li>前端应用开发，如Facebook，Instagram,Netflix网页版。</li>\n<li>移动原生应用开发，如Instagram,Discord,Oculus。</li>\n<li>结合Electron，进行桌面应用开发。</li>\n</ol>\n<hr>\n<h2 id=\"2、React的设计思路\"><a href=\"#2、React的设计思路\" class=\"headerlink\" title=\"2、React的设计思路\"></a>2、React的设计思路</h2><p><strong>UI编程痛点</strong></p>\n<ul>\n<li>状态更新 UI不会自动更新 需要手动地调用DOM进行更新</li>\n<li>欠缺基本的代码层面的封装和隔离 代码层面没有组件化</li>\n<li>UI之间的数据依赖关系 需要手动维护 如果依赖链路长 则会遇到”Callback Hell”</li>\n</ul>\n<p><strong>响应式</strong><br><img src=\"https://img-blog.csdnimg.cn/5cfc23beeef04ab690e3a3aeaeac01fc.png#pic_center\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/3edfbd89deb546f5a2a6235bf3088017.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/5101269d2e034e5f8128e101d037746d.png#pic_center\"><br><strong>响应式编程</strong></p>\n<ol>\n<li>状态更新，UI自动更新。<br>“状态更新，UI不会自动更新，需要手动地调用DOM进行更新。”</li>\n<li>前端代码组件化，可复用，可封装。<br>“欠缺基本的代码层面的封装和隔离，代码层面没有组件化。”</li>\n<li>状态之间的相互依赖关系，只需声明即可。<br>“UI之间的数据依赖关系，需要手动维护，如果依赖链路长，则会遇到“Callback Hell”。”</li>\n</ol>\n<p><strong>组件化：</strong><br><img src=\"https://img-blog.csdnimg.cn/5e21bb6de35848aaab778ee85326dbc7.png#pic_center\"><br><strong>总结：</strong></p>\n<ol>\n<li>组件时组件的组合&#x2F;原子组件</li>\n<li>组件内拥有状态，外部不可见</li>\n<li>父组件可将状态传入组件内部</li>\n</ol>\n<p>（当前价格属于Root节点；状态上升：状态归属于两个节点向上寻找到最近的祖宗节点。）</p>\n<p><strong>组件设计：</strong></p>\n<ol>\n<li>组件声明了状态和UI的映射。</li>\n<li>组件有Props&#x2F;State两种状态。</li>\n<li>“组件”可由其他组件拼装而成。<br><img src=\"https://img-blog.csdnimg.cn/d22ed65fab004215b5dd91c2fbea5e9a.png#pic_center\"></li>\n</ol>\n<hr>\n<h2 id=\"3、React（hooks）的写法\"><a href=\"#3、React（hooks）的写法\" class=\"headerlink\" title=\"3、React（hooks）的写法\"></a>3、React（hooks）的写法</h2><pre><code class=\"typescript\">import React,&#123;useState&#125;from &#39;react&#39;;\nfunction Example()&#123;\n  return(\n    &lt;div&gt;\n        &lt;p&gt;You clicked &#123;count&#125; times&lt;/p&gt;\n        &lt;button onclick=&#123;()=&gt;setCount(count+1)&#125;&gt;Click me&lt;/button&gt;\n    &lt;/div&gt;\n  );\n&#125;\n</code></pre>\n<pre><code class=\"typescript\">import React,&#123;useState,useEffect&#125;from &#39;react&#39;;\nfunction Example()&#123;\n  const[count,setCount]=useState(0);\n  useEffect(()=&gt;&#123;\n    document.title=&#39;You clicked $&#123;count&#125; times&#39;;\n  &#125;);\n  return(\n    &lt;div&gt;\n        &lt;p&gt;You clicked &#123;count&#125; times&lt;/p&gt;\n        &lt;button onclick=&#123;()=&gt;setCount(count+1)&#125;&gt;Click me&lt;/button&gt;\n    &lt;/div&gt;\n  );\n&#125;\n</code></pre>\n<hr>\n<h2 id=\"4、React的实现\"><a href=\"#4、React的实现\" class=\"headerlink\" title=\"4、React的实现\"></a>4、React的实现</h2><p><strong>Problem：</strong></p>\n<ol>\n<li><p>JSX不符合JS标准语法<br>解决办法：转译。<br><img src=\"https://img-blog.csdnimg.cn/be8ef4bdac014100afff08195dc7aa30.png#pic_center\"></p>\n</li>\n<li><p>返回的JSX发生改变时，如何更新DOM<br>解决办法：Virtual DOM(虚拟DOM)，Virtual DOM是一种用于和真实DOM同步,而在JS内存中维护的一个对象，它具有和DOM类似的树状结构，并和DOM可以建立一一对应的关系。<br>它赋予了React声明式的API:您告诉React希望让U是什么状态，React就确保DOM匹配该状态。这使您可以从属性操作、事件处理和手动DOM更新这些在构建应用程序时认要的操作中解放出来。<br><img src=\"https://img-blog.csdnimg.cn/8827eead91344f8e88c061106ffed498.png#pic_center\"><br><strong>How to Diff:</strong><br>完美的最小Diff 算法,需要o(n^3)的复杂度。牺牲理论最小Diff，换取时间，得到了O(n)复杂度的算法:Heuristic O(n) Algorithm<br><img src=\"https://img-blog.csdnimg.cn/56a8f4ee96a54388acc88a7dede7b11c.png#pic_center\"></p>\n</li>\n<li><p>State&#x2F;Props更新时，要重新触发render函数</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"5、React的状态管理库\"><a href=\"#5、React的状态管理库\" class=\"headerlink\" title=\"5、React的状态管理库\"></a>5、React的状态管理库</h2><p><strong>核心思想：</strong><br><img src=\"https://img-blog.csdnimg.cn/bf2baf2626de4db4a40f5117c4fef90a.png#pic_center\"><br>解决了状态共享问题，但是会降低组件的复用性。<br><strong>状态机：</strong><br><img src=\"https://img-blog.csdnimg.cn/e3918e1f370a401280dfdcf26a773309.png#pic_center\" alt=\"![](https://img-blog.csdnimg.cn/0a2f568f076043988f0c2312b2c2c890.png\"></p>\n<hr>\n<h2 id=\"6、应用级框架科普\"><a href=\"#6、应用级框架科普\" class=\"headerlink\" title=\"6、应用级框架科普\"></a>6、应用级框架科普</h2><ol>\n<li><p>NEXT.JS<br>硅谷明星创业公司Vercel的 React开发框架，稳定，开发体验好，支持Unbundled Dev , SWC等，其同样有Serverless—键部署平台帮助开发者快速完成部署。口号是” Let’s Make WebFaster”</p>\n</li>\n<li><p>MODERN.JS<br>字节跳动Web lnfra团队研发的全栈开发框架，内置了很多开箱即用的能力与最佳实践，可以减少很多调研选择工具的时间。</p>\n</li>\n<li><p>Blitz<br>无API思想的全栈开发框架，开发过程中无需写API调用与CRUD逻辑，适合前后端紧密结合的小团队项目。</p>\n</li>\n</ol>\n","feature":false,"text":"React是一个流行的JavaScript库，而响应式系统是现代前端开发中的重要概念。本文将探讨React与响应式系统之间的关系，包括React中的状态管理、组件的渲染机制以及响应式数据流的实现原理。...","permalink":"/post/青训营--响应式系统与React","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81React%E7%9A%84%E5%8E%86%E5%8F%B2%E4%B8%8E%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">1、React的历史与应用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81React%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">2、React的设计思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81React%EF%BC%88hooks%EF%BC%89%E7%9A%84%E5%86%99%E6%B3%95\"><span class=\"toc-text\">3、React（hooks）的写法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81React%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">4、React的实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%E3%80%81React%E7%9A%84%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E5%BA%93\"><span class=\"toc-text\">5、React的状态管理库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6%E3%80%81%E5%BA%94%E7%94%A8%E7%BA%A7%E6%A1%86%E6%9E%B6%E7%A7%91%E6%99%AE\"><span class=\"toc-text\">6、应用级框架科普</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"前端动画实现","uid":"96f2401ef260a2fda3074e7c72b8a623","slug":"青训营--前端动画实现","date":"2022-01-21T08:11:16.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--前端动画实现.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","text":"在前端开发中，动画效果能够增强用户体验并提升页面吸引力。本文将介绍前端动画实现的多种方式，包括CSS动画、JavaScript动画库以及最新的Web动画API。通过学习本文，读者将掌握多种前端动画实现技术，从而丰富其网页设计与开发的技能。...","permalink":"/post/青训营--前端动画实现","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false},"next_post":{"title":"前端必须知道的开发调试知识","uid":"c724a6391cb1c094df5a91070462b271","slug":"青训营--前端开发调试知识","date":"2022-01-17T15:35:19.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--前端开发调试知识.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","text":"前端开发调试是在开发过程中解决和修复代码问题的关键步骤。本文将介绍一些常见的前端调试技巧和工具，包括浏览器开发者工具的使用、调试工具的配置和断点调试等。...","permalink":"/post/青训营--前端开发调试知识","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false}}