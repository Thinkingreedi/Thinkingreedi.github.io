{"title":"提高开发效率：ES6技巧大全","uid":"26420f1034bff9b91a54684d743949a2","slug":"前端--一文轻松搞懂ES6-ES11(ES6详解)","date":"2023-01-12T00:36:22.000Z","updated":"2025-07-14T15:12:20.465Z","comments":true,"path":"api/articles/前端--一文轻松搞懂ES6-ES11(ES6详解).json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/693b39076a084dd39ab56802ff1834b9.jpeg","content":"<h1 id=\"ECMAScript-6-11\"><a href=\"#ECMAScript-6-11\" class=\"headerlink\" title=\"ECMAScript 6-11\"></a>ECMAScript 6-11</h1><h2 id=\"1、ECMAScript-相关介绍\"><a href=\"#1、ECMAScript-相关介绍\" class=\"headerlink\" title=\"1、ECMAScript 相关介绍\"></a>1、ECMAScript 相关介绍</h2><h3 id=\"1-1-ECMAScript简介\"><a href=\"#1-1-ECMAScript简介\" class=\"headerlink\" title=\"1.1 ECMAScript简介\"></a>1.1 ECMAScript简介</h3><p><img src=\"https://img-blog.csdnimg.cn/5d40cbca8087406a839d8748616b799c.png#pic_center\"></p>\n<ul>\n<li>ECMA（European Computer Manufacturers Association）中文名称为欧洲计算机制造商协会，这个组织的目标是评估、开发和认可电信和计算机标准。1994 年后该组织改名为 ECMA 国际</li>\n<li>ECMAScript 是由 Ecma 国际通过 ECMA-262 标<a href=\"https://baike.baidu.com/item/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80\">准化的脚本程序设计语言</a></li>\n<li>Ecma 国际制定了许多标准，而 ECMA-262 只是其中的一个，所有标准列表查看：<a href=\"http://www.ecma-international.org/publications/standards/Standard.html\">http://www.ecma-international.org/publications/standards/Standard.html</a></li>\n<li>ECMA-262（ECMAScript）历史版本查看网址：<a href=\"http://www.ecma-international.org/publications/standards/Ecma-262-arch.htm\"> http://www.ecma-international.org/publications/standards/Ecma-262-arch.htm</a></li>\n</ul>\n<h3 id=\"1-2-ES6的重要性\"><a href=\"#1-2-ES6的重要性\" class=\"headerlink\" title=\"1.2 ES6的重要性\"></a>1.2 ES6的重要性</h3><ul>\n<li><p>ES6 的版本变动内容最多，具有里程碑意义</p>\n</li>\n<li><p>ES6 加入许多新的语法特性，编程实现更简单、高效</p>\n</li>\n<li><p>ES6 是前端发展趋势，就业必备技能</p>\n</li>\n<li><p><a href=\"http://kangax.github.io/compat-table/es6/\"> http://kangax.github.io/compat-table/es6/</a> 可查看兼容性</p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/cf54f136d06a410b99b8d97357f21c54.png#pic_center\"></p>\n<h2 id=\"2、ECMAScript-6新特性\"><a href=\"#2、ECMAScript-6新特性\" class=\"headerlink\" title=\"2、ECMAScript 6新特性\"></a>2、ECMAScript 6新特性</h2><h3 id=\"2-1-let关键字\"><a href=\"#2-1-let关键字\" class=\"headerlink\" title=\"2.1 let关键字\"></a>2.1 let关键字</h3><ul>\n<li><p>let关键字用来声明变量，使用let声明的变量有几个特点:</p>\n<ol>\n<li><p>不允许重复声明</p>\n</li>\n<li><p>块级作用域</p>\n</li>\n<li><p>不存在变量提升</p>\n</li>\n<li><p>不影响作用域链</p>\n</li>\n</ol>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//声明变量</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> a</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> b</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> c</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> d</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> e </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> f </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">521</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> g </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">iloveyou</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> h </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> []</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1. 变量不能重复声明</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// let star = &#39;罗志祥&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// let star = &#39;小猪&#39;;报错</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2. 块儿级作用域  全局, 函数, eval</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// if else while for </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// &#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//     let girl = &#39;周扬青&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// &#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(girl);//报错</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//3. 不存在变量提升</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(song);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// let song = &#39;恋爱达人&#39;;//报错</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//4. 不影响作用域链</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> school </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">河工大</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">     </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">          </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">school</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">     </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">     </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span></code></pre></div><ul>\n<li><strong>应用场景:以后声明变量直接使用let</strong></li>\n</ul>\n<h3 id=\"2-2-const关键字\"><a href=\"#2-2-const关键字\" class=\"headerlink\" title=\"2.2 const关键字\"></a>2.2 const关键字</h3><ul>\n<li><p>const关键字用来声明常量，const声明有以下特点：</p>\n<ol>\n<li><p>声明必须赋初始值</p>\n</li>\n<li><p>标识符一般为大写</p>\n</li>\n<li><p>不允许重复声明</p>\n</li>\n<li><p>值不允许修改</p>\n</li>\n<li><p>块级作用域</p>\n</li>\n</ol>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//声明常量</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> SCHOOL </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">河工大</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1. 一定要赋初始值</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// const A;//报错</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2. 一般常量使用大写(潜规则)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// const a = 100;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//3. 常量的值不能修改</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// SCHOOL = &#39;HAUT&#39;;//报错</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//4. 块儿级作用域</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// &#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// \t\tconst PLAYER = &#39;UZI&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// &#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(PLAYER);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//5. 对于数组和对象的元素修改, 不算做对常量的修改, 不会报错</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//const TEAM = [&#39;UZI&#39;,&#39;MXLG&#39;,&#39;Ming&#39;,&#39;Letme&#39;];</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// TEAM.push(&#39;Meiko&#39;);</span></span></code></pre></div><ul>\n<li><strong>注意:对象属性修改和数组元素变化不会出现const错误</strong></li>\n<li><strong>应用场景:声明对象类型使用const，非对象类型声明选择let</strong></li>\n</ul>\n<h3 id=\"2-3-变量的解构赋值\"><a href=\"#2-3-变量的解构赋值\" class=\"headerlink\" title=\"2.3 变量的解构赋值\"></a>2.3 变量的解构赋值</h3><ul>\n<li>ES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构赋值</li>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1. 数组的结构</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// const F4 = [&#39;小沈阳&#39;, &#39;刘能&#39;, &#39;赵四&#39;, &#39;宋小宝&#39;];</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// let [xiao, liu, zhao, song] = F4;//解构赋值</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(xiao);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(liu);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(zhao);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(song);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2. 对象的解构</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> zhao </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">赵本山</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">age</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">不详</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">xiaopin</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">             </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">我可以演小品</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">         </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> age</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> xiaopin</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> zhao</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//解构赋值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(name)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(age)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(xiaopin)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">xiaopin</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> xiaopin </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> zhao</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">xiaopin</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><ul>\n<li><strong>注意:频繁使用对象方法、数组元素，就可以使用解构赋值形式</strong></li>\n</ul>\n<h3 id=\"2-4-模板字符串\"><a href=\"#2-4-模板字符串\" class=\"headerlink\" title=\"2.4 模板字符串\"></a>2.4 模板字符串</h3><ul>\n<li><p>模板字符串(template string）是增强版的字符串，用反引号（&#96;&#96;）标识，</p>\n</li>\n<li><p>特点:</p>\n<ol>\n<li>字符串中可以出现换行符</li>\n<li>可以使用${xxx}形式输出变量</li>\n</ol>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1. 声明</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> str </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">我也是一个字符串哦!</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(str</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> str)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2. 内容中可以直接出现换行符</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> str </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">&lt;ul&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">            &lt;li&gt;沈腾&lt;/li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">            &lt;li&gt;玛丽&lt;/li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">            &lt;li&gt;魏翔&lt;/li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">               &lt;li&gt;艾伦&lt;/li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">           &lt;/ul&gt;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//3. 变量拼接</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> lovest </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">魏翔</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> out </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`$&#123;</span><span style=\"color: #BABED8\">lovest</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #C3E88D\">是我心目中最搞笑的演员!!</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(out)</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><ul>\n<li><strong>注意:当遇到字符串与变量拼接的情况使用模板字符串</strong></li>\n</ul>\n<h3 id=\"2-5-简化对象写法\"><a href=\"#2-5-简化对象写法\" class=\"headerlink\" title=\"2.5 简化对象写法\"></a>2.5 简化对象写法</h3><ul>\n<li>ES6允许在大括号里面，直接写入变量和函数，作为对象的属性和方法。这样的书写更加简洁</li>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">尚硅谷</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> change </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">我们可以改变你!!</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> school </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    name</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    change</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">improve</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">我们可以提高你的技能</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(school)</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><ul>\n<li><strong>注意:对象简写形式简化了代码，所以以后用简写就对了</strong></li>\n</ul>\n<h3 id=\"2-6-箭头函数\"><a href=\"#2-6-箭头函数\" class=\"headerlink\" title=\"2.6 箭头函数\"></a>2.6 箭头函数</h3><ul>\n<li><p>ES6允许使用「箭头」（&#x3D;&gt;)定义函数</p>\n</li>\n<li><p>箭头函数的注意点:</p>\n<ol>\n<li>如果形参只有一个，则小括号可以省略</li>\n<li>函数体如果只有一条语句，则花括号可以省略，函数的返回值为该条语句的执行结果</li>\n<li>箭头函数this 指向声明时所在作用域下this 的值</li>\n<li>箭头函数不能作为构造函数实例化</li>\n<li>不能使用arguments</li>\n</ol>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//普通函数</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> fn </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//箭头函数</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> fn </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">a</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8; font-style: italic\">b</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">     </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">a</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">b</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1. this 是静态的. this 始终指向函数声明时所在作用域下的 this 的值</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">getName</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> getName2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//设置 window 对象的 name 属性</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">window</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">河工大</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> school </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">haut</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//直接调用</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">getName</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//河工大</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">getName2</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//河工大</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//call 方法调用</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">getName</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">call</span><span style=\"color: #BABED8\">(school)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//haut</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">getName2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">call</span><span style=\"color: #BABED8\">(school)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//河工大</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2. 不能作为构造实例化对象</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// let Person = (name, age) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// \t\tthis.name = name;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// \t\tthis.age = age;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// &#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// let me = new Person(&#39;xiao&#39;,30);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(me);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//3. 不能使用 arguments 变量</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// let fn = () =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// \t\tconsole.log(arguments);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// &#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// fn(1,2,3);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//4. 箭头函数的简写</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1) 省略小括号, 当形参有且只有一个的时候</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> add </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">n</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">n</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #82AAFF\">add</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">9</span><span style=\"color: #BABED8\">))</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2) 省略花括号, 当代码体只有一条语句的时候, 此时 return 必须省略</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 而且语句的执行结果就是函数的返回值</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> pow </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">n</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> n </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #82AAFF\">pow</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">8</span><span style=\"color: #BABED8\">))</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><ul>\n<li><strong>注意:箭头函数不会更改this指向，用来指定回调函数会非常合适</strong></li>\n</ul>\n<h3 id=\"2-7-rest参数\"><a href=\"#2-7-rest参数\" class=\"headerlink\" title=\"2.7 rest参数\"></a>2.7 rest参数</h3><ul>\n<li>ES6引入rest参数，用于获取函数的实参，用来代替arguments</li>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// ES5 获取实参的方式</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">date</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">arguments</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">date</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">白芷</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">阿娇</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">思慧</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//Array(3)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// rest 参数</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">date</span><span style=\"color: #89DDFF\">(...</span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">args</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">// filter some every map</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">date</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">阿娇</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">柏芝</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">思慧</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//Array(3)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// rest 参数必须要放到参数最后</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">a</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">b</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">...</span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">a</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">b</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">args</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">fn</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//1,2,Array(4)</span></span></code></pre></div><ul>\n<li><strong>注意: rest参数非常适合不定个数参数函数的场景</strong></li>\n</ul>\n<p><strong>补充：参数默认值</strong></p>\n<ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1. 形参初始值 具有默认值的参数, 一般位置要靠后(潜规则)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">a</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">b</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">c</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">a</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">b</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">c</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> result </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">add</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(result)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2. 与解构赋值结合</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">connect</span><span style=\"color: #89DDFF\">(&#123;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">host</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">127.0.0.1</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">username</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">password</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">port</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#125;)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">host</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">username</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">password</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">port</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">connect</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">host</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">ASHIYI.com</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">username</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">root</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">password</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">root</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">port</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3306</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span></code></pre></div><h3 id=\"2-8-spread扩展运算符\"><a href=\"#2-8-spread扩展运算符\" class=\"headerlink\" title=\"2.8 spread扩展运算符\"></a>2.8 spread扩展运算符</h3><ul>\n<li>扩展运算符(spread）也是三个点(…）。它好比 rest参数的逆运算，将一个数组转为用逗号分隔的参数序列，对数组进行解包</li>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> tfboys </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">易烊千玺</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">王源</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">王俊凯</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">chunwan</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">arguments</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">chunwan</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">...</span><span style=\"color: #BABED8\">tfboys)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">// chunwan(&#39;易烊千玺&#39;,&#39;王源&#39;,&#39;王俊凯&#39;)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//扩展运算符的应用</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1. 数组的合并</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> kuaizi </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">王太利</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">肖央</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> fenghuang </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">曾毅</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">玲花</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// const zuixuanxiaopingguo = kuaizi.concat(fenghuang);</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> zuixuanxiaopingguo </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">...</span><span style=\"color: #BABED8\">kuaizi</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">...</span><span style=\"color: #BABED8\">fenghuang]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(zuixuanxiaopingguo)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2. 数组的克隆</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> sanzhihua </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">E</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">G</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">M</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> sanyecao </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">...</span><span style=\"color: #BABED8\">sanzhihua]</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">// [&#39;E&#39;,&#39;G&#39;,&#39;M&#39;]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(sanyecao)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//3. 将伪数组转为真正的数组</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> divs </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> document</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">querySelectorAll</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">div</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> divArr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">...</span><span style=\"color: #BABED8\">divs]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(divArr)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">// arguments</span></span></code></pre></div><h3 id=\"2-9-Symbol\"><a href=\"#2-9-Symbol\" class=\"headerlink\" title=\"2.9 Symbol\"></a>2.9 Symbol</h3><p><strong>Symbol基本使用</strong></p>\n<ul>\n<li><p>ES6引入了一种新的原始数据类型 Symbol，表示独一无二的值。它是JavaScript语言的第七种数据类型，是一种类似于字符串的数据类型</p>\n</li>\n<li><p>Symbol特点</p>\n<ol>\n<li>Symbol的值是唯一的，用来解决命名冲突的问题</li>\n<li>Symbol值不能与其他数据进行运算</li>\n<li>Symbol定义的对象属性不能使用for …in循环遍历，但是可以使用Reflect.ownKeys来获取对象的所有键名</li>\n</ol>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//创建Symbol</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> s </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Symbol</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(s, typeof s);</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> s2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Symbol</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">尚硅谷</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> s3 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Symbol</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">尚硅谷</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(s2 </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #BABED8\"> s3)</span><span style=\"color: #676E95; font-style: italic\">//false</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//Symbol.for 创建</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> s4 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Symbol</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">for</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">尚硅谷</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> s5 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Symbol</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">for</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">尚硅谷</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(s4 </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #BABED8\"> s5)</span><span style=\"color: #676E95; font-style: italic\">//true</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//Symbol.for()不会每次调用就返回一个新的Symbol类型的值，而是先检查给定的参数字符串是否已存在，如果不存在才会新建一个并返回一个该字符串为名称的Symbol值</span></span></code></pre></div><ul>\n<li><strong>注:遇到唯一性的场景时要想到symbol</strong></li>\n</ul>\n<p><strong>Symbol内置值</strong></p>\n<ul>\n<li>除了定义自己使用的Symbol值以外,ES6还提供了11个内置的Symbol值，指向语言内部使用的方法。可以称这些方法为魔术方法，因为它们会在特定的场景下自动执行</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">名称</th>\n<th align=\"center\">功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Symbol.hasInstance</td>\n<td align=\"center\">当其他对象使用instanceof运算符，判断是否为该对象的实例时，会调用这个方法</td>\n</tr>\n<tr>\n<td align=\"center\">Symbol.isConcatSpreadable</td>\n<td align=\"center\">对象的Symbol.isConcatSpreadable属性等于的是一个布尔值，表示该对象用于Array.prototype.concat()时，是否可以展开</td>\n</tr>\n<tr>\n<td align=\"center\">Symbol.species</td>\n<td align=\"center\">创建衍生对象时，会使用该属性</td>\n</tr>\n<tr>\n<td align=\"center\">Symbol.match</td>\n<td align=\"center\">当执行str.match(myObject)时，如果该属性存在，会调用它，返回该方法的返回值</td>\n</tr>\n<tr>\n<td align=\"center\">symbol.replace</td>\n<td align=\"center\">当该对象被str.replace(myObject)方法调用时，会返回该方法的返回值</td>\n</tr>\n<tr>\n<td align=\"center\">symbol.search</td>\n<td align=\"center\">当该对象被str.search (myObject)方法调用时，会返回该方法的返回值</td>\n</tr>\n<tr>\n<td align=\"center\">Symbol.split</td>\n<td align=\"center\">当该对象被str.split (myObject)方法调用时，会返回该方法的返回值</td>\n</tr>\n<tr>\n<td align=\"center\">Symbol.iterator</td>\n<td align=\"center\">对象进行for..of 循环时，会调用Symbol.iterator方法，返回该对象的默认遍历器</td>\n</tr>\n<tr>\n<td align=\"center\">symbol.toPrimitive</td>\n<td align=\"center\">该对象被转为原始类型的值时，会调用这个方法，返回该对象对应的原始类型值</td>\n</tr>\n<tr>\n<td align=\"center\">Symbol.toStringTag</td>\n<td align=\"center\">在该对象上面调用toString方法时，返回该方法的返回值</td>\n</tr>\n<tr>\n<td align=\"center\">symbol. unscopables</td>\n<td align=\"center\">该对象指定了使用with关键字时,哪些属性会被with环境排除</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-10-迭代器\"><a href=\"#2-10-迭代器\" class=\"headerlink\" title=\"2.10 迭代器\"></a>2.10 迭代器</h3><ul>\n<li><p>遍历器（lterator）就是一种机制。它是一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署lterator接口,就可以完成遍历操作</p>\n<ol>\n<li><p>ES6创造了一种新的遍历命令for…of循环，lterator接口主要供 for…of消费</p>\n</li>\n<li><p>原生具备iterator接口的数据(可用for of 遍历)<br>a)Array</p>\n<p>b)Arguments</p>\n<p>c)Set</p>\n<p>d)Map</p>\n<p>e)string</p>\n<p>f)TypedArray</p>\n<p>g)NodeList</p>\n</li>\n<li><p>工作原理<br> a)创建一个指针对象，指向当前数据结构的起始位置</p>\n<p> b)第一次调用对象的next方法，指针自动指向数据结构的第一个成员</p>\n<p> c)接下来不断调用next方法，指针一直往后移动，直到指向最后一个成员</p>\n<p> d)每调用next方法返回一个包含value(值)和 done(判断循环是否完成)属性的对象</p>\n</li>\n</ol>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//声明一个数组</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> xiyou </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">唐僧</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">孙悟空</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">猪八戒</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">沙僧</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//使用 for...of 遍历数组</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> v </span><span style=\"color: #89DDFF\">of</span><span style=\"color: #BABED8\"> xiyou) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">v</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><ul>\n<li><strong>注:需要自定义遍历数据的时候，要想到迭代器</strong></li>\n</ul>\n<h3 id=\"2-11-生成器\"><a href=\"#2-11-生成器\" class=\"headerlink\" title=\"2.11 生成器\"></a>2.11 生成器</h3><ul>\n<li>生成器函数是ES6提供的一种异步编程解决方案,语法行为与传统函数完全不同</li>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">gen</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">yield</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">一只没有耳朵</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">yield</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">一只没有尾部</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">yield</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">真奇怪</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> iterator </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">gen</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(iterator</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">next</span><span style=\"color: #BABED8\">())</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(iterator</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">next</span><span style=\"color: #BABED8\">())</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(iterator</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">next</span><span style=\"color: #BABED8\">())</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(iterator</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">next</span><span style=\"color: #BABED8\">())</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><ul>\n<li>代码说明:<ol>\n<li>*的位置没有限制</li>\n<li>生成器函数返回的结果是迭代器对象,调用迭代器对象的next方法可以得到yield 语句后的值</li>\n<li>yield相当于函数的暂停标记，也可以认为是函数的分隔符，每调用一次next方法，执行一段代码</li>\n<li>next方法可以传递实参，作为yield语句的返回值</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"2-12-Promise\"><a href=\"#2-12-Promise\" class=\"headerlink\" title=\"2.12 Promise\"></a>2.12 Promise</h3><ul>\n<li><p>Promise是ES6引入的异步编程的新解决方案。语法上 Promise是一个构造函数，用来封装异步操作并可以获取其成功或失败的结果</p>\n<ol>\n<li>Promise构造函数: Promise (excutor){}</li>\n<li>Promise.prototype.then方法；<strong>then方法的返回结果是 Promise 对象, 对象状态由回调函数的执行结果决定；如果回调函数中返回的结果是 非 promise 类型的属性, 状态为成功, 返回值为对象的成功的值；如果返回是 promise类型 对象，内部返回promise状态决定than方法返回promise状态；抛出错误，状态是失败，值为抛出的值</strong></li>\n<li>Promise.prototype.catch方法；</li>\n</ol>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//Promise基本语法</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//实例化 Promise 对象</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #BABED8\">(</span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">resolve</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">reject</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">setTimeout</span><span style=\"color: #F07178\">(</span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// let data = &#39;数据库中的用户数据&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// resolve</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// resolve(data);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">let</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">err</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">数据读取失败</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">reject</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">err</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;,</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//调用 promise 对象的 then 方法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">then</span><span style=\"color: #BABED8\">(</span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">value</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">//成功执行</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">value</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">reason</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #676E95; font-style: italic\">//失败执行</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">error</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">reason</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span></code></pre></div><h3 id=\"2-13-set\"><a href=\"#2-13-set\" class=\"headerlink\" title=\"2.13 set\"></a>2.13 set</h3><ul>\n<li><p>ES6提供了新的数据结构Set(集合)。它<strong>类似于数组，但成员的值都是唯一的</strong>，集合实现了iterator接口，所以可以使用『扩展运算符』和『for…of…』扩展运算符进行遍历，集合的属性和方法:</p>\n<ol>\n<li>size返回集合的元素个数</li>\n<li>add增加一个新元素，返回当前集合</li>\n<li>delete删除元素，返回boolean值</li>\n<li>has检测集合中是否包含某个元素，返回boolean值</li>\n<li>clear清空集合，返回undefined</li>\n</ol>\n</li>\n<li><p>代码:</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//声明一个 set</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> s </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Set</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> s2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Set</span><span style=\"color: #BABED8\">([</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">大事儿</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">小事儿</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">好事儿</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">坏事儿</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">小事儿</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">])</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> v </span><span style=\"color: #89DDFF\">of</span><span style=\"color: #BABED8\"> s2) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">v</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//元素个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(s2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">size)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//添加新的元素</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">s2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">add</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">喜事儿</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//删除元素</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">s2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">delete</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">坏事儿</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//检测</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(s2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">has</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">糟心事</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">))</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//清空</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">s2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">clear</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(s2)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> v </span><span style=\"color: #89DDFF\">of</span><span style=\"color: #BABED8\"> s2) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">v</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//集合应用</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> arr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1. 数组去重</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> result1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">...new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Set</span><span style=\"color: #BABED8\">(arr)]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(result1)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2. 交集</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> arr2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> result2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">...new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Set</span><span style=\"color: #BABED8\">(arr)]</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">filter</span><span style=\"color: #BABED8\">(</span><span style=\"color: #BABED8; font-style: italic\">item</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Set</span><span style=\"color: #BABED8\">(arr2)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">has</span><span style=\"color: #BABED8\">(item))</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(result2)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//3. 并集</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> union </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">...new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Set</span><span style=\"color: #BABED8\">([</span><span style=\"color: #89DDFF\">...</span><span style=\"color: #BABED8\">arr</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">...</span><span style=\"color: #BABED8\">arr2])]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(union)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//4. 差集</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> diff </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">...new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Set</span><span style=\"color: #BABED8\">(arr)]</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">filter</span><span style=\"color: #BABED8\">(</span><span style=\"color: #BABED8; font-style: italic\">item</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Set</span><span style=\"color: #BABED8\">(arr2)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">has</span><span style=\"color: #BABED8\">(item)))</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(diff)</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><h3 id=\"2-14-map\"><a href=\"#2-14-map\" class=\"headerlink\" title=\"2.14 map\"></a>2.14 map</h3><ul>\n<li>ES6提供了Map数据结构。它<strong>类似于对象，也是键值对的集合</strong>。但是“键”的范围不限于字符串，各种类型的值(包括对象）都可以当作键。Map也实现了iterator接口，所以可以使用『扩展运算符』和『for ….of…』。进行遍历。Map的属性和方法:<ol>\n<li>size返回Map 的元素个数</li>\n<li>set 增加一个新元素，返回当前Map</li>\n<li>get返回键名对象的键值</li>\n<li>has检测Map中是否包含某个元素，返回boolean值</li>\n<li>clear清空集合，返回undefined</li>\n</ol>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//声明 Map</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> m </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Map</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//添加元素</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">m</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">set</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">河工大</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">m</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">set</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">change</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">我们可以改变你!!</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> key </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">school</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">大学</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">m</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">set</span><span style=\"color: #BABED8\">(key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">北京</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">上海</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">深圳</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">])</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><h3 id=\"2-15-class类\"><a href=\"#2-15-class类\" class=\"headerlink\" title=\"2.15 class类\"></a>2.15 class类</h3><ul>\n<li>ES6提供了更接近传统语言的写法，引入了Class(类)这个概念，作为对象的模板。通过class关键字，可以定义类。基本上，ES6的class可以看作只是一个语法糖，它的绝大部分功能，ES5都可以做到，新的class写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已；知识点:<ol>\n<li>class声明类</li>\n<li>constructor定义构造函数初始化</li>\n<li>extends继承父类</li>\n<li>super调用父级构造方法</li>\n<li>static定义静态方法和属性</li>\n<li>父类方法可以重写（子类不能调用父类的重名方法）</li>\n</ol>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//class</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Shouji</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//构造方法 名字不能修改</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">constructor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">brand</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">price</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">brand</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">brand</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">price</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">price</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//方法必须使用该语法, 不能使用 ES5 的对象完整形式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">call</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">我可以打电话!!</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> onePlus </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Shouji</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1+</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1999</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(onePlus)</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Phone</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//静态属性 属于类，不属于实例对象</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F07178\">name</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">手机</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F07178\">change</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">我可以改变世界</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> nokia </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Phone</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(nokia</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//undefined</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(Phone</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//手机</span></span></code></pre></div><div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Phone</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//构造方法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">constructor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">brand</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">price</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">brand</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">brand</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">price</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">price</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//父类的成员属性</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">call</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">我可以打电话!!</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SmartPhone</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Phone</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//构造方法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">constructor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">brand</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">price</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">color</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">size</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">super</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">brand</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">price</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">// Phone.call(this, brand, price)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">color</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">color</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">size</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">size</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">photo</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">拍照</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">playGame</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">玩游戏</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">call</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">我可以进行视频通话</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> xiaomi </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">SmartPhone</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">小米</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">799</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">黑色</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">4.7inch</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// console.log(xiaomi);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    xiaomi</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">call</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    xiaomi</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">photo</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    xiaomi</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">playGame</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// get 和 set</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Phone</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">get</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F07178\">price</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//无需参数，有返回值(没写默认undefined)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">价格属性被读取了</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">iloveyou</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">set</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F07178\">price</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">newVal</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//需要参数(否则报错)，无返回值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">价格属性被修改了</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//实例化对象</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> s </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Phone</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(s.price);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">price </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">free</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><h3 id=\"2-16-数值扩展\"><a href=\"#2-16-数值扩展\" class=\"headerlink\" title=\"2.16 数值扩展\"></a>2.16 数值扩展</h3><p><strong>Number.EPSILON</strong> </p>\n<ul>\n<li><p>JavaScript 表示的最小精度</p>\n</li>\n<li><p>EPSILON 属性的值接近于 2.2204460492503130808472633361816E-16（小于这个数认为相等）</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">equal</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">a</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">b</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> (</span><span style=\"color: #BABED8\">Math</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">abs</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">a</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">b</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Number</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">EPSILON) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #FF9CAC\">true</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #FF9CAC\">false</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">0.1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0.2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0.3</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//false</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #82AAFF\">equal</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">0.1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0.2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0.3</span><span style=\"color: #BABED8\">)</span><span style=\"color: #676E95; font-style: italic\">//true</span></span></code></pre></div><p><strong>二进制和八进制</strong></p>\n<ul>\n<li>ES6提供了二进制和八进制数值的新的写法，分别用前缀<strong>0b</strong>和<strong>0o</strong>表示。</li>\n</ul>\n<p><strong>Number.isFinite()与Number.isNaN()</strong></p>\n<ul>\n<li>Number.isFinite()用来检查一个数值是否为有限的</li>\n<li>Number.isNaN()用来检查一个值是否为NaN</li>\n</ul>\n<p><strong>Number.parselnt()与Number.parseFloat()</strong></p>\n<ul>\n<li>ES6将全局方法parseInt和 parseFloat，移植到Number对象上面，使用不变。</li>\n</ul>\n<p><strong>Math.trunc</strong></p>\n<ul>\n<li>用于去除一个数的小数部分，返回整数部分</li>\n</ul>\n<p><strong>Number.islnteger</strong></p>\n<ul>\n<li>Number.islnteger()用来判断一个数值是否为整数<ul>\n<li>值为正，返回1</li>\n<li>值为0，返回0</li>\n<li>值为负，返回-1</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-17-对象扩展\"><a href=\"#2-17-对象扩展\" class=\"headerlink\" title=\"2.17 对象扩展\"></a>2.17 对象扩展</h3><ul>\n<li>ES6新增了一些object对象的方法<ol>\n<li>object.is比较两个值是否严格相等，与「&#x3D;&#x3D;&#x3D;』行为基本一致（ NaN)</li>\n<li>Object.assign对象的合并，将源对象的所有可枚举属性，复制到目标对象(覆盖)</li>\n<li>Object.setPrototypeOf可以直接给实例对象的构造函数设置对象的原型</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"2-18-模块化\"><a href=\"#2-18-模块化\" class=\"headerlink\" title=\"2.18 模块化\"></a>2.18 模块化</h3><p><strong>模块化的好处</strong></p>\n<ul>\n<li>模块化的优势有以下几点:</li>\n</ul>\n<ol>\n<li>防止命名冲突</li>\n<li>代码复用</li>\n<li>高维护性</li>\n</ol>\n<p><strong>模块化规范产品</strong></p>\n<ul>\n<li>ES6之前的模块化规范有:</li>\n</ul>\n<ol>\n<li>CommonJS  &#x3D;&gt; NodeJS、Browserify</li>\n<li>AMD &#x3D;&gt; requireJS</li>\n<li>CMD &#x3D;&gt; seaJS</li>\n</ol>\n<p><strong>ES6模块化语法</strong></p>\n<ul>\n<li>模块功能主要由两个命令构成: export和import<ul>\n<li>export命令用于规定模块的对外接口(分别暴露、统一暴露、默认暴露)</li>\n<li>import命令用于输入其他模块提供的功能</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3、ECMAScript-7新特性\"><a href=\"#3、ECMAScript-7新特性\" class=\"headerlink\" title=\"3、ECMAScript 7新特性\"></a>3、ECMAScript 7新特性</h2><h3 id=\"3-1-Array-prototype-includes\"><a href=\"#3-1-Array-prototype-includes\" class=\"headerlink\" title=\"3.1 Array.prototype.includes\"></a>3.1 Array.prototype.includes</h3><ul>\n<li>Includes方法用来检测数组中是否包含某个元素，返回布尔类型值</li>\n</ul>\n<h3 id=\"3-2-指数操作符\"><a href=\"#3-2-指数操作符\" class=\"headerlink\" title=\"3.2 指数操作符\"></a>3.2 指数操作符</h3><ul>\n<li>在ES7中引入指数运算符「**」，用来实现幂运算，功能与Math.pow结果相同</li>\n</ul>\n<h2 id=\"4、ECMAScript-8新特性\"><a href=\"#4、ECMAScript-8新特性\" class=\"headerlink\" title=\"4、ECMAScript 8新特性\"></a>4、ECMAScript 8新特性</h2><h3 id=\"4-1-async和await\"><a href=\"#4-1-async和await\" class=\"headerlink\" title=\"4.1 async和await\"></a>4.1 async和await</h3><p>async和 await 两种语法结合可以让异步代码像同步代码一样</p>\n<p><strong>async函数</strong></p>\n<ol>\n<li><p><strong>async函数的返回值为promise对象</strong></p>\n</li>\n<li><p>promise对象的结果由async函数执行的返回值决定</p>\n</li>\n</ol>\n<ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//async 函数</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">async</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// 返回一个字符串</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// return &#39;尚硅谷&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// 返回的结果不是一个 Promise 类型的对象, 返回的结果就是成功 Promise 对象</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// return;//(resolved undefined)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//抛出错误, 返回的结果是一个失败的 Promise</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// throw new Error(&#39;出错啦!&#39;);//(rejected 对象)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//返回的结果如果是一个 Promise 对象</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">resolve</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8; font-style: italic\">reject</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">resolve</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">成功的数据</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//(resolved 对象)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// reject(&quot;失败的错误&quot;);//(rejected 对象)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>await表达式</strong></p>\n<ol>\n<li>await必须写在 async函数中</li>\n<li>await右侧的表达式一般为promise对象</li>\n<li>await返回的是promise成功的值</li>\n<li>await 的promise失败了，就会抛出异常，需要通过try…catch 捕获处理</li>\n</ol>\n<ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//创建 promise 对象</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">resolve</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">reject</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// resolve(&quot;用户数据&quot;);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">reject</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">失败啦!</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// await 要放在 async 函数中.</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">async</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">let</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">result</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">await</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">result</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #F07178\"> (</span><span style=\"color: #BABED8\">e</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">e</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//调用函数</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">main</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><h3 id=\"4-2-对象方法的扩展\"><a href=\"#4-2-对象方法的扩展\" class=\"headerlink\" title=\"4.2 对象方法的扩展\"></a>4.2 对象方法的扩展</h3><p><strong>Object.values和Object.entries</strong></p>\n<ol>\n<li><p>Object.values()方法返回一个给定对象的所有可枚举<strong>属性值</strong>的数组</p>\n</li>\n<li><p>Object.entries()方法返回一个给定对象自身可遍历属性**[key,value]**的数(创建map)</p>\n</li>\n</ol>\n<p><strong>Object.getOwnPropertyDescriptors</strong></p>\n<ul>\n<li>该方法返回指定对象所有自身属性的描述对象</li>\n</ul>\n<h2 id=\"5、ECMAScript-9新特性\"><a href=\"#5、ECMAScript-9新特性\" class=\"headerlink\" title=\"5、ECMAScript 9新特性\"></a>5、ECMAScript 9新特性</h2><h3 id=\"5-1-Rest-Spread属性\"><a href=\"#5-1-Rest-Spread属性\" class=\"headerlink\" title=\"5.1 Rest&#x2F;Spread属性\"></a>5.1 Rest&#x2F;Spread属性</h3><ul>\n<li>Rest参数(省略)与spread扩展运算符(对象合并)在ES6中已经引入，不过ES6中只针对于数组，在ES9中为对象提供了像数组一样的rest参数和扩展运算符</li>\n</ul>\n<h3 id=\"5-2-正则表达式命名捕获组\"><a href=\"#5-2-正则表达式命名捕获组\" class=\"headerlink\" title=\"5.2.正则表达式命名捕获组\"></a>5.2.正则表达式命名捕获组</h3><ul>\n<li>ES9允许命名捕获组使用符号<strong>『?&lt; name&gt;』</strong> ,这样获取捕获结果可读性更强</li>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> str </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">&lt;a href=&quot;http://www.atguigu.com&quot;&gt;尚硅谷&lt;/a&gt;</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//分组命名</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> reg </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">/&lt;</span><span style=\"color: #BABED8\">a href</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">(?&lt;url&gt;.*)</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">?&lt;</span><span style=\"color: #F07178\">text</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">.*)&lt;\\ /a&gt;/;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">const result = reg.exec(str);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console.log(result.groups.url);//http://www.atguigu.com</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console.log(result.groups.text);//尚硅谷</span></span></code></pre></div><h3 id=\"5-3-正则表达式反向断言\"><a href=\"#5-3-正则表达式反向断言\" class=\"headerlink\" title=\"5.3.正则表达式反向断言\"></a>5.3.正则表达式反向断言</h3><ul>\n<li>ES9支持反向断言，通过对匹配结果前面的内容进行判断，对匹配进行筛选</li>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//声明字符串</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> str </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">JS5211314你知道么555啦啦啦</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//正向断言</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// const reg = /\\d+(?=啦)/;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// const result = reg.exec(str);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//反向断言</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> reg </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">/(?&lt;=</span><span style=\"color: #C3E88D\">么</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #C3E88D\">\\d</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> result</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">reg</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">exec</span><span style=\"color: #BABED8\">(str)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(result)</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><h3 id=\"5-4-正则表达式dotAll模式\"><a href=\"#5-4-正则表达式dotAll模式\" class=\"headerlink\" title=\"5.4.正则表达式dotAll模式\"></a>5.4.正则表达式dotAll模式</h3><ul>\n<li>正则表达式中点 . 匹配除回车外的任何单字符，标记『s』改变这种行为，允许行终止符出现</li>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//dot . 元字符 除换行符以外的任意单个字符</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> str </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">&lt;ul&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">    &lt;li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">        &lt;a&gt;肖生克的救赎&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">        &lt;p&gt;上映日期: 1994-09-10&lt;/p&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">    &lt;/li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">    &lt;li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">        &lt;a&gt;阿甘正传&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">        &lt;p&gt;上映日期: 1994-07-06&lt;/p&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">    &lt;/li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">&lt;/ul&gt;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//声明正则</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// const reg = /&lt;li&gt;\\s+&lt;a&gt;(.*?)&lt;\\ /a&gt;\\s+&lt;p&gt;(.*?)&lt;\\ /p&gt;/;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> reg </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">/&lt;</span><span style=\"color: #BABED8\">li</span><span style=\"color: #89DDFF\">&gt;.*?&lt;</span><span style=\"color: #F07178\">a</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">(.*?)&lt;\\ /a&gt;.*?</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">(.*?)&lt;\\ /p&gt;/gs;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">//执行匹配</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// const result = reg.exec(str);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let result;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let data = [];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">while(result = reg.exec(str))</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    data</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">push</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\">title</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> result[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F07178\">time</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> result[</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">//输出结果</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console.log(data);</span></span></code></pre></div><h2 id=\"6、ECMAScript-10新特性\"><a href=\"#6、ECMAScript-10新特性\" class=\"headerlink\" title=\"6、ECMAScript 10新特性\"></a>6、ECMAScript 10新特性</h2><h3 id=\"6-1-Object-fromEntries\"><a href=\"#6-1-Object-fromEntries\" class=\"headerlink\" title=\"6.1 Object.fromEntries\"></a>6.1 Object.fromEntries</h3><ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//二维数组</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> result1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Object</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fromEntries</span><span style=\"color: #BABED8\">([</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    [</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">IT</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    [</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">xueke</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Java,大数据,前端,云计算</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">])</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(result1)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//Map</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> m </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Map</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">m</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">set</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">ATGUIGU</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> result2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Object</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fromEntries</span><span style=\"color: #BABED8\">(m)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(result2)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//Object.entries ES8</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> arr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Object</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">entries</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">IT</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(arr)</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><h3 id=\"6-2-trimStart-和-trimEnd\"><a href=\"#6-2-trimStart-和-trimEnd\" class=\"headerlink\" title=\"6.2 trimStart 和 trimEnd\"></a>6.2 trimStart 和 trimEnd</h3><ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// trim</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> str </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\"> iloveyou </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(str)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(str</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">trimStart</span><span style=\"color: #BABED8\">())</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//清除左侧空白</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(str</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">trimEnd</span><span style=\"color: #BABED8\">())</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//清除右侧空白</span></span></code></pre></div><h3 id=\"6-3-Array-prototype-flat-与flatMap\"><a href=\"#6-3-Array-prototype-flat-与flatMap\" class=\"headerlink\" title=\"6.3 Array.prototype.flat 与flatMap\"></a>6.3 Array.prototype.flat 与flatMap</h3><ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//flat 平</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//将多维数组转化为低位数组</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// const arr = [1, 2, 3, 4, [5, 6]];</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(arr.flat());</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// const arr = [1, 2, 3, 4, [5, 6, [7, 8, 9]]];</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//参数为深度 是一个数字</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(arr.flat(2));//三维变一维，深度为2</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//flatMap</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> arr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> result </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> arr</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">flatMap</span><span style=\"color: #BABED8\">(</span><span style=\"color: #BABED8; font-style: italic\">item</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> [item </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\">])</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//flat+map</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(result)</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><h3 id=\"6-4-Symbol-prototype-description\"><a href=\"#6-4-Symbol-prototype-description\" class=\"headerlink\" title=\"6.4 Symbol.prototype.description\"></a>6.4 Symbol.prototype.description</h3><ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//创建 Symbol</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> s </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Symbol</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">河工大</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//获取属性</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">description)</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><h2 id=\"7、ECMAScript-11新特性\"><a href=\"#7、ECMAScript-11新特性\" class=\"headerlink\" title=\"7、ECMAScript 11新特性\"></a>7、ECMAScript 11新特性</h2><h3 id=\"7-1-类的私有属性\"><a href=\"#7-1-类的私有属性\" class=\"headerlink\" title=\"7.1 类的私有属性\"></a>7.1 类的私有属性</h3><ul>\n<li>代码:</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Person</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//公有属性</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//私有属性</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">#age</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">#weight</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//构造方法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">constructor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">name</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">age</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">weight</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">#age</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">age</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">#weight</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">weight</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">intro</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">#age</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">#weight</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//实例化</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> girl </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Person</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">晓红</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">18</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">45kg</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(girl.name);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(girl.#age);//报错</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(girl.#weight);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">girl</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">intro</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><h3 id=\"7-2-Promise-allSettled\"><a href=\"#7-2-Promise-allSettled\" class=\"headerlink\" title=\"7.2 Promise.allSettled\"></a>7.2 Promise.allSettled</h3><ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//声明两个promise对象</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> p1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">resolve</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">reject</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">setTimeout</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">resolve</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">商品数据 - 1</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;,</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> p2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">resolve</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">reject</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">setTimeout</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">resolve</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">商品数据 - 2</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// reject(&#39;出错啦!&#39;);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;,</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//调用 allsettled 方法</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> result </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">allSettled</span><span style=\"color: #BABED8\">([p1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> p2])</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//一个成功就成功</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// const res = Promise.all([p1, p2]);//都成功才成功，一个失败就失败</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(res)</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><h3 id=\"7-3-String-prototype-matchAll\"><a href=\"#7-3-String-prototype-matchAll\" class=\"headerlink\" title=\"7.3 String.prototype.matchAll\"></a>7.3 String.prototype.matchAll</h3><ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> str </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">&lt;ul&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">    &lt;li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">        &lt;a&gt;肖生克的救赎&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">        &lt;p&gt;上映日期: 1994-09-10&lt;/p&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">    &lt;/li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">    &lt;li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">        &lt;a&gt;阿甘正传&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">        &lt;p&gt;上映日期: 1994-07-06&lt;/p&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">    &lt;/li&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">&lt;/ul&gt;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//声明正则</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> reg </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">/&lt;</span><span style=\"color: #BABED8\">li</span><span style=\"color: #89DDFF\">&gt;.*?&lt;</span><span style=\"color: #F07178\">a</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">(.*?)&lt;\\ /a&gt;.*?</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">(.*?)&lt;\\ /p&gt;/sg</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">//调用方法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">const result = str.matchAll(reg);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// for(let v of result)</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// \t\tconsole.log(v);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">const arr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">...</span><span style=\"color: #BABED8\">result];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(arr);</span></span></code></pre></div><h3 id=\"7-4-可选链操作符\"><a href=\"#7-4-可选链操作符\" class=\"headerlink\" title=\"7.4 可选链操作符\"></a>7.4 可选链操作符</h3><ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 可选链操作符 ?. 判断前面的值是否传入，已传入则读取后面的属性</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">config</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// const dbHost = config &amp;&amp; config.db &amp;&amp; config.db.host;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">dbHost</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">config</span><span style=\"color: #89DDFF\">?.</span><span style=\"color: #BABED8\">db</span><span style=\"color: #89DDFF\">?.</span><span style=\"color: #BABED8\">host</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">dbHost</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">main</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">db</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #F07178\">host</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">192.168.1.100</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #F07178\">username</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">root</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">cache</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #F07178\">host</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">192.168.1.200</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #F07178\">username</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">admin</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span></code></pre></div><h3 id=\"7-5-动态import-导入\"><a href=\"#7-5-动态import-导入\" class=\"headerlink\" title=\"7.5 动态import 导入\"></a>7.5 动态import 导入</h3><ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">//test.html</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&lt;button id=&quot;btn&quot;&gt;点击&lt;/button&gt;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&lt;script src=&quot;./js/app.js&quot; type=&quot;module&quot;&gt;&lt;/script&gt;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">//app.js 获取元素</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">const btn = document.getElementById(&#39;btn&#39;);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">btn.onclick = function()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    import(&#39;./hello.js&#39;).then(module =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        module.hello();</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    &#125;);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">//hello.js</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">export function hello()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    alert(&#39;Hello&#39;);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&#125;</span></span></code></pre></div><h3 id=\"7-6-BigInt\"><a href=\"#7-6-BigInt\" class=\"headerlink\" title=\"7.6 BigInt\"></a>7.6 BigInt</h3><ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//大整形</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// let n = 521n;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(n, typeof(n));//521n &#39;bigint&#39;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//函数</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// let n = 123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(BigInt(n));//123n</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// console.log(BigInt(1.2));//报错</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//大数值运算</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> max </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Number</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">MAX_SAFE_INTEGER</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(max)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//9007199254740991</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(max </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//9007199254740992</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(max </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//9007199254740993</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #82AAFF\">BigInt</span><span style=\"color: #BABED8\">(max))</span><span style=\"color: #676E95; font-style: italic\">//9007199254740991n</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #82AAFF\">BigInt</span><span style=\"color: #BABED8\">(max) </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">BigInt</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">))</span><span style=\"color: #676E95; font-style: italic\">//9007199254740992n</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #82AAFF\">BigInt</span><span style=\"color: #BABED8\">(max) </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">BigInt</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">))</span><span style=\"color: #676E95; font-style: italic\">//9007199254740993n</span></span></code></pre></div><h3 id=\"7-7-globalThis对象\"><a href=\"#7-7-globalThis对象\" class=\"headerlink\" title=\"7.7 globalThis对象\"></a>7.7 globalThis对象</h3><ul>\n<li>代码：</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(globalThis)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//输出当前全局对象</span></span></code></pre></div>","feature":true,"text":"ES6引入了箭头函数、模板字符串等特性，ES7加入了Array.prototype.includes()方法，ES8推出了async/await语法，ES9引入了Asynchronous Iteration，ES10增加了Array.flat()和Array.flatMap()方法，ES11则新增了可选链操作符和空值合并操作符。掌握这些语法能够提升前端开发效率和代码质量。...","permalink":"/post/前端--一文轻松搞懂ES6-ES11(ES6详解)","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ECMAScript-6-11\"><span class=\"toc-text\">ECMAScript 6-11</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81ECMAScript-%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1、ECMAScript 相关介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-ECMAScript%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">1.1 ECMAScript简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-ES6%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7\"><span class=\"toc-text\">1.2 ES6的重要性</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81ECMAScript-6%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">2、ECMAScript 6新特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-let%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">2.1 let关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-const%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">2.2 const关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E5%8F%98%E9%87%8F%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">2.3 变量的解构赋值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">2.4 模板字符串</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E7%AE%80%E5%8C%96%E5%AF%B9%E8%B1%A1%E5%86%99%E6%B3%95\"><span class=\"toc-text\">2.5 简化对象写法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6-%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2.6 箭头函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-7-rest%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">2.7 rest参数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-8-spread%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">2.8 spread扩展运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-9-Symbol\"><span class=\"toc-text\">2.9 Symbol</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-10-%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">2.10 迭代器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-11-%E7%94%9F%E6%88%90%E5%99%A8\"><span class=\"toc-text\">2.11 生成器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-12-Promise\"><span class=\"toc-text\">2.12 Promise</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-13-set\"><span class=\"toc-text\">2.13 set</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-14-map\"><span class=\"toc-text\">2.14 map</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-15-class%E7%B1%BB\"><span class=\"toc-text\">2.15 class类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-16-%E6%95%B0%E5%80%BC%E6%89%A9%E5%B1%95\"><span class=\"toc-text\">2.16 数值扩展</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-17-%E5%AF%B9%E8%B1%A1%E6%89%A9%E5%B1%95\"><span class=\"toc-text\">2.17 对象扩展</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-18-%E6%A8%A1%E5%9D%97%E5%8C%96\"><span class=\"toc-text\">2.18 模块化</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81ECMAScript-7%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">3、ECMAScript 7新特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-Array-prototype-includes\"><span class=\"toc-text\">3.1 Array.prototype.includes</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E6%8C%87%E6%95%B0%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">3.2 指数操作符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81ECMAScript-8%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">4、ECMAScript 8新特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-async%E5%92%8Cawait\"><span class=\"toc-text\">4.1 async和await</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%E7%9A%84%E6%89%A9%E5%B1%95\"><span class=\"toc-text\">4.2 对象方法的扩展</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%E3%80%81ECMAScript-9%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">5、ECMAScript 9新特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-Rest-Spread%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">5.1 Rest&#x2F;Spread属性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%91%BD%E5%90%8D%E6%8D%95%E8%8E%B7%E7%BB%84\"><span class=\"toc-text\">5.2.正则表达式命名捕获组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-3-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%8D%E5%90%91%E6%96%AD%E8%A8%80\"><span class=\"toc-text\">5.3.正则表达式反向断言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-4-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8FdotAll%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">5.4.正则表达式dotAll模式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6%E3%80%81ECMAScript-10%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">6、ECMAScript 10新特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-1-Object-fromEntries\"><span class=\"toc-text\">6.1 Object.fromEntries</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-trimStart-%E5%92%8C-trimEnd\"><span class=\"toc-text\">6.2 trimStart 和 trimEnd</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-3-Array-prototype-flat-%E4%B8%8EflatMap\"><span class=\"toc-text\">6.3 Array.prototype.flat 与flatMap</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-4-Symbol-prototype-description\"><span class=\"toc-text\">6.4 Symbol.prototype.description</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7%E3%80%81ECMAScript-11%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">7、ECMAScript 11新特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-1-%E7%B1%BB%E7%9A%84%E7%A7%81%E6%9C%89%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">7.1 类的私有属性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-2-Promise-allSettled\"><span class=\"toc-text\">7.2 Promise.allSettled</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-3-String-prototype-matchAll\"><span class=\"toc-text\">7.3 String.prototype.matchAll</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-4-%E5%8F%AF%E9%80%89%E9%93%BE%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">7.4 可选链操作符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-5-%E5%8A%A8%E6%80%81import-%E5%AF%BC%E5%85%A5\"><span class=\"toc-text\">7.5 动态import 导入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-6-BigInt\"><span class=\"toc-text\">7.6 BigInt</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-7-globalThis%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">7.7 globalThis对象</span></a></li></ol></li></ol></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Ajax实战指南：快速入门","uid":"269efa4fe53bba32d25aec66c5987385","slug":"前端--详解AJAX(快速入门)","date":"2023-01-15T01:38:59.000Z","updated":"2025-07-14T15:12:20.466Z","comments":true,"path":"api/articles/前端--详解AJAX(快速入门).json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/7f6c7c162dd6446782022ec8ae527017.jpeg","text":"前端开发中，Ajax是一种用于异步请求和更新网页内容的技术。通过Ajax，可以在不刷新整个页面的情况下，与服务器进行数据交互。这种技术使得用户能够更加流畅地浏览网页，并实现实时更新数据的功能。...","permalink":"/post/前端--详解AJAX(快速入门)","photos":[],"count_time":{"symbolsCount":"33k","symbolsTime":"30 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"Ajax","slug":"Ajax","count":1,"path":"api/tags/Ajax.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true},"next_post":{"title":"前端进阶：探索JavaScript高级语法","uid":"da652f0027f23ff5ab9b268e0c44336d","slug":"前端--JavaScript高级","date":"2023-01-07T05:22:11.000Z","updated":"2025-07-14T15:12:20.463Z","comments":true,"path":"api/articles/前端--JavaScript高级.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/de6c1a55cf774f9fa1e2cff7c25e5fc9.png","text":"JavaScript高级语法包括闭包、原型链、对象高级、线程与执行机制等。掌握这些高级语法可以提升代码的可维护性和性能，实现更复杂的功能和逻辑。在前端开发中，熟练应用JavaScript高级语法能够编写出结构清晰、功能强大的代码，为用户提供更流畅的交互体验。...","permalink":"/post/前端--JavaScript高级","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}