{"title":"前端进阶：探索JavaScript高级语法","uid":"da652f0027f23ff5ab9b268e0c44336d","slug":"前端--JavaScript高级","date":"2023-01-07T05:22:11.000Z","updated":"2025-07-14T15:12:20.463Z","comments":true,"path":"api/articles/前端--JavaScript高级.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/de6c1a55cf774f9fa1e2cff7c25e5fc9.png","content":"<h1 id=\"JavaScript高级\"><a href=\"#JavaScript高级\" class=\"headerlink\" title=\"JavaScript高级\"></a>JavaScript高级</h1><h2 id=\"1、基础总结深入\"><a href=\"#1、基础总结深入\" class=\"headerlink\" title=\"1、基础总结深入\"></a>1、基础总结深入</h2><h3 id=\"1-1-数据类型的分类和判断\"><a href=\"#1-1-数据类型的分类和判断\" class=\"headerlink\" title=\"1.1 数据类型的分类和判断\"></a>1.1 数据类型的分类和判断</h3><ul>\n<li><p>基本(值)类型</p>\n<ul>\n<li>Number —  任意数值— typeof</li>\n<li>String —  任意字符串— typeof</li>\n<li>Boolean —  true&#x2F;false —  typeof</li>\n<li>undefined — undefined —– typeof&#x2F;&#x3D;&#x3D;&#x3D;(代表没有赋值)</li>\n<li>null —  null —  &#x3D;&#x3D;&#x3D;(代表赋值了, 只是值为null)</li>\n</ul>\n</li>\n<li><p>对象(引用)类型</p>\n<ul>\n<li>Object —  任意对象— typeof&#x2F;instanceof</li>\n<li>Array — 特别的对象类型(下标&#x2F;内部数据有序) — instanceof</li>\n<li>Function — 别的对象类型(可执行) — typeof</li>\n</ul>\n</li>\n<li><p>判断：</p>\n<ul>\n<li><p>typeof：</p>\n<ul>\n<li>可以区别: 数值, 字符串, 布尔值, undefined, function</li>\n<li><strong>不能区别: null与对象, 一般对象与数组</strong></li>\n<li><strong>typeof: 返回的是数据类型的字符串表达形式</strong></li>\n</ul>\n</li>\n<li><p>instanceof</p>\n<ul>\n<li><strong>专门用来判断对象数据的类型: Object, Array与Function</strong></li>\n</ul>\n</li>\n<li><p>&#x3D;&#x3D;&#x3D;</p>\n<ul>\n<li><strong>可以判断: undefined和null</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">  &lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">type</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">text/javascript</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//1. 基本类型</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> a</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(a</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> a</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> a </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">undefined</span><span style=\"color: #BABED8\">) </span><span style=\"color: #676E95; font-style: italic\">// undefined &#39;undefined&#39; true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(a </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> a) </span><span style=\"color: #676E95; font-style: italic\">// false  undefined ≠ &#39;undefined&#39;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//typeof返回字符串类型</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> a </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">number</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">) </span><span style=\"color: #676E95; font-style: italic\">// true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">atguigu</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> a </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">string</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">) </span><span style=\"color: #676E95; font-style: italic\">// true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FF9CAC\">true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> a </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">boolean</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">) </span><span style=\"color: #676E95; font-style: italic\">// true</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(a </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null</span><span style=\"color: #BABED8\">) </span><span style=\"color: #676E95; font-style: italic\">// true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> a) </span><span style=\"color: #676E95; font-style: italic\">// &#39;object&#39;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">--------------------------------</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//2. 对象类型</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> b1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #F07178\">b2</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">abc</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">log]</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #676E95; font-style: italic\">//number string function  </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #82AAFF\">b3</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">b3()</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(b1 </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Object</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> b1) </span><span style=\"color: #676E95; font-style: italic\">// true &#39;object&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(b1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">b2 </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Array</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> b1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">b2) </span><span style=\"color: #676E95; font-style: italic\">// true &#39;object&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(b1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">b3 </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Function</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> b1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">b3) </span><span style=\"color: #676E95; font-style: italic\">// true &#39;function&#39;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> b1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">b2[</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">]) </span><span style=\"color: #676E95; font-style: italic\">// &#39;function&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(b1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">b2[</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">](</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">abc</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)) </span><span style=\"color: #676E95; font-style: italic\">// 内&#39;abc&#39; 外undefined</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><h3 id=\"1-2-数据-变量-内存的理解\"><a href=\"#1-2-数据-变量-内存的理解\" class=\"headerlink\" title=\"1.2 数据,变量, 内存的理解\"></a>1.2 数据,变量, 内存的理解</h3><ul>\n<li><p>数据</p>\n<ul>\n<li>在内存中可读的, 可传递的保存了特定信息的’东东’</li>\n<li>一切皆数据, 函数也是数据</li>\n<li>在内存中的所有操作的目标: 数据</li>\n</ul>\n</li>\n<li><p>变量</p>\n<ul>\n<li>在程序运行过程中它的值是允许改变的量</li>\n<li>一个变量对应一块小内存, 它的值保存在此内存中</li>\n</ul>\n</li>\n<li><p>内存</p>\n<ul>\n<li>内存条通电后产生的存储空间(临时的)</li>\n<li>一块内存包含2个方面的数据<ul>\n<li>内部存储的数据</li>\n<li>地址值数据</li>\n</ul>\n</li>\n<li>内存空间的分类<ul>\n<li>栈空间: 全局变量和局部变量</li>\n<li>堆空间: 对象</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>内存,数据, 变量三者之间的关系</p>\n<ul>\n<li>内存是容器, 用来存储不同数据</li>\n<li>变量是内存的标识, 通过变量我们可以操作(读&#x2F;写)内存中的数据</li>\n</ul>\n</li>\n<li><p>var a &#x3D; xxx, a内存中到底保存的是什么?</p>\n</li>\n<li><p>xxx是一个基本数据，保存的就是这个数据</p>\n</li>\n<li><p>xxx是一个对象，保存的是对象的地址值</p>\n</li>\n<li><p>xxx是一个变量，保存的是xxx的内容</p>\n</li>\n</ul>\n<h3 id=\"1-3-对象的理解和使用\"><a href=\"#1-3-对象的理解和使用\" class=\"headerlink\" title=\"1.3 对象的理解和使用\"></a>1.3 对象的理解和使用</h3><ul>\n<li>对象<ul>\n<li>多个数据(属性)的集合</li>\n<li>用来保存多个数据(属性)的容器</li>\n</ul>\n</li>\n<li>属性<ul>\n<li>属性名 : 字符串(标识)</li>\n<li>属性值 : 任意类型</li>\n</ul>\n</li>\n<li>属性的分类:<ul>\n<li>一般 : 属性值不是function  描述对象的状态</li>\n<li>方法 : 属性值为function的属性  描述对象的行为</li>\n</ul>\n</li>\n<li>特别的对象<ul>\n<li>数组: 属性名是0,1,2,3之类的索引</li>\n<li>函数: 可以执行的</li>\n</ul>\n</li>\n<li>如何操作内部属性(方法)<ul>\n<li><strong>.属性名: 编码简单, 但有时不能用</strong></li>\n<li><strong>[ ‘属性名’]: 编码麻烦, 但通用</strong>(属性名不是合法的标识名、属性名不确定)</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">  &lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">type</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">text/javascript</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// 创建对象</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">/*情形一: 属性名不是合法的标识名*/</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">/*需求: 添加一个属性: content-type: text/json */</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//  p.content-type = &#39;text/json&#39; //不正确</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    p[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">content-type</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">text/json</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">/*情形二: 属性名不确定*/</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> prop </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">xxx</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #676E95; font-style: italic\">//变量 不确定</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">123</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// p.prop = value  //不正确</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    p[prop] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> value</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(p[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">content-type</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">]</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> p[prop])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><h3 id=\"1-4-函数的理解和使用\"><a href=\"#1-4-函数的理解和使用\" class=\"headerlink\" title=\"1.4 函数的理解和使用\"></a>1.4 函数的理解和使用</h3><ul>\n<li>函数<ul>\n<li>用来实现特定功能的, n条语句的封装体</li>\n<li>只有函数类型的数据是可以执行的, 其它的都不可以</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">  &lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">type</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">text/javascript</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">f1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span><span style=\"color: #676E95; font-style: italic\">// 函数声明</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">f1()</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> f2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span><span style=\"color: #676E95; font-style: italic\">// 表达式</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">f2()</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">f1</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">f2</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><ul>\n<li><p>为什么要用函数?</p>\n<ul>\n<li>提高复用性</li>\n<li>便于阅读交流</li>\n</ul>\n</li>\n<li><p>函数也是对象</p>\n<ul>\n<li>instanceof Object&#x3D;&#x3D;&#x3D;true</li>\n<li>函数有属性: prototype</li>\n<li>函数有方法: call()&#x2F;apply()</li>\n<li>可以添加新的属性&#x2F;方法</li>\n</ul>\n</li>\n<li><p>函数的3种不同角色</p>\n<ul>\n<li><strong>一般函数 : 直接调用</strong></li>\n<li><strong>构造函数 : 通过new调用</strong></li>\n<li><strong>对象 : 通过.调用内部的属性&#x2F;方法</strong></li>\n</ul>\n</li>\n</ul>\n<p><strong>函数中的this</strong></p>\n<ul>\n<li><strong>显式指定谁: obj.xxx()</strong></li>\n<li><strong>通过call&#x2F;apply指定谁调用: xxx.call(obj)</strong></li>\n<li><strong>不指定谁调用: xxx()  : window</strong></li>\n<li><strong>回调函数: 看背后是通过谁来调用的: window&#x2F;其它</strong></li>\n</ul>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">type</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">text/javascript</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Person</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">color</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">color</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">color</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #82AAFF\">getColor</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">color</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #82AAFF\">setColor</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">color</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">color</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">color</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Person</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">red</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//this是 windows</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> p </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Person</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">yello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//this是 p</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    p</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getColor</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//this是 p </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> obj </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    p</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">setColor</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">call</span><span style=\"color: #BABED8\">(obj</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">black</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//this是 obj</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> test </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> p</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">setColor</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">test</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//this是 windows</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fun1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">fun2</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #82AAFF\">fun2</span><span style=\"color: #F07178\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #676E95; font-style: italic\">//this是 windows</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">fun1</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><p><strong>匿名函数自调用</strong></p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">  (</span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">w</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">obj</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//实现代码</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)(window</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> obj)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  (</span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">a</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">4</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">fn </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\">a</span><span style=\"color: #F07178\">)</span><span style=\"color: #676E95; font-style: italic\">//fn 7</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #F07178\">()</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span></span></code></pre></div><ul>\n<li>专业术语为: <strong>IIFE (Immediately Invoked Function Expression) 立即调用函数表达式</strong></li>\n</ul>\n<p>\t</p>\n<p><strong>回调函数</strong></p>\n<ul>\n<li>什么函数才是回调函数?<ul>\n<li>你定义的</li>\n<li>你没有调用</li>\n<li>但它最终执行了(在一定条件下或某个时刻)</li>\n</ul>\n</li>\n<li>常用的回调函数<ul>\n<li>dom事件回调函数</li>\n<li>定时器回调函数</li>\n<li>ajax请求回调函数</li>\n<li>生命周期回调函数</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\"> &lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">type</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">text/javascript</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//1. DOM事件函数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> btn </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> document</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getElementById</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">btn</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    btn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">onclick</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #82AAFF\">alert</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">innerHTML</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//2. 定时器函数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">setInterval</span><span style=\"color: #BABED8\">(</span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #82AAFF\">alert</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">到点啦!</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2000</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><h2 id=\"2、函数高级\"><a href=\"#2、函数高级\" class=\"headerlink\" title=\"2、函数高级\"></a>2、函数高级</h2><h3 id=\"2-1-原型与原型链\"><a href=\"#2-1-原型与原型链\" class=\"headerlink\" title=\"2.1 原型与原型链\"></a>2.1 原型与原型链</h3><ul>\n<li>所有函数都有一个特别的属性:<ul>\n<li><code>prototype</code> : 显式原型属性</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95; font-style: italic\">// 每个函数都有一个prototype属性, 它默认指向一个对象(即称为: 原型对象)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #FFCB6B\">fn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">fn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype)</span><span style=\"color: #676E95; font-style: italic\">//object &#39;object&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 原型对象中有一个属性constructor, 它指向函数对象</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #FFCB6B\">fn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">constructor</span><span style=\"color: #89DDFF\">===</span><span style=\"color: #BABED8\">fn)</span><span style=\"color: #676E95; font-style: italic\">//true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95; font-style: italic\">// 2. 给原型对象添加属性(一般都是方法)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">F</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #FFCB6B\">F</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">age </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//添加属性</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #FFCB6B\">F</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setAge</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">age</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span><span style=\"color: #676E95; font-style: italic\">// 添加方法</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">age</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">age</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95; font-style: italic\">// 创建函数的实例对象</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> f </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">F</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(f</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">age)</span><span style=\"color: #676E95; font-style: italic\">//12</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  f</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setAge</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">23</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(f</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">age)</span><span style=\"color: #676E95; font-style: italic\">//23</span></span></code></pre></div><ul>\n<li>所有实例对象都有一个特别的属性:<ul>\n<li><code>__proto__</code> : 隐式原型属性</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95; font-style: italic\">//对象的隐式原型的值为其对应构造函数的显式原型的值 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Fn</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> fn </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Fn</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #FFCB6B\">Fn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> fn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">__proto__)</span><span style=\"color: #676E95; font-style: italic\">//object  object</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #FFCB6B\">Fn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">===</span><span style=\"color: #BABED8\">fn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">__proto__)</span><span style=\"color: #676E95; font-style: italic\">//true</span></span></code></pre></div><ul>\n<li>显式原型与隐式原型的关系<ul>\n<li>函数的prototype: 定义函数时被自动赋值, 值默认为{}, 即用为原型对象</li>\n<li>实例对象的__ proto__: 在创建实例对象时被自动添加, 并赋值为构造函数的prototype值</li>\n<li>原型对象即为当前实例对象的父对象</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/216be40352e64c1f802c41e380756cae.png#pic_center\"></p>\n<ul>\n<li>原型链（隐式原型链）<ul>\n<li>所有的实例对象都有__ proto__属性, 它指向的就是原型对象</li>\n<li>这样<strong>通过__ proto__属性就形成了一个链的结构—-&gt;原型链</strong></li>\n<li>当<strong>查找对象内部的属性&#x2F;方法时</strong>, js引擎自动沿着这个原型链查找</li>\n<li>当给<strong>对象属性赋值时不会使用原型链</strong>, 而只是在当前对象中进行操作</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/6b74451bda0540daa123d1811e75019a.png#pic_center\"></p>\n<ul>\n<li><strong>函数的显示原型指向的对象默认是空object实例对象（但object除外）</strong></li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #FFCB6B\">Object</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Object</span><span style=\"color: #BABED8\">)</span><span style=\"color: #676E95; font-style: italic\">//false</span></span></code></pre></div><ul>\n<li><strong>所有函数都是Function的实例(包含Function)</strong></li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(Function</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">__proto__</span><span style=\"color: #89DDFF\">===</span><span style=\"color: #FFCB6B\">Function</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype)</span><span style=\"color: #676E95; font-style: italic\">//false</span></span></code></pre></div><ul>\n<li><p><strong>Object的原型对象是原型链的尽头</strong></p>\n</li>\n<li><p>instanceof</p>\n<ul>\n<li>表达式: A instanceof B</li>\n<li>如果B函数的显式原型对象在A对象的原型链上, 返回true, 否则返回false</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/b313fa0e35a4421a94e95dfb893282a3.png#pic_center\"></p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Foo</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> f1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Foo</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(f1 </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Foo</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(f1 </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Object</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//true</span></span></code></pre></div><p><img src=\"https://img-blog.csdnimg.cn/98dbeec5144540a4a7c726b45a0496d0.png#pic_center\"></p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(Object </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Function</span><span style=\"color: #BABED8\">)</span><span style=\"color: #676E95; font-style: italic\">//true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(Object </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Object</span><span style=\"color: #BABED8\">)</span><span style=\"color: #676E95; font-style: italic\">//true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(Function </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Object</span><span style=\"color: #BABED8\">)</span><span style=\"color: #676E95; font-style: italic\">//true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(Function </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Function</span><span style=\"color: #BABED8\">)</span><span style=\"color: #676E95; font-style: italic\">//true</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Foo</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(Object </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\">  </span><span style=\"color: #FFCB6B\">Foo</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//false</span></span></code></pre></div><ul>\n<li>典例</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> A </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #FFCB6B\">A</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">n </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">A</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #FFCB6B\">A</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> c </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">A</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(b</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> b</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">m</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> c</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> c</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">m)</span><span style=\"color: #676E95; font-style: italic\">//1 undefined 2 3</span></span></code></pre></div><p><img src=\"https://img-blog.csdnimg.cn/c6aabf4f5d1c4524bf5ceb730eea089f.png#pic_center\"></p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> F </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #FFCB6B\">Object</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">a</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a()</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #FFCB6B\">Function</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">b</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">b()</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> f </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">F</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    f</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">a</span><span style=\"color: #BABED8\">()</span><span style=\"color: #676E95; font-style: italic\">//a()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    f</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">b</span><span style=\"color: #BABED8\">()</span><span style=\"color: #676E95; font-style: italic\">//报错 原型链找不到</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    F</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">a</span><span style=\"color: #BABED8\">()</span><span style=\"color: #676E95; font-style: italic\">//a()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    F</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">b</span><span style=\"color: #BABED8\">()</span><span style=\"color: #676E95; font-style: italic\">//b()</span></span></code></pre></div><h3 id=\"2-2-执行上下文与执行上下文栈\"><a href=\"#2-2-执行上下文与执行上下文栈\" class=\"headerlink\" title=\"2.2 执行上下文与执行上下文栈\"></a>2.2 执行上下文与执行上下文栈</h3><ul>\n<li>变量提升与函数提升<ul>\n<li>变量提升: 在变量定义语句之前, 就可以访问到这个变量**(undefined)**</li>\n<li>函数提升: <strong>通过function声明的函数</strong>，在函数定义语句之前, 就执行该函数</li>\n<li><strong>先有变量提升, 再有函数提升</strong></li>\n</ul>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">/*变量提升*/</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(a1) </span><span style=\"color: #676E95; font-style: italic\">//可以访问, 但值是undefined</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">/*函数提升*/</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">a2</span><span style=\"color: #BABED8\">() </span><span style=\"color: #676E95; font-style: italic\">// 可以直接调用</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> a1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">a2</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a2()</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><ul>\n<li>理解<ul>\n<li>执行上下文: 由js引擎自动创建的对象, 包含对应作用域中的所有变量属性</li>\n<li>执行上下文栈: 用来管理产生的多个执行上下文</li>\n</ul>\n</li>\n<li>分类:<ul>\n<li>全局: window</li>\n<li>函数: 对程序员来说是透明的</li>\n</ul>\n</li>\n<li>生命周期<ul>\n<li>全局 : 准备执行全局代码前产生, 当页面刷新&#x2F;关闭页面时死亡</li>\n<li>函数 : 调用函数时产生, 函数执行完时死亡</li>\n</ul>\n</li>\n<li>包含哪些属性:<ul>\n<li>全局 : <ul>\n<li><strong>用var定义的全局变量  &#x3D;&#x3D;&gt;undefined</strong></li>\n<li><strong>使用function声明的函数   &#x3D;&#x3D;&#x3D;&gt;function</strong></li>\n<li><strong>this   &#x3D;&#x3D;&#x3D;&gt;window</strong></li>\n</ul>\n</li>\n<li>函数<ul>\n<li><strong>用var定义的局部变量  &#x3D;&#x3D;&gt;undefined</strong></li>\n<li><strong>使用function声明的函数   &#x3D;&#x3D;&#x3D;&gt;function</strong></li>\n<li><strong>this   &#x3D;&#x3D;&#x3D;&gt; 调用函数的对象, 如果没有指定就是window</strong> </li>\n<li><strong>形参变量   &#x3D;&#x3D;&#x3D;&gt;对应实参值</strong></li>\n<li><strong>arguments &#x3D;&#x3D;&#x3D;&gt;实参列表的伪数组</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">a1</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">a1</span><span style=\"color: #F07178\">)</span><span style=\"color: #676E95; font-style: italic\">//2</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">a2</span><span style=\"color: #F07178\">)</span><span style=\"color: #676E95; font-style: italic\">//undefined</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">a3</span><span style=\"color: #F07178\">()</span><span style=\"color: #676E95; font-style: italic\">//a3()</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this</span><span style=\"color: #F07178\">)</span><span style=\"color: #676E95; font-style: italic\">//window</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">atguments</span><span style=\"color: #F07178\">)</span><span style=\"color: #676E95; font-style: italic\">//伪数组(2,3)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">a2</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">3</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">a3</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a3()</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">fn</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">)</span></span></code></pre></div><ul>\n<li>执行上下文创建和初始化的过程<ul>\n<li>全局:<ul>\n<li>在全局代码执行前最先创建一个全局执行上下文(window)</li>\n<li>收集一些全局变量, 并初始化</li>\n<li>将这些变量设置为window的属性</li>\n</ul>\n</li>\n<li>函数:<ul>\n<li>在调用函数时, 在执行函数体之前先创建一个函数执行上下文</li>\n<li>收集一些局部变量, 并初始化</li>\n<li>将这些变量设置为执行上下文的属性</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//1. 进入全局执行上下文</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> bar </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">b</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">5</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #82AAFF\">foo</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">x</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">b</span><span style=\"color: #F07178\">)              </span><span style=\"color: #676E95; font-style: italic\">//3. 进入foo执行上下文</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> foo </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">y</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">c</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">5</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">a</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">c</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">y</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">bar</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\">)                    </span><span style=\"color: #676E95; font-style: italic\">//2. 进入bar函数执行上下文</span></span></code></pre></div><div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">     </span><span style=\"color: #676E95; font-style: italic\">/*</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    测试题1: 先预处理变量, 后预处理函数</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">a</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> a</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #BABED8\"> a)</span><span style=\"color: #676E95; font-style: italic\">//function</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">/*</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    测试题2: 变量预处理, in操作符</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">     */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #89DDFF\">!</span><span style=\"color: #BABED8\">(b </span><span style=\"color: #89DDFF\">in</span><span style=\"color: #BABED8\"> window)) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">b</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(b)</span><span style=\"color: #676E95; font-style: italic\">//undefined</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">/*</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    测试题3: 预处理, 顺序执行</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">     */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> c </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//var c</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">c</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">c</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">c</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">c</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">3</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//c = 1</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">c</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">)</span><span style=\"color: #676E95; font-style: italic\">//报错</span></span></code></pre></div><h3 id=\"2-3-作用域与作用域链\"><a href=\"#2-3-作用域与作用域链\" class=\"headerlink\" title=\"2.3 作用域与作用域链\"></a>2.3 作用域与作用域链</h3><ul>\n<li>理解:<ul>\n<li>作用域: 一块代码区域, 在编码时就确定了, 不会再变化</li>\n<li>作用域链: 多个嵌套的作用域形成的由内向外的结构, 用于查找变量</li>\n</ul>\n</li>\n<li>分类:<ul>\n<li>全局作用域</li>\n<li>函数作用域</li>\n<li><strong>js没有块作用域(在ES6之前)</strong></li>\n</ul>\n</li>\n<li>作用<ul>\n<li>作用域: <strong>隔离变量</strong>, 可以在不同作用域定义同名的变量不冲突</li>\n<li>作用域链**: 查找变量**</li>\n</ul>\n</li>\n<li>区别作用域与执行上下文 <ul>\n<li>作用域: 静态的, 编码时就确定了(不是在运行时), 一旦确定就不会变化了</li>\n<li>执行上下文: 动态的, 执行代码时动态创建, 当执行结束消失</li>\n<li>联系: 执行上下文环境是在对应的作用域中的</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      b </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">20</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">a</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">c</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">300</span><span style=\"color: #F07178\">；</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">fn()</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">a</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">b</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">c</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">x</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">bar</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">a</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">          </span><span style=\"color: #BABED8\">d</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">400</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">bar()</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">a</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">b</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">c</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">d</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">x</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #82AAFF\">bar</span><span style=\"color: #F07178\">(</span><span style=\"color: #F78C6C\">100</span><span style=\"color: #F07178\">)</span><span style=\"color: #676E95; font-style: italic\">//bar() 1000 20 300 400 100</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #82AAFF\">bar</span><span style=\"color: #F07178\">(</span><span style=\"color: #F78C6C\">200</span><span style=\"color: #F07178\">)</span><span style=\"color: #676E95; font-style: italic\">//bar() 1000 20 300 400 200</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\">)</span><span style=\"color: #676E95; font-style: italic\">//fn() 100 20 300 10</span></span></code></pre></div><div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">x</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">f</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">x</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">20</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">f</span><span style=\"color: #F07178\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #BABED8\">(fn)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//fn和show是同级函数</span></span></code></pre></div><div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> fn </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">fn</span><span style=\"color: #F07178\">)</span><span style=\"color: #676E95; font-style: italic\">//输出函数</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">fn</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> obj </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #82AAFF\">fn2</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">fn2</span><span style=\"color: #F07178\">)</span><span style=\"color: #676E95; font-style: italic\">//报错</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">//console.log(this.fn2)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    obj</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fn2</span><span style=\"color: #BABED8\">()</span></span></code></pre></div><h3 id=\"2-4-闭包\"><a href=\"#2-4-闭包\" class=\"headerlink\" title=\"2.4 闭包\"></a>2.4 闭包</h3><ul>\n<li><p>理解:</p>\n<ul>\n<li><strong>当嵌套的内部函数引用了外部函数的变量时就产生了闭包</strong></li>\n<li>通过chrome工具得知: 闭包本质是内部函数中的一个对象, 这个对象中包含引用的变量属性</li>\n</ul>\n</li>\n<li><p>作用:</p>\n<ul>\n<li>延长局部变量的生命周期</li>\n<li>让函数外部能操作内部的局部变量</li>\n</ul>\n</li>\n<li><p>常见的闭包</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 1. 将函数作为另一个函数的返回值</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fn1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">a</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">fn2</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">a</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">a</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">fn2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> f </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fn1</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">f</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//3</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">f</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//4</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 2. 将函数作为实参传递给另一个函数调用</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">showMsgDelay</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">msg</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">time</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #82AAFF\">setTimeout</span><span style=\"color: #F07178\">(</span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">msg</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">time</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">showMsgDelay</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\">)</span></span></code></pre></div></li>\n<li><p>闭包的生命周期</p>\n<ul>\n<li>产生: 在嵌套内部函数<strong>定义执行</strong>完时就产生了(不是在调用)</li>\n<li>死亡: 在嵌套的内部函数成为<strong>垃圾对象</strong>时</li>\n</ul>\n</li>\n<li><p>闭包应用:</p>\n<ul>\n<li><strong>模块化: 封装一些数据以及操作数据的函数, 向外暴露一些行为</strong></li>\n<li>循环遍历加监听</li>\n<li>JS框架(jQuery)大量使用了闭包</li>\n</ul>\n</li>\n<li><p>缺点:</p>\n<ul>\n<li>变量占用内存的时间可能会过长</li>\n<li>可能导致内存泄露</li>\n<li>解决:<ul>\n<li>及时释放 : f &#x3D; null; &#x2F;&#x2F;让内部函数对象成为垃圾对象</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//代码片段一</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">The Window</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> object </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">My Object</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #82AAFF\">getNameFunc</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">          </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(object</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getNameFunc</span><span style=\"color: #BABED8\">()())</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">//The Window 直接执行函数，this指向window 无闭包</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//代码片段二</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> name2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">The Window</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> object2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #F07178\">name2</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">My Object</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #82AAFF\">getNameFunc</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">that</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">this;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">          </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">that</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(object2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getNameFunc</span><span style=\"color: #BABED8\">()())</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//My Object that保存的是函数 有闭包</span></span></code></pre></div><div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">n</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">o</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">o</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">m</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">          </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">m</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">n</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    a</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    a</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    a</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">) </span><span style=\"color: #676E95; font-style: italic\">//undefined,0,0,0 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">) </span><span style=\"color: #676E95; font-style: italic\">//undefined,0,1,2 闭包</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> c </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    c</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    c</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">fun</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">) </span><span style=\"color: #676E95; font-style: italic\">//undefined,0,1,1 前面闭包，后面是因为闭包延长局部变量的生命周期</span></span></code></pre></div><h3 id=\"2-5-内存溢出与内存泄露\"><a href=\"#2-5-内存溢出与内存泄露\" class=\"headerlink\" title=\"2.5 内存溢出与内存泄露\"></a>2.5 内存溢出与内存泄露</h3><ol>\n<li>内存溢出</li>\n</ol>\n<ul>\n<li>一种程序运行出现的错误</li>\n<li>当程序运行需要的内存超过了剩余的内存时, 就出抛出内存溢出的错误</li>\n</ul>\n<ol start=\"2\">\n<li>内存泄露</li>\n</ol>\n<ul>\n<li>占用的内存没有及时释放</li>\n<li>内存泄露积累多了就容易导致内存溢出</li>\n<li>常见的内存泄露:<ul>\n<li>意外的全局变量</li>\n<li>没有及时清理的计时器或回调函数</li>\n<li>闭包</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3、对象高级\"><a href=\"#3、对象高级\" class=\"headerlink\" title=\"3、对象高级\"></a>3、对象高级</h2><h3 id=\"3-1-对象的创建模式\"><a href=\"#3-1-对象的创建模式\" class=\"headerlink\" title=\"3.1 对象的创建模式\"></a>3.1 对象的创建模式</h3><ul>\n<li><p>Object构造函数模式</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//适用场景: 起始时不确定对象内部数据</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//问题: 语句太多</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> obj </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">obj</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Tom</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">obj</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">name</span><span style=\"color: #89DDFF\">)&#123;this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div></li>\n<li><p>对象字面量模式</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//适用场景: 起始时对象内部数据是确定的</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//问题: 如果创建多个对象, 有重复代码</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> obj </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">name </span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Tom</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">name</span><span style=\"color: #89DDFF\">)&#123;this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div></li>\n<li><p>工厂模式</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 工厂函数: 返回一个需要的数据的函数</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//适用场景: 需要创建多个对象</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//问题: 对象没有一个具体的类型, 都是Object类型</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">createPerson</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">name</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">age</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      age</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">age</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">name</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">name</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">p</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div></li>\n<li><p>构造函数模式</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//适用场景: 需要创建多个类型确定的对象</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//问题: 每个对象都有相同的数据, 浪费内存</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Person</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">name</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">age</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">age</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">age</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">name</span><span style=\"color: #89DDFF\">)&#123;this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">;&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Person</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">tom</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div></li>\n<li><p>构造函数+原型的组合模式</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//适用场景: 需要创建多个类型确定的对象</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Person</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">name</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">age</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">age</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">age</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Person</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">name</span><span style=\"color: #89DDFF\">)&#123;this.</span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">;&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Person</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">tom</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div></li>\n</ul>\n<h3 id=\"3-2-继承模式\"><a href=\"#3-2-继承模式\" class=\"headerlink\" title=\"3.2 继承模式\"></a>3.2 继承模式</h3><ul>\n<li>原型链继承 : 得到方法,<strong>子类型的原型为父类型的一个实例对象</strong>(关键)<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Parent</span><span style=\"color: #89DDFF\">()&#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Parent</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">test</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">()&#123;&#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Child</span><span style=\"color: #89DDFF\">()&#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Child</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Parent</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 子类型的原型指向父类型实例</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Child</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">constructor </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Child</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> child </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Child</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//有test()</span></span></code></pre></div></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/5e26c428bae2465383cb7cf354bba124.png#pic_center\"></p>\n<ul>\n<li><p>借用构造函数 : 得到属性，<strong>在子类型构造函数中通用super()调用父类型构造函数</strong>(关键)</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Parent</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">xxx</span><span style=\"color: #89DDFF\">)&#123;this.</span><span style=\"color: #BABED8\">xxx</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">xxx</span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Parent</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">test</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">()&#123;&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Child</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">xxx</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8; font-style: italic\">yyy</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Parent</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">call</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">xxx</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//借用构造函数   this.Parent(xxx)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> child </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Child</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">b</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">//child.xxx为&#39;a&#39;, 但child没有test()</span></span></code></pre></div></li>\n<li><p>组合</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Parent</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">xxx</span><span style=\"color: #89DDFF\">)&#123;this.</span><span style=\"color: #BABED8\">xxx</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">xxx</span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Parent</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">test</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">()&#123;&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Child</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">xxx</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8; font-style: italic\">yyy</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">Parent</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">call</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">xxx</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//借用构造函数   this.Parent(xxx)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Child</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">prototype </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Parent</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//得到test()</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> child </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Child</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//child.xxx为&#39;a&#39;, 也有test()</span></span></code></pre></div></li>\n<li><p>new一个对象背后做了些什么?</p>\n<ul>\n<li>创建一个空对象</li>\n<li>给对象设置__ proto__ , 值为构造函数对象的prototype属性值   this.__ proto__ &#x3D; Fn.prototype</li>\n<li>执行构造函数体(给对象添加属性&#x2F;方法)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4、线程机制与事程机制\"><a href=\"#4、线程机制与事程机制\" class=\"headerlink\" title=\"4、线程机制与事程机制\"></a>4、线程机制与事程机制</h2><h3 id=\"4-1-线程与进程\"><a href=\"#4-1-线程与进程\" class=\"headerlink\" title=\"4.1 线程与进程\"></a>4.1 线程与进程</h3><ul>\n<li>进程:<ul>\n<li>程序的一次执行, 它占有一片独有的内存空间</li>\n<li>可以通过windows任务管理器查看进程</li>\n</ul>\n</li>\n<li>线程:<ul>\n<li>是进程内的一个独立执行单元</li>\n<li>是程序执行的一个完整流程</li>\n<li><strong>是CPU的基本调度单元</strong></li>\n</ul>\n</li>\n<li>关系<ul>\n<li>一个进程至少有一个线程(主)</li>\n<li>程序是在某个进程中的某个线程执行的</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-2-浏览器内核模块组成\"><a href=\"#4-2-浏览器内核模块组成\" class=\"headerlink\" title=\"4.2 浏览器内核模块组成\"></a>4.2 浏览器内核模块组成</h3><ul>\n<li>主线程<ul>\n<li>js引擎模块 : 负责js程序的编译与运行</li>\n<li>html,css文档解析模块 : 负责页面文本的解析</li>\n<li>DOM&#x2F;CSS模块 : 负责dom&#x2F;css在内存中的相关处理 </li>\n<li>布局和渲染模块 : 负责页面的布局和效果的绘制(内存中的对象)</li>\n</ul>\n</li>\n<li>分线程<ul>\n<li>定时器模块 : 负责定时器的管理</li>\n<li>DOM事件模块 : 负责事件的管理</li>\n<li>网络请求模块 : 负责Ajax请求</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-3-js线程\"><a href=\"#4-3-js线程\" class=\"headerlink\" title=\"4.3 js线程\"></a>4.3 js线程</h3><ul>\n<li>js是单线程执行的(回调函数也是在主线程)</li>\n<li>JavaScript的单线程，与它的用途有关；作为浏览器脚本语言，JavaScript的主要用途是与用户互动，以及操作DOM。这决定了它只能是单线程，否则会带来很复杂的同步问题</li>\n<li>H5提出了实现多线程的方案: Web Workers；只能是主线程更新界面</li>\n</ul>\n<h3 id=\"4-4-定时器问题\"><a href=\"#4-4-定时器问题\" class=\"headerlink\" title=\"4.4 定时器问题\"></a>4.4 定时器问题</h3><ul>\n<li>定时器并不真正完全定时</li>\n<li>如果在主线程执行了一个长时间的操作, 可能导致延时才处理</li>\n</ul>\n<h3 id=\"4-5-事件处理机制\"><a href=\"#4-5-事件处理机制\" class=\"headerlink\" title=\"4. 5 事件处理机制\"></a>4. 5 事件处理机制</h3><ul>\n<li>代码分类<ul>\n<li>初始化执行代码: <strong>包含绑定dom事件监听, 设置定时器, 发送ajax请求的代码</strong></li>\n<li>回调执行代码: 处理回调逻辑</li>\n</ul>\n</li>\n<li>js引擎执行代码的基本流程: <ul>\n<li>初始化代码&#x3D;&#x3D;&#x3D;&gt;回调代码</li>\n</ul>\n</li>\n<li>模型的2个重要组成部分:<ul>\n<li>事件管理模块</li>\n<li>回调队列</li>\n</ul>\n</li>\n<li>模型的运转流程<ul>\n<li>执行初始化代码, 将事件回调函数交给对应模块管理</li>\n<li>当事件发生时, 管理模块会将回调函数及其数据添加到回调列队中</li>\n<li>只有当初始化代码执行完后(可能要一定时间), 才会遍历读取回调队列中的回调函数执行</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/6a6ec78fa0d74b6490cef4aacb8232c2.png#pic_center\"></p>\n<h3 id=\"4-6-H5-Web-Workers\"><a href=\"#4-6-H5-Web-Workers\" class=\"headerlink\" title=\"4.6 H5 Web Workers\"></a>4.6 H5 Web Workers</h3><p><img src=\"https://img-blog.csdnimg.cn/6b5a0c210a9b4608ad36f8c415c3c5bf.png#pic_center\"></p>\n<ul>\n<li><p>可以让js在分线程执行</p>\n</li>\n<li><p>Worker</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> worker </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Worker</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">worker.js</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">worker</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">onMessage</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">event</span><span style=\"color: #89DDFF\">)&#123;</span><span style=\"color: #BABED8\">event</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">&#125;;</span><span style=\"color: #676E95; font-style: italic\">// 用来接收另一个线程发送过来的数据的回调</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">worker</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">postMessage</span><span style=\"color: #BABED8\">(data1)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//向另一个线程发送数据</span></span></code></pre></div></li>\n<li><p>问题:</p>\n<ul>\n<li>worker内代码不能操作DOM更新UI</li>\n<li>不是每个浏览器都支持这个新特性</li>\n<li>不能跨域加载JS</li>\n</ul>\n</li>\n</ul>\n","feature":true,"text":"JavaScript高级语法包括闭包、原型链、对象高级、线程与执行机制等。掌握这些高级语法可以提升代码的可维护性和性能，实现更复杂的功能和逻辑。在前端开发中，熟练应用JavaScript高级语法能够编写出结构清晰、功能强大的代码，为用户提供更流畅的交互体验。...","permalink":"/post/前端--JavaScript高级","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JavaScript%E9%AB%98%E7%BA%A7\"><span class=\"toc-text\">JavaScript高级</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93%E6%B7%B1%E5%85%A5\"><span class=\"toc-text\">1、基础总结深入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%88%86%E7%B1%BB%E5%92%8C%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">1.1 数据类型的分类和判断</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E6%95%B0%E6%8D%AE-%E5%8F%98%E9%87%8F-%E5%86%85%E5%AD%98%E7%9A%84%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">1.2 数据,变量, 内存的理解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%90%86%E8%A7%A3%E5%92%8C%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">1.3 对象的理解和使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-%E5%87%BD%E6%95%B0%E7%9A%84%E7%90%86%E8%A7%A3%E5%92%8C%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">1.4 函数的理解和使用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%87%BD%E6%95%B0%E9%AB%98%E7%BA%A7\"><span class=\"toc-text\">2、函数高级</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE\"><span class=\"toc-text\">2.1 原型与原型链</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%8E%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88\"><span class=\"toc-text\">2.2 执行上下文与执行上下文栈</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE\"><span class=\"toc-text\">2.3 作用域与作用域链</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E9%97%AD%E5%8C%85\"><span class=\"toc-text\">2.4 闭包</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E4%B8%8E%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2\"><span class=\"toc-text\">2.5 内存溢出与内存泄露</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7\"><span class=\"toc-text\">3、对象高级</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">3.1 对象的创建模式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E7%BB%A7%E6%89%BF%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">3.2 继承模式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E7%BA%BF%E7%A8%8B%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BA%8B%E7%A8%8B%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">4、线程机制与事程机制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">4.1 线程与进程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E7%BB%84%E6%88%90\"><span class=\"toc-text\">4.2 浏览器内核模块组成</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-js%E7%BA%BF%E7%A8%8B\"><span class=\"toc-text\">4.3 js线程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%E5%AE%9A%E6%97%B6%E5%99%A8%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">4.4 定时器问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5-%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">4. 5 事件处理机制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-6-H5-Web-Workers\"><span class=\"toc-text\">4.6 H5 Web Workers</span></a></li></ol></li></ol></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"提高开发效率：ES6技巧大全","uid":"26420f1034bff9b91a54684d743949a2","slug":"前端--一文轻松搞懂ES6-ES11(ES6详解)","date":"2023-01-12T00:36:22.000Z","updated":"2025-07-14T15:12:20.465Z","comments":true,"path":"api/articles/前端--一文轻松搞懂ES6-ES11(ES6详解).json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/693b39076a084dd39ab56802ff1834b9.jpeg","text":"ES6引入了箭头函数、模板字符串等特性，ES7加入了Array.prototype.includes()方法，ES8推出了async/await语法，ES9引入了Asynchronous Iteration，ES10增加了Array.flat()和Array.flatMap()方法，ES11则新增了可选链操作符和空值合并操作符。掌握这些语法能够提升前端开发效率和代码质量。...","permalink":"/post/前端--一文轻松搞懂ES6-ES11(ES6详解)","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true},"next_post":{"title":"JavaScript高级开发必备：Bom和Dom全解析","uid":"e5530224ca8e131eb4d30d06bd108a65","slug":"前端--JavaScript Bom和Dom","date":"2022-12-23T13:17:23.000Z","updated":"2025-07-14T15:12:20.463Z","comments":true,"path":"api/articles/前端--JavaScript Bom和Dom.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/de6c1a55cf774f9fa1e2cff7c25e5fc9.png","text":"JavaScript BOM（浏览器对象模型）和DOM（文档对象模型）是前端开发中的两个重要概念。BOM是用于操作浏览器窗口、浏览器历史记录和浏览器位置等的API，而DOM则是用于操作HTML和XML文档中的元素和属性的API。通过使用BOM和DOM，开发人员可以创建交互性更强的网页，实现动态效果和用户交互功能。...","permalink":"/post/前端--JavaScript Bom和Dom","photos":[],"count_time":{"symbolsCount":"70k","symbolsTime":"1:03"},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}