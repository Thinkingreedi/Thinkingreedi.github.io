{"title":"基于hexo框架快速从0到1搭建个人博客--文章写作","uid":"287062fb47b340e917d6f903629b5049","slug":"基于hexo框架快速从0到1搭建个人博客----文章写作","date":"2022-08-17T00:00:19.000Z","updated":"2025-07-14T15:12:20.468Z","comments":true,"path":"api/articles/基于hexo框架快速从0到1搭建个人博客----文章写作.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/d3b3c1e3e3494db9b5870742534e0919.png","content":"<h1 id=\"一、Github图床-图片存储\"><a href=\"#一、Github图床-图片存储\" class=\"headerlink\" title=\"一、Github图床(图片存储)\"></a>一、Github图床(图片存储)</h1><ul>\n<li>图床（Picture host）– 即提供外链访问的图片存储服务器</li>\n<li>把图片上传到一个图床提供者的图片服务器上，它会生成一个存储链接，就可以随时通过这个链接就下载这个图片，而且还可以把这个链接放到 html 里或者 Markdown 文件里，浏览时再由浏览器或者阅读器自动加载出来。咋样的话每次文章换地方不需要重新上传图片，这些网站都能根据图床链接将图片加载出来</li>\n<li>图床服务：<ul>\n<li>国内的有微博图床、聚合图床、七牛云、阿里云、腾讯云等</li>\n<li>国外的有 imgur、imgbox、SM图床等</li>\n</ul>\n</li>\n<li>这里利用 GitHub 的存储能力和对外开放访问的特点，将 GitHub 仓库作为图床</li>\n<li>创建步骤：</li>\n</ul>\n<ol>\n<li><p>先在 GitHub 新建一个仓库用于存储图片，打开自己 GitHub <a href=\"https://github.com/\">主页</a>，点击New新建仓库</p>\n</li>\n<li><p><code>Repository name</code>填写仓库名字，<code>Description</code>填写仓库描述，勾选<code>Add a README file</code>，点击<code>Create repository</code>创建仓库:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/935085465e9a41fda1082dcf88d4f7d5.png\"></p>\n</li>\n<li><p>获取repo tokens:这个 token 主要用于让 PicGo 有权限往我们的仓库 push 代码(图片)。点击自己的头像，选择Settings:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/88ed338ce08441ab89a72d0ea33fe045.png\"></p>\n<p>选择Developer settings:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/cb6f8f5e08694001be2a97bd8ece4946.png\"></p>\n<p>点击 Personal access tokens，然后点击Generate new token(可能需要确认密码)：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/1ab20bb6eada475db02070f5ffad0828.png\"></p>\n<p><code>Note</code>填写 token 用途，用于备忘，下面只需要勾选<code>repo</code>，只给更新仓库的权限，最后点击最下面的Generate token创建成功：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/40a8c7bf44e648bda8cf2e2adeb8afe7.png\"></p>\n<p><strong>复制字符串下一步使用：此字符串只会出现一次，一定要复制保存好！！！</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2e62f4c938584e7faa588c4fca3c7fe6.png\"></p>\n</li>\n</ol>\n<h1 id=\"二、PicGo-图片上传\"><a href=\"#二、PicGo-图片上传\" class=\"headerlink\" title=\"二、PicGo(图片上传)\"></a>二、PicGo(图片上传)</h1><ul>\n<li><p>PicGo 是一位中国开发者基于 <code>electron-vue </code>开发的用于快速上传图片并获取图片 URL 链接的开源工具</p>\n</li>\n<li><p>Github地址：<a href=\"https://github.com/Molunerfinn/PicGo\">PicGo</a></p>\n</li>\n<li><p>只要配置好图床类型，就可以直接拖拽图片进行上传并自动返回图片链接，配合 Typora 还可以实现在文章中插入图片时自动上传并替换为链接内容，完全不用感知上传图片的过程</p>\n</li>\n<li><p>PicGo 支持七牛云、腾讯云、又拍云、阿里云、SM、Imgur、GitHub这些图床，而且还支持自己扩展第三方图床的支持插件。更多介绍请见官方文档，下载地址：<a href=\"https://molunerfinn.com/PicGo/\">PicGo (molunerfinn.com)</a></p>\n</li>\n<li><p>下载好之后直接按照提示安装即可：</p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/402c95f434b745c3bf3520a660fce5e8.png\"></p>\n<ul>\n<li>PicGo配置：打开PicGo  ,选择图床设置，选择GitHub图床，填写参数：<ul>\n<li>设定仓库名，填写格式为用户名&#x2F;仓库名</li>\n<li>设定分支名，填写默认分支main</li>\n<li>设定Token，填写上一步获取的 token 值</li>\n<li>指定存储路径，选填，可以自定义名称，比如用年月来分类，不填图片会上传在仓库根目录</li>\n<li>设定自定义域名，用于修改返回的 url 前缀，不填则返回原始 url，后面配置CDN加速需要更改此项</li>\n<li>选择设为默认图床，点击确定保存配置</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/a212205d6943409cbc1e95e55e73ca85.png\"></p>\n<h1 id=\"三、jsDelivr-CDN加速\"><a href=\"#三、jsDelivr-CDN加速\" class=\"headerlink\" title=\"三、jsDelivr(CDN加速)\"></a>三、jsDelivr(CDN加速)</h1><ul>\n<li>GitHub 存储的图片地址是 <a href=\"https://raw.githubusercontent.com/\">https://raw.githubusercontent.com</a> 开头的网址，这个域名在某些地方可能打不开或者很慢导致图片加载失败，所以我们需要对图片配置 CDN 加速</li>\n<li>CDN的全称是(Content Delivery Network)，即内容分发网络。其目的是通过在现有的Internet中增加一层新的CACHE(缓存)层，将网站的内容发布到最接近用户的网络”边缘“的节点，使用户可以就近取得所需的内容，提高用户访问网站的响应速度</li>\n<li>jsDelivr CDN，不仅开源免费而且在中国大陆建有许多服务站点，官网还声称是中国大陆唯一拥有许可证的公有 CDN，所以速度、稳定性都可以放心</li>\n<li>打开<a href=\"https://www.jsdelivr.com/\">jsDelivr CDN 官网</a>，可以看到 jsDelivr 支持 npm、GitHub、WordPress三个站点的加速，用于我们的GitHub图床是再适合不过了</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/0f6e77b46bf345c6abf2d4e9d409a26e.png\"></p>\n<ul>\n<li>在浏览器输入<code>https://cdn.jsdelivr.net/gh/用户名/仓库名/</code>，(注意最后的<code>/</code>不要丢)，可以打开我们在 GitHub 上创建的仓库的文件列表，说明我们在 Github 上创建的仓库已经默认被 jsDelivr 缓存</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/28d439312ff046d9b9bba74ffe6ac402.png\"></p>\n<ul>\n<li>PicGo 中需要改一下自定义域名，之后上传图片自动生成的链接就是 jsDelivr 的链接了。具体就是在<code>设定自定义域名</code>填写<code>https://cdn.jsdelivr.net/gh/用户名/仓库名@master</code>。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/d60f18726c4744b098e4f8bdc052c58d.png\"></p>\n<h1 id=\"四、Typora-写文传图\"><a href=\"#四、Typora-写文传图\" class=\"headerlink\" title=\"四、Typora(写文传图)\"></a>四、Typora(写文传图)</h1><ul>\n<li>Typora 是一款支持实时预览的 Markdown 文本编辑器，现在支持有 OS X、Windows、Linux 三个平台的版本。Typora 创新的提出实时预览这种方式，源码和显示效果合一显示，所见即所得，非常的方便。建议都学习一下Markdown语法，简单且好用</li>\n<li><a href=\"https://typoraio.cn/\">Typora 官方中文站 (typoraio.cn)</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/ac7c49e8d1c24d1cabb14852796bb825.png\"></p>\n<ul>\n<li>在Typora里点击<code>文件</code>，<code>偏好设置</code>，<code>图像</code>，选择插入图片时<code>上传图片</code>，勾选图中三个选项，上传服务设定选择<code>PicGo (app)</code>，PicGo 路径通过后面的文件夹选择自己电脑上 PicGo 的安装路径</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/c161190a0f284913b61af926d4d08b12.png\"></p>\n<ul>\n<li>此时，使用 Typora 编辑文件，拖入或者粘贴图片时，会自动调用 PicGo 将图片上传到 GitHub 图床，并把返回的图片链接粘贴到文章中</li>\n</ul>\n<h1 id=\"五、总结\"><a href=\"#五、总结\" class=\"headerlink\" title=\"五、总结\"></a>五、总结</h1><ul>\n<li>博客文章通过Typora + PicGo + GitHub图床 + jsDelivr CDN加速的组合，看起来较为完善，美中不足的是虽然CDN加速解决了查看图片的速度，但是上传还是有点慢的，会出现在 Typora 中粘贴了一张图片后需要5秒以上才能上传成功并加载出来，还有就是本地没有分类备份等问题，以及可能出现本地图片不显示等等问题(jsDelivr CDN 原来也挂过)。但是这是我目前所能想到的一种较好(免费)的方案，如果有其他更好的方案欢迎讨论交流~</li>\n</ul>\n","feature":true,"text":"前面已经介绍了框架和搭建的一些步骤，本文介绍了Typora + PicGo + GitHub图床 + jsDelivr CDN加速的组合优化博客文章写作。...","permalink":"/post/基于hexo框架快速从0到1搭建个人博客----文章写作","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"博客","slug":"博客","count":6,"path":"api/categories/博客.json"}],"tags":[{"name":"hexo","slug":"hexo","count":5,"path":"api/tags/hexo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81Github%E5%9B%BE%E5%BA%8A-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">一、Github图床(图片存储)</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81PicGo-%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0\"><span class=\"toc-text\">二、PicGo(图片上传)</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81jsDelivr-CDN%E5%8A%A0%E9%80%9F\"><span class=\"toc-text\">三、jsDelivr(CDN加速)</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81Typora-%E5%86%99%E6%96%87%E4%BC%A0%E5%9B%BE\"><span class=\"toc-text\">四、Typora(写文传图)</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">五、总结</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"CSDN文章打包下载","uid":"2ea3dc135dc18ec110d6dc602b36997a","slug":"基于hexo框架快速从0到1搭建个人博客----CSDN文章打包下载","date":"2022-08-18T23:45:01.000Z","updated":"2025-07-14T15:12:20.467Z","comments":true,"path":"api/articles/基于hexo框架快速从0到1搭建个人博客----CSDN文章打包下载.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/direct/e8a0f072cdd64daf8e4ad0b5f663271b.png","text":"CSDN 没有提供文章批量导出功能，只有导入功能，所以我们可以用下述方式下载 CSDN 上的文章并保存成 Markdown 格式。...","permalink":"/post/基于hexo框架快速从0到1搭建个人博客----CSDN文章打包下载","photos":[],"count_time":{"symbolsCount":424,"symbolsTime":"1 mins."},"categories":[{"name":"博客","slug":"博客","count":6,"path":"api/categories/博客.json"}],"tags":[{"name":"CSDN","slug":"CSDN","count":1,"path":"api/tags/CSDN.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false},"next_post":{"title":"基于hexo框架快速从0到1搭建个人博客--部署","uid":"a11af56428ea215f0c979eabeef2dc52","slug":"基于hexo框架快速从0到1搭建个人博客----部署","date":"2022-08-14T23:40:56.000Z","updated":"2025-07-14T15:12:20.468Z","comments":true,"path":"api/articles/基于hexo框架快速从0到1搭建个人博客----部署.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/d3b3c1e3e3494db9b5870742534e0919.png","text":"博客的功能只要能阅读文章就够了，因此可以考虑将其部署在提供静态网页托管服务的网站上，这样就省去了购买服务器(云主机)，购买域名这些步骤，不仅省钱省事。当前许多平台都提供了静态网页托管服务，其中最方便的当然是 GitHub Pages，只需要注册一个账号就可以使用。...","permalink":"/post/基于hexo框架快速从0到1搭建个人博客----部署","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"博客","slug":"博客","count":6,"path":"api/categories/博客.json"}],"tags":[{"name":"hexo","slug":"hexo","count":5,"path":"api/tags/hexo.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}