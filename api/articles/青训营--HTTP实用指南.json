{"title":"Http实用指南","uid":"79d011c4f922321d4bb1c1cdb5390980","slug":"青训营--HTTP实用指南","date":"2022-01-24T02:38:04.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--HTTP实用指南.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","content":"<hr>\n<h2 id=\"1、初识\"><a href=\"#1、初识\" class=\"headerlink\" title=\"1、初识\"></a>1、初识</h2><p>当我们在输入框输入信息后发生的事情：<br><img src=\"https://img-blog.csdnimg.cn/752c9a1a842047b9ae764b5a7fb81b70.png#pic_center\"></p>\n<p>OSI是一个开放性的通信系统互连参考模型，它是一个定义得非常好的协议规范。OSI模型有7层结构，每层都可以有几个子层。 OSI的7层从上到下分别是 7 应用层 6 表示层 5 会话层 4 传输层 3 网络层 2 数据链路层 1 物理层 ；其中高层（即7、6、5、4层）定义了应用程序的功能，下面3层（即3、2、1层）主要面向通过网络的端到端，点到点的数据流。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/f0d4c215c74a400192969e6c02344069.png#pic_center\"></p>\n<p><strong>什么是HTTP：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/4a7273c960d24f47a67fbaf88141d96a.png#pic_center\"></p>\n<hr>\n<h2 id=\"2、协议分析\"><a href=\"#2、协议分析\" class=\"headerlink\" title=\"2、协议分析\"></a>2、协议分析</h2><p><strong>发展历程：</strong><br><img src=\"https://img-blog.csdnimg.cn/60ea93f931134d3999fbba64d9b93ca7.png#pic_center\"></p>\n<h3 id=\"HTTP-1-1\"><a href=\"#HTTP-1-1\" class=\"headerlink\" title=\"HTTP&#x2F;1.1\"></a>HTTP&#x2F;1.1</h3><p><img src=\"https://img-blog.csdnimg.cn/235626c4c25043f09b37dab8696c3ad8.png#pic_center\"><br><strong>Method:</strong><br><img src=\"https://img-blog.csdnimg.cn/8daa1ec737b74fedb907534fe824d076.png#pic_center\"></p>\n<ul>\n<li>Safe(安全的）:<br>不会修改服务器的数据的方法<br>GET  HEAD  OPTIONS</li>\n<li>ldempotent(幂等)︰<br>同样的请求被执行一次与连续执行多次的效果是一样的，服务器的状态也是一样的<br>所有safe的方法都是ldempotent 的<br>GET HEAD OPTIONS PUT DELETE</li>\n</ul>\n<p><strong>状态码：</strong><br><img src=\"https://img-blog.csdnimg.cn/40cf470b79f24b43a0b9d7337787e754.png#pic_center\"><br><strong>RESTful API：</strong><br><img src=\"https://img-blog.csdnimg.cn/9f49e951e32e4624b6e61559a0be292f.png#pic_center\"><br><strong>常用请求头：</strong><br><img src=\"https://img-blog.csdnimg.cn/10b5ab3f64b348fda69849a0b0f3f088.png#pic_center\"><br><strong>常用响应头：</strong><br><img src=\"https://img-blog.csdnimg.cn/c9caf07598e149dd819ece6ffd668022.png#pic_center\"><br><strong>缓存：</strong><br><img src=\"https://img-blog.csdnimg.cn/71fc00c647e444f1a7fd7cca7e36c686.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/f4a52fd1e3af4a3bab9a3828c91ccb6d.png#pic_center\"><br>浏览器发起get请求，判断是否有缓存，首先看强缓存是否新鲜，如果可用就直接读取浏览器缓存，如果不可用，就看上一次响应resource中的ETag标签，没有就去上一次请求中的Last-Modified，如果Etag存在，就发起请求，请求头中带上if-None-Match, Last-Modified存在就发起请求，请求头中带上if-Modified-Since,server会进化成验证，如果是新的返回304，浏览器使用浏览器缓存，如果不是新的返回200，并返回最新信息。<br><strong>cookie：</strong><br><img src=\"https://img-blog.csdnimg.cn/69bdb153c57b44dbb1feba769aadd4f8.png#pic_center\"></p>\n<h3 id=\"HTTP-2\"><a href=\"#HTTP-2\" class=\"headerlink\" title=\"HTTP&#x2F;2\"></a>HTTP&#x2F;2</h3><p>更快、更稳定、更简单</p>\n<ul>\n<li>帧（frame）：HTTP&#x2F;2通信的最小单位，每个帧都包含帧头，至少也会标识当前帧所属的数据流，采用二进制编码。</li>\n<li>消息：与逻辑请求或响应消息对应的完整的一系列帧。</li>\n<li>数据流：已建立的连接内的双向字节流，可以承载一条或多条消息。</li>\n</ul>\n<p> 特性：</p>\n<ul>\n<li>HTTP&#x2F;2连接都是永久的，而且仅需要每个来源一个连接</li>\n<li>流控制：阻止发送方向接收方发送大量数据的机制 </li>\n<li>服务器推送<br><img src=\"https://img-blog.csdnimg.cn/afd93f6def6c4f84be34e78df2856c63.png#pic_center\"></li>\n</ul>\n<h3 id=\"HTTPS\"><a href=\"#HTTPS\" class=\"headerlink\" title=\"HTTPS\"></a>HTTPS</h3><p>经过TSL&#x2F;SSL加密</p>\n<ul>\n<li>对称加密︰加密和解密都是使用同一个密钥</li>\n<li>非对称加密，加密和解密需要使用两个不同的密钥︰公钥(public key)和私钥(private key)</li>\n</ul>\n<hr>\n<h2 id=\"3、常见场景\"><a href=\"#3、常见场景\" class=\"headerlink\" title=\"3、常见场景\"></a>3、常见场景</h2><p><strong>静态资源：</strong><br><img src=\"https://img-blog.csdnimg.cn/be95663f82bb45a982892e5a6bb066e4.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/7e470f59d5ed4af28e9ae4baff339b8c.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/9faea1a7a4584d29ac966d2ee003d9ee.png#pic_center\"><br><strong>登录：</strong><br><img src=\"https://img-blog.csdnimg.cn/6ac468b268294360a8cd105ddaafc09c.png#pic_center\"><br>跨域问题导致OPTIONS请求。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/5bbd1abc4a9244fc89a66759f0fb4160.png#pic_center\"><br>约定俗成：https默认就是用的443这个端口号，所以可省略。（http默认端口号为80）</p>\n<p><strong>跨域解决方案：</strong></p>\n<ul>\n<li>CORS：</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/41cfb3a48c8c4d33a54e9004f4fb7a06.png#pic_center\"></p>\n<ul>\n<li>代理服务器：</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/bf6ab1ff229b45daa971920f949f7258.png#pic_center\"></p>\n<ul>\n<li>iframe</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/8424975bb84a4b19b0add692b7237436.png#pic_center\"></p>\n<ol>\n<li>向什么地址做了什么动作?<br>使用POST方法；目标域名https : &#x2F;&#x2F;sso.toutiao.com；目标path &#x2F;quick_login&#x2F;v2&#x2F;</li>\n<li>携带了哪些信息，返回了哪些信息<br>携带信息：Post body,数据格式为form；希望获取的数据格式为json；已有的cookie<br>返回信息：数据格式json；种cookie的信息</li>\n</ol>\n<p>下一次进入页面为什么能记住登录态呢？–  登录鉴权<br><img src=\"https://img-blog.csdnimg.cn/928dae3d4fe54671b66afc7439c540dd.png#pic_center\"></p>\n<p>SSO单点登录就是在多个系统中，用户只需一次登录，各个系统即可感知该用户已经登录。</p>\n<hr>\n<h2 id=\"4、实际应用\"><a href=\"#4、实际应用\" class=\"headerlink\" title=\"4、实际应用\"></a>4、实际应用</h2><p><strong>浏览器：</strong><img src=\"https://img-blog.csdnimg.cn/d3092c2d825b417b918b67e77e64ea4c.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/bbbb8024ad8c4b7db6d6f0da0f3fed35.png#pic_center\"><br><strong>node：</strong><br>HTTP&#x2F;HTTPS</p>\n<ul>\n<li>默认模块，无需安装其他依赖</li>\n<li>功能有限&#x2F;不是十分友好</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/c138e481ff4341ff92f8e0af0fc2c2b1.png#pic_center\"><br><strong>实战：</strong><br>常用的请求库：axios</p>\n<ul>\n<li>支持浏览器、node.js环境</li>\n<li>丰富的拦截器</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/100febc9bb264aef979269efce3bd8eb.png#pic_center\"><br>我们在生产环境中，还要关心用户的体验，我们希望用户有更优秀的体验效果，一方面是大家知道的性能优化，还有一点是在网络上做一些优化，比如用HTTP2，它的传输效率而是更高的，使用CDN，传输获取的数据是更快的等等。</p>\n<p><strong>网络优化：</strong><br><img src=\"https://img-blog.csdnimg.cn/cce2c594ef7d47728d8dbd0ca0865fb8.png#pic_center\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/29d493d1444445fc82a0ed9c25d97662.png#pic_center\"><br><strong>稳定性：</strong><br><img src=\"https://img-blog.csdnimg.cn/0f2d2d02e09e48dd9062586138b363e0.png#pic_center\"></p>\n<hr>\n<h2 id=\"5、了解更多\"><a href=\"#5、了解更多\" class=\"headerlink\" title=\"5、了解更多\"></a>5、了解更多</h2><p>WebSocket：</p>\n<ul>\n<li>浏览器与服务器进行全双工通讯的网络技术</li>\n<li>典型场景：实时性高，例如聊天室</li>\n<li>URL使用ws:&#x2F;&#x2F;或wss:&#x2F;&#x2F;等开头</li>\n</ul>\n<p>QUIC：</p>\n<ul>\n<li>0-RTT建联（(首次建联除外)。</li>\n<li>类似TCP的可靠传输。</li>\n<li>类似TLS的加密传输，支持完美前向安全。</li>\n<li>用户空间的拥塞控制,最新的BBR算法。</li>\n<li>支持h2的基于流的多路复用,但没有TCP的HOL问题。</li>\n<li>前向纠错FEC。</li>\n<li>类似MPTCP的Connection migration。</li>\n</ul>\n<hr>\n","feature":false,"text":"HTTP实用指南是帮助开发人员理解和应用HTTP协议的重要资源。本文将介绍HTTP的基本概念，包括请求和响应的结构、状态码、请求方法等。...","permalink":"/post/青训营--HTTP实用指南","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%88%9D%E8%AF%86\"><span class=\"toc-text\">1、初识</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90\"><span class=\"toc-text\">2、协议分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HTTP-1-1\"><span class=\"toc-text\">HTTP&#x2F;1.1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HTTP-2\"><span class=\"toc-text\">HTTP&#x2F;2</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HTTPS\"><span class=\"toc-text\">HTTPS</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%B8%B8%E8%A7%81%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">3、常见场景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">4、实际应用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%E3%80%81%E4%BA%86%E8%A7%A3%E6%9B%B4%E5%A4%9A\"><span class=\"toc-text\">5、了解更多</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Node.js与前端开发实战","uid":"0182665cc415e72321b4209011c914e6","slug":"青训营--Node.js与前端开发实战","date":"2022-01-25T03:09:55.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--Node.js与前端开发实战.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","text":"在本文中，我们将探讨如何将Node.js与前端开发实战相结合。我们还会深入研究前端开发中常用的构建工具、自动化流程和部署技巧，以及如何通过Node.js优化前端开发工作流程。...","permalink":"/post/青训营--Node.js与前端开发实战","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false},"next_post":{"title":"前端动画实现","uid":"96f2401ef260a2fda3074e7c72b8a623","slug":"青训营--前端动画实现","date":"2022-01-21T08:11:16.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--前端动画实现.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","text":"在前端开发中，动画效果能够增强用户体验并提升页面吸引力。本文将介绍前端动画实现的多种方式，包括CSS动画、JavaScript动画库以及最新的Web动画API。通过学习本文，读者将掌握多种前端动画实现技术，从而丰富其网页设计与开发的技能。...","permalink":"/post/青训营--前端动画实现","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false}}