{"title":"基于hexo框架快速从0到1搭建个人博客 -- 文章发布","uid":"cafb2f7f7dd2184f94595ef0ba9d8b6c","slug":"基于hexo框架快速从0到1搭建个人博客----文章一键发布","date":"2022-08-20T02:51:44.000Z","updated":"2025-07-14T15:12:20.467Z","comments":true,"path":"api/articles/基于hexo框架快速从0到1搭建个人博客----文章一键发布.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/d3b3c1e3e3494db9b5870742534e0919.png","content":"<ul>\n<li><strong>前言：在前面的文章中，已经实现了文章的撰写和图片的处理，接踵而至的就是文章的发表，在这里还需要向之前一样复杂吗，所以在这里尝试去实现文章的一键发表</strong>。</li>\n</ul>\n<h1 id=\"一、文章对比\"><a href=\"#一、文章对比\" class=\"headerlink\" title=\"一、文章对比\"></a>一、文章对比</h1><ul>\n<li>平时在本地写文章保存在<code>D:\\Markdown</code>目录，而 Hexo 保存在<code>D:\\hexoblog</code>目录。发布 Hexo 之前需要先把文章拷贝到<code>D:\\hexoblog\\source\\_posts</code>目录，有时候文章有修改还要重新拷贝覆盖。通过搜寻资料，查看文章，决定用Python脚本实现拷贝文件，判断文件最后修改时间决定是否需要覆盖旧文章。</li>\n<li>因为我们省略了hexo create “title”这一步，直接把文件拷贝到了_posts目录，所以写文章时需要确保在开头加上 title、date、tags、category信息，不然发布的文章会没有没有标题、发布时间、标签、分类信息，其实hexo create命令做的就是这件事。注意最后的空行一定要有。</li>\n</ul>\n<pre><code class=\"markdown\">---\ntitle: 基于hexo框架快速从0到1搭建个人博客 -- 文章发布\ndate: 2022-8-13 21:26:01\ntags: hexo\ncategories : 博客\n---\n</code></pre>\n<ul>\n<li>Python 代码(电脑要配置好python环境)：</li>\n</ul>\n<pre><code class=\"python\"># copy_to_hexo.py\nimport os\nimport shutil\nimport time\n\n\ndef copy_to_hexo():\n    local_list = os.listdir(LOCAL_ARTICLE_PATH)\n    hexo_list = os.listdir(HEXO_ARTICLE_PATH)\n    flag = True\n    for file in local_list:\n        if file in IGNORE_LIST:\n            continue\n        if file.endswith(&#39;.md&#39;):\n            local_version = os.path.join(LOCAL_ARTICLE_PATH, file)\n            hexo_version = os.path.join(HEXO_ARTICLE_PATH, file)\n            if file not in hexo_list:\n                flag = False\n                print(&quot;新增文章: %s...&quot; % file,\n                      &quot;最后修改时间：%s&quot; % TimeStampFormat(os.path.getmtime(local_version)))\n                shutil.copy(local_version, hexo_version)\n            elif os.path.getmtime(local_version) &gt; os.path.getmtime(hexo_version):\n                flag = False\n                print(&quot;更新文章: %s...&quot; % file,\n                      &quot;上次修改时间：%s&quot; % TimeStampFormat(os.path.getmtime(hexo_version)),\n                      &quot;最后修改时间：%s&quot; % TimeStampFormat(os.path.getmtime(local_version)))\n                shutil.copy(local_version, hexo_version)\n    print(&#39;文章无变化&#39; if flag else &#39;更新完毕&#39;)\n\n\n# 时间格式标准化\ndef TimeStampFormat(timestamp):\n    return time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;, time.localtime(timestamp))\n\n\nIGNORE_LIST = [&#39;欢迎使用Markdown编辑器.md&#39;]\nHEXO_ARTICLE_PATH = &#39;D:\\hexoblog\\source\\_posts&#39;\nLOCAL_ARTICLE_PATH = &#39;D:/Markdown&#39;\n\ncopy_to_hexo()\n</code></pre>\n<ul>\n<li>运行效果</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/a8a58af2efdc4cf489e81cfbf02f85d0.png\"></p>\n<h1 id=\"二、发布到Github\"><a href=\"#二、发布到Github\" class=\"headerlink\" title=\"二、发布到Github\"></a>二、发布到Github</h1><ul>\n<li>之前已经修改好了hexo的配置：</li>\n</ul>\n<pre><code class=\"yml\">deploy:\n  type: git\n  repo:\n      github: git@github.com:用户名/用户名.github.io.git,main\n</code></pre>\n<ul>\n<li>shell发布脚本：Git Bash支持直接运行 shell 脚本，只需要把下面代码保存为 <code>.sh</code>后缀的文件即可：</li>\n</ul>\n<pre><code class=\"sh\"># deploy_hexo.sh\ncd /d/hexoblog\npwd\n# 白底黑字效果\necho -e &quot;\\033[47;30m&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;hexo g&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\\033[0m&quot;\nhexo g\necho -e &quot;\\033[47;30m&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;hexo d&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\\033[0m&quot;\nhexo d\nsleep 5\n# 执行完毕不退出\n# exec /bin/bash\n</code></pre>\n<ul>\n<li>运行效果：</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/8b35acc7bdc74a2a9988eb7e3c8fafba.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/9a8552800eba4c279c71bd2babd168fc.png\"></p>\n<h1 id=\"三、一键发布\"><a href=\"#三、一键发布\" class=\"headerlink\" title=\"三、一键发布\"></a>三、一键发布</h1><ul>\n<li>上面写的两个脚本一步一步实现了文章的自动发布，对于 Windows 系统来说，可以使用 bat 脚本把它们整合在一起，完成“一键”发布的需求。</li>\n</ul>\n<pre><code class=\"bat\">:: post_my_blog.bat\npython copy_to_hexo.py\n&quot;C:\\Program Files\\Git\\git-bash.exe&quot; deploy_hexo.sh\npause\n</code></pre>\n<ul>\n<li>写好文章后，直接双击<code>post_my_blog.bat</code>就可以发布到三个地方了。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/fbc089a95e7145a4985662b5d25f462d.png\"></p>\n<h1 id=\"四、总结\"><a href=\"#四、总结\" class=\"headerlink\" title=\"四、总结\"></a>四、总结</h1><ul>\n<li>本文主要实现了文章的发布，参考了许多资料和部分代码，并将其整合在一个文件中，实现真正的一键发布，减少博客文章管理压力，使更加专注于文章的撰写！</li>\n</ul>\n","feature":true,"text":"在前面的文章中，已经实现了文章的撰写和图片的处理，接踵而至的就是文章的发表，在这里还需要向之前一样复杂吗，所以在这里尝试去实现文章的一键发布。...","permalink":"/post/基于hexo框架快速从0到1搭建个人博客----文章一键发布","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"博客","slug":"博客","count":6,"path":"api/categories/博客.json"}],"tags":[{"name":"hexo","slug":"hexo","count":5,"path":"api/tags/hexo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%96%87%E7%AB%A0%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">一、文章对比</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%8F%91%E5%B8%83%E5%88%B0Github\"><span class=\"toc-text\">二、发布到Github</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E4%B8%80%E9%94%AE%E5%8F%91%E5%B8%83\"><span class=\"toc-text\">三、一键发布</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">四、总结</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"正则表达式(基础语法+应用案例)","uid":"cac67ac11c6c333971e5ff6f7b0aa46a","slug":"前端--正则表达式(基础语法+应用案例)","date":"2022-08-26T00:39:52.000Z","updated":"2025-07-14T15:12:20.466Z","comments":true,"path":"api/articles/前端--正则表达式(基础语法+应用案例).json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/810429d76f664c5ea6d91f9d9b85786f.jpeg","text":"本文对正则表达式进行了讲解，设计正则表达式的简介，语法，API，应用等。重点阐述了JavaScript中的正则表达式对象及其方法，在文章最后列举了常见的正则表达式语句，希望能给大家带来帮助！...","permalink":"/post/前端--正则表达式(基础语法+应用案例)","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"正则表达式","slug":"正则表达式","count":1,"path":"api/tags/正则表达式.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true},"next_post":{"title":"CSDN文章打包下载","uid":"2ea3dc135dc18ec110d6dc602b36997a","slug":"基于hexo框架快速从0到1搭建个人博客----CSDN文章打包下载","date":"2022-08-18T23:45:01.000Z","updated":"2025-07-14T15:12:20.467Z","comments":true,"path":"api/articles/基于hexo框架快速从0到1搭建个人博客----CSDN文章打包下载.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/direct/e8a0f072cdd64daf8e4ad0b5f663271b.png","text":"CSDN 没有提供文章批量导出功能，只有导入功能，所以我们可以用下述方式下载 CSDN 上的文章并保存成 Markdown 格式。...","permalink":"/post/基于hexo框架快速从0到1搭建个人博客----CSDN文章打包下载","photos":[],"count_time":{"symbolsCount":424,"symbolsTime":"1 mins."},"categories":[{"name":"博客","slug":"博客","count":6,"path":"api/categories/博客.json"}],"tags":[{"name":"CSDN","slug":"CSDN","count":1,"path":"api/tags/CSDN.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false}}