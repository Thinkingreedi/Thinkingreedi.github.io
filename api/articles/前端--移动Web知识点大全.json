{"title":"前端开发实战：移动端适配CSS技巧","uid":"60a8efd9365e4c7b34bf5d8b1e7583c7","slug":"前端--移动Web知识点大全","date":"2022-12-12T00:17:21.000Z","updated":"2025-07-14T15:12:20.466Z","comments":true,"path":"api/articles/前端--移动Web知识点大全.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/de6c1a55cf774f9fa1e2cff7c25e5fc9.png","content":"<h1 id=\"移动Web\"><a href=\"#移动Web\" class=\"headerlink\" title=\"移动Web\"></a>移动Web</h1><h2 id=\"1、字体图标\"><a href=\"#1、字体图标\" class=\"headerlink\" title=\"1、字体图标\"></a>1、字体图标</h2><ul>\n<li>目标：使用字体图标实现网页中简洁的图标效果</li>\n<li>字体图标<ul>\n<li>字体图标展示的是图标，本质是字体</li>\n<li>处理简单的、颜色单一的图片</li>\n</ul>\n</li>\n<li>字体图标的优点︰<ul>\n<li><strong>灵活性∶灵活地修改样式，例如∶尺寸、颜色等</strong></li>\n<li><strong>轻量级∶体积小、渲染快、降低服务器请求次数</strong></li>\n<li><strong>兼容性:几乎兼容所有主流浏览器</strong></li>\n<li>使用方便︰<ol>\n<li>下载字体包</li>\n<li>使用字体图标</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>图标库：<a href=\"https://www.iconfont.cn/\">iconfont-阿里巴巴矢量图标库</a></li>\n<li>下载字体包：登录–选择图标库–选择图标–加入购物车–购物车–添加至项目–下载至本地</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/e91c0c1b3a324404b2f91f55e81d8d14.png#pic_center\"></p>\n<ul>\n<li>使用字体图标：</li>\n</ul>\n<ol>\n<li>Unicode编码：</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/6c929333e73c468e81d92b6559e6f8dc.png#pic_center\"></p>\n<ul>\n<li>引入样式表</li>\n<li>复制粘贴图标对应的Unicode代码</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/072fbf7bf82c4a47bea2b98b0e2b8258.png#pic_center\"></p>\n<ul>\n<li>设置文字字体</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/be955e60bdfc4d4d8fbf4b3e4673ed47.png#pic_center\"></p>\n<ol start=\"2\">\n<li>类名：</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/4ab2f5f743e24e35aa06c0ee9c26e4de.png#pic_center\"></p>\n<ul>\n<li>引入字体图标样式表</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/f5445dba8a684d0987a60137d6baf174.png\"></p>\n<ul>\n<li><p>调用图标对应的类名，必须调用2个类名</p>\n<ul>\n<li><p>iconfont类：基本样式，包含字体的使用</p>\n</li>\n<li><p>icon-xxx：图标对应的类名</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/3433c427e8d1417f9671a6fd12b944fb.png\"></p>\n<ul>\n<li>如果图标库没有项目所需的图标，在IconFont网站上传矢量图生成字体图标<ul>\n<li>与设计沟通，得到SVG矢量图</li>\n<li>IconFont网站上传图标，下载使用</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/b9d43a83f88f4e56b9f4d406bad1cd59.png#pic_center\"></p>\n<h2 id=\"2、平面转换\"><a href=\"#2、平面转换\" class=\"headerlink\" title=\"2、平面转换\"></a>2、平面转换</h2><ul>\n<li>平面转换<ul>\n<li>改变盒子在平面内的形态（位移、旋转、缩放)</li>\n<li>2D转换</li>\n</ul>\n</li>\n<li>平面转换属性：transform</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/c15396c022504466b28e4f8cf8a3a11e.png#pic_center\"></p>\n<ul>\n<li>语法：transform: translate(水平移动距离,垂直移动距离);</li>\n<li>取值(正负均可)<ul>\n<li>像素单位数值</li>\n<li>百分比(参照物为盒子自身尺寸)</li>\n<li><strong>注意:X轴正向为右，Y轴正向为下</strong></li>\n</ul>\n</li>\n<li>技巧<ul>\n<li>translate()如果只给出一个值,表示x轴方向移动距离</li>\n<li>单独设置某个方向的移动距离: translatex() &amp; translateY()</li>\n</ul>\n</li>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        .father &#123;\n            width: 500px;\n            height: 300px;\n            margin: 100px auto;\n            border: 1px solid #000;\n        &#125;\n        \n        .son &#123;\n            width: 200px;\n            height: 100px;\n            background-color: pink;\n            transition: all 0.5s;\n        &#125;\n    \n        /* 鼠标移入到父盒子，son改变位置 */\n        .father:hover .son &#123;\n            /* transform: translate(100px, 50px); */\n\n            /* 百分比: 盒子自身尺寸的百分比 */\n            /* transform: translate(100%, 50%); */\n\n            /* transform: translate(-100%, 50%); */\n\n            /* 只给出一个值表示x轴移动距离 */\n            /* transform: translate(100px); */\n\n            transform: translateY(100px);\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<ul>\n<li><strong>使用translate快速实现绝对定位的元素居中效果</strong><ul>\n<li>原理：位移取值为百分比数值，参照盒子自身尺寸计算移动距离</li>\n</ul>\n</li>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        .father &#123;\n            position: relative;\n            width: 500px;\n            height: 300px;\n            margin: 100px auto;\n            border: 1px solid #000;\n        &#125;\n        \n        .son &#123;\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            /* margin-left: -100px;\n            margin-top: -50px; */\n\n            transform: translate(-50%, -50%);\n\n            width: 203px;\n            height: 100px;\n            background-color: pink;          \n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<ul>\n<li><strong>使用translate实现元素位移效果</strong><ul>\n<li>left：向左侧移动自身宽度</li>\n<li>right：向右侧移动自身宽度</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/af6b243c6055422581b05ca45b9c22f9.png#pic_center\"></p>\n<ul>\n<li><p><strong>使用rotate实现元素旋转效果</strong></p>\n</li>\n<li><p>语法：transform: rotate(角度);注意∶角度单位是deg</p>\n</li>\n<li><p>技巧:取值正负均可</p>\n<ul>\n<li>取值为正,则顺时针旋转</li>\n<li>取值为负,则逆时针旋转</li>\n</ul>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        img &#123;\n            width: 250px;\n            transition: all 2s;\n        &#125;\n        \n        img:hover &#123;\n            /* 顺 */\n            transform: rotate(360deg);\n\n            /* 逆 */\n            /* transform: rotate(-360deg); */\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<ul>\n<li><p><strong>使用transform-origin属性改变转换原点</strong></p>\n</li>\n<li><p>语法</p>\n<ul>\n<li>默认圆点是盒子中心点</li>\n<li>transform-origin:原点水平位置原点垂直位置</li>\n</ul>\n</li>\n<li><p>取值</p>\n<ul>\n<li>方位名词( left、 top、right、bottom、center )</li>\n<li>像素单位数值</li>\n<li>百分比(参照盒子自身尺寸计算)</li>\n</ul>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        img &#123;\n            width: 250px;\n            border: 1px solid #000;\n            transition: all 2s;\n            transform-origin: right bottom;\n            transform-origin: left bottom;\n        &#125;\n        \n        img:hover &#123;\n            transform: rotate(360deg);\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<ul>\n<li><p><strong>使用transform复合属性实现多形态转换</strong></p>\n</li>\n<li><p>多重转换技巧：transform: translate() rotate();</p>\n</li>\n<li><p>多重转换原理</p>\n<ul>\n<li>旋转会改变网页元素的坐标轴向</li>\n<li>先写旋转，则后面的转换效果的轴向以旋转后的轴向为准，会影响转换结果</li>\n</ul>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        .box &#123;\n            width: 800px;\n            height: 200px;\n            border: 1px solid #000;\n        &#125;\n        \n        img &#123;\n            width: 200px;\n            transition: all 8s;\n        &#125;\n        \n        .box:hover img &#123;\n            /* 边走边转 */\n            transform: translate(600px) rotate(360deg);\n\n            /* 旋转可以改变坐标轴向 */\n            /* transform: rotate(360deg) translate(600px); */\n            \n            /* 层叠性 */\n            /* transform: translate(600px);\n            transform: rotate(360deg); */\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<ul>\n<li><p><strong>使用scale改变元素的尺寸</strong></p>\n</li>\n<li><p>语法：transform: scale(x轴缩放倍数,y轴缩放倍数);</p>\n</li>\n<li><p>技巧</p>\n<ul>\n<li>一般情况下,只为scale设置一个值,表示x轴和y轴等比例缩放</li>\n<li>transform: scale(缩放倍数);</li>\n<li>scale值大于1表示放大, scale值小于1表示缩小</li>\n</ul>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        .box &#123;\n            width: 300px;\n            height: 210px;\n            margin: 100px auto;\n            background-color: pink;\n            \n        &#125;\n\n        .box img &#123;\n            width: 100%;\n            transition: all 0.5s;\n        &#125;\n        \n        .box:hover img &#123;\n            /* width: 150%; */\n\n            transform: scale(1.2);\n            transform: scale(0.8);\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<h2 id=\"3、渐变\"><a href=\"#3、渐变\" class=\"headerlink\" title=\"3、渐变\"></a>3、渐变</h2><ul>\n<li>渐变是多个颜色逐渐变化的视觉效果</li>\n<li>一般用于设置盒子的背景</li>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        .box &#123;\n            width: 300px;\n            height: 200px;\n            /* background-image: linear-gradient(\n                pink,\n                green,\n                hotpink\n            ); */\n            background-image: linear-gradient(\n                transparent,\n                rgba(0,0,0, .6)\n            );\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<h2 id=\"4、空间转换\"><a href=\"#4、空间转换\" class=\"headerlink\" title=\"4、空间转换\"></a>4、空间转换</h2><p><strong>空间转换</strong></p>\n<ul>\n<li>空间︰是从坐标轴角度定义的。x、y和z三条坐标轴构成了一个立体空间，z轴位置与视线方向相同。</li>\n<li>空间转换也叫3D转换</li>\n<li>属性:transform</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/99855229e69d4807b6cabfadb4a8a534.png#pic_center\"></p>\n<p><strong>空间位移</strong></p>\n<ul>\n<li>语法<ul>\n<li>transform: translate3d(x, y, z);</li>\n<li>transform: translateX(值);</li>\n<li>transform: translateY(值);</li>\n<li>transform: translateZ(值);</li>\n</ul>\n</li>\n<li>取值（正负均可)<ul>\n<li>像素单位数值</li>\n<li>百分比</li>\n</ul>\n</li>\n</ul>\n<p><strong>透视</strong></p>\n<ul>\n<li><p>生活中，同一个物体观察距离不同，近小远大、近清楚远模糊，Z轴是视线方向，移动效果是距离的远和近</p>\n</li>\n<li><p>属性（添加给父级)</p>\n<ul>\n<li>perspective:值;</li>\n<li>取值∶像素单位数值，数值一般在800 - 1200。</li>\n<li>透视距离也称为视距，所谓的视距就是人的眼睛到屏幕的距离。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/3c25fd9774ae410ca746d8179a5efd35.png#pic_center\"></p>\n<ul>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n    body &#123;\n      perspective: 1000px;\n      /* perspective: 200px; */\n      /* perspective: 10000px; */\n    &#125;\n\n    .box &#123;\n      width: 200px;\n      height: 200px;\n      margin: 100px auto;\n      background-color: pink;\n      transition: all 0.5s;\n    &#125;\n\n    .box:hover &#123;\n      transform: translateZ(200px);\n      /* transform: translateZ(-200px); */\n    &#125;\n  &lt;/style&gt;\n</code></pre>\n<ul>\n<li>作用<ul>\n<li>空间转换时，为元素添加近大远小、近实远虚的视觉效果</li>\n</ul>\n</li>\n</ul>\n<p><strong>空间旋转</strong></p>\n<ul>\n<li><p>语法</p>\n<ul>\n<li>transform: rotateZ(值);</li>\n<li>transform: rotateX(值);</li>\n<li>transform: rotateY(值);</li>\n</ul>\n</li>\n<li><p>左手法则：判断旋转方向，左手握住旋转轴,拇指指向正值方向,手指弯曲方向为旋转正值方向</p>\n</li>\n<li><p>rotate3d(x，y，z，角度度数)∶用来设置自定义旋转轴的位置及旋转的角度</p>\n</li>\n<li><p>x，y，z取值为0-1之间的数字</p>\n</li>\n</ul>\n<p><strong>立体呈现</strong></p>\n<ul>\n<li><p>实现方法</p>\n</li>\n<li><p>添加transform-style: preserve-3d;使子元素处于真正的3d空间</p>\n</li>\n<li><p>呈现立体图形步骤</p>\n<ol>\n<li><p>盒子父元素添加transform-style: preserve-3d ;</p>\n</li>\n<li><p>按需求设置子盒子的位置（位移或旋转)</p>\n</li>\n</ol>\n</li>\n<li><p>注意：<strong>空间内，转换元素都有自已独立的坐标轴，互不干扰</strong></p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/af02fb4dc6be4878944fef080c22f7a4.png#pic_center\"></p>\n<h2 id=\"5、动画\"><a href=\"#5、动画\" class=\"headerlink\" title=\"5、动画\"></a>5、动画</h2><p><strong>使用animation添加动画效果</strong></p>\n<ul>\n<li><p>过渡可以实现两个状态的变化过程</p>\n</li>\n<li><p><strong>动画效果可以实现多个状态间的变化过程，动画过程可控(重复播放、最终画面、是否暂停)</strong></p>\n</li>\n<li><p>动画的本质是快速切换大量图片时在人脑中形成的具有连续性的画面</p>\n</li>\n<li><p>构成动画的最小单元︰帧或动画帧</p>\n</li>\n<li><p>实现步骤:</p>\n</li>\n</ul>\n<ol>\n<li>定义动画</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/676de27ca06841c4a9b11f8d139fa2f9.png#pic_center\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/05fe58b678734a1888a3f3dd9c5112f3.png#pic_center\"></p>\n<ol start=\"2\">\n<li>使用动画</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/caa2e46279b248e0afe4165019e18514.png#pic_center\"></p>\n<ul>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        .box &#123;\n            width: 200px;\n            height: 100px;\n            background-color: pink;\n\n            /* 使用动画 */\n            animation: change 1s;\n        &#125;\n\n        /* 一. 定义动画：从200变大到600 */\n        /* @keyframes change &#123;\n            from &#123;\n                width: 200px;\n            &#125;\n            to &#123;\n                width: 600px;\n            &#125;\n        &#125; */\n        \n\n        /* 二. 定义动画：200 到 500*300 到 800*500 */\n        /* 百分比指的是动画总时长的占比 */\n        @keyframes change &#123;\n            0% &#123;\n                width: 200px;\n            &#125;\n            50% &#123;\n                width: 500px;\n                height: 300px;\n            &#125;\n            100% &#123;\n                width: 800px;\n                height: 500px;\n            &#125;\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<p><strong>使用animation相关属性控制动画的执行过程</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/3506438b1f864831b8551811d1eaba7f.png#pic_center\"></p>\n<ul>\n<li>注意:<ul>\n<li><strong>动画名称和动画时长必须赋值</strong></li>\n<li><strong>取值不分先后顺序</strong></li>\n<li><strong>如果有2个时间值，第一个时间表示动画时长，第二个时间表示延迟时间</strong></li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n<th align=\"center\">取值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">animation-name</td>\n<td align=\"center\">动画名称</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">animation-duration</td>\n<td align=\"center\">动画时长</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">animation-delay</td>\n<td align=\"center\">延迟时间</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">animation-fill-mode</td>\n<td align=\"center\">动画执行完毕时状态</td>\n<td align=\"center\">forwards：最后一帧状态&#x2F;backwards：第一帧状态</td>\n</tr>\n<tr>\n<td align=\"center\">animation-timing-function</td>\n<td align=\"center\">速度曲线</td>\n<td align=\"center\">steps()：逐帧动画</td>\n</tr>\n<tr>\n<td align=\"center\">animation-iteration-count</td>\n<td align=\"center\">重复次数</td>\n<td align=\"center\">infinite为无限循环</td>\n</tr>\n<tr>\n<td align=\"center\">animation-direction</td>\n<td align=\"center\">动画执行方向</td>\n<td align=\"center\">alternate为反向</td>\n</tr>\n<tr>\n<td align=\"center\">animation-play-state</td>\n<td align=\"center\">暂停动画</td>\n<td align=\"center\">paused为暂停，通常配合:hover使用</td>\n</tr>\n</tbody></table>\n<p><strong>使用steps实现逐帧动画</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n<th align=\"center\">取值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">animation-timing-function</td>\n<td align=\"center\">速度曲线</td>\n<td align=\"center\">steps(数字):逐帧动画</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>逐帧动画︰帧动画。开发中，一般配合精灵图实现动画效果。</p>\n</li>\n<li><p>animation-timing-function: steps(N);</p>\n<ul>\n<li>将动画过程等分成N份</li>\n</ul>\n</li>\n<li><p>精灵动画制作步骤</p>\n</li>\n<li><p>准备显示区域</p>\n<ul>\n<li>设置盒子尺寸是一张小图的尺寸，背景图为当前精灵图</li>\n</ul>\n</li>\n<li><p>定义动画</p>\n<ul>\n<li>改变背景图的位置（移动的距离就是精灵图的宽度)</li>\n</ul>\n</li>\n<li><p>使用动画</p>\n<ul>\n<li>添加速度曲线steps(N)，N与精灵图上小图个数相同</li>\n<li>添加无限重复效果</li>\n</ul>\n</li>\n</ul>\n<p><strong>能够使用animation属性给一个元素添加多个动画效果</strong></p>\n<ul>\n<li>多组动画</li>\n<li>精灵动画的同时添加盒子位移动画</li>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n    .box &#123;\n      /* 1680/12 : 保证显示区域的尺寸和一个精灵小图的尺寸相同 */\n      width: 140px;\n      height: 140px;\n      /* border: 1px solid #000; */\n      background-image: url(./images/bg.png);\n\n      /* 12: 净零小图的个数 */\n      animation: \n        move 1s steps(12) infinite,\n        run 1s forwards\n      ;\n    &#125;\n\n\n    @keyframes move &#123;\n        /* from &#123;\n          background-position: 0 0;\n        &#125; */\n        to &#123;\n          /* 1680: 精灵图的宽度 */\n          background-position:  -1680px 0;\n        &#125;\n    &#125;\n\n    /* 定义一个盒子移动的动画  800px */\n    @keyframes run &#123;\n      /* 动画的开始状态和盒子的默认样式相同的, 可以省略开始状态的代码 */\n      /* from &#123;\n        transform: translateX(0);\n      &#125; */\n      to &#123;\n        transform: translateX(800px);\n      &#125;\n    &#125;\n  &lt;/style&gt;\n</code></pre>\n<h2 id=\"6、移动端特点\"><a href=\"#6、移动端特点\" class=\"headerlink\" title=\"6、移动端特点\"></a>6、移动端特点</h2><p><strong>移动端和PC端网页不同点</strong></p>\n<ul>\n<li>PC端网页和移动端网页的不同：<ul>\n<li>PC屏幕大，网页固定版心</li>\n<li>手机屏幕小，网页宽度多数为100%</li>\n</ul>\n</li>\n<li>在电脑里面边写代码边调试移动端网页效果 – 谷歌模拟器</li>\n</ul>\n<p><strong>谷歌模拟器</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/fb6970b41e434820b6bbd15deb36926f.png#pic_center\"></p>\n<p><strong>分辨率</strong></p>\n<ul>\n<li>屏幕尺寸：指屏幕对角线的长度，一般用英寸来度量</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/1b68379dbeb941a0a50b15ab8c6a1eda.png#pic_center\"></p>\n<ul>\n<li><p>PC分辨率：</p>\n<ul>\n<li>1920*1080</li>\n<li>1366*768</li>\n<li>…</li>\n</ul>\n</li>\n<li><p>缩放150%：(1920&#x2F;150%)*(1080&#x2F;150%)</p>\n</li>\n<li><p>硬件分辨率(出厂设置)；缩放调节的分辨率(软件设置)</p>\n</li>\n<li><p>分辨率分类：</p>\n<ul>\n<li>物理分辨率是生产屏幕时就固定的，它是不可被改变的</li>\n<li>逻辑分辨率是由软件（驱动)决定的</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/33da93cd654745719d1da097b3d82b52.png#pic_center\"></p>\n<ul>\n<li><p><strong>制作网页参考逻辑分辨率</strong></p>\n</li>\n<li><p>常见移动端主流设备分辨率</p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/2b86e7c4fbd749c8a928c99ac5051598.png#pic_center\"></p>\n<p><strong>视口</strong></p>\n<ul>\n<li>手机屏幕尺寸都不同，网页宽度为100%</li>\n<li>网页的宽度和逻辑分辨率尺寸相同</li>\n<li><strong>默认情况下，网页宽度是980px，如果希望网页宽度和设备宽度(分辨率)相同，可以添加视口标签</strong></li>\n<li>视口(viewport)：显示HTML网页的区域，用来约束HTML尺寸</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/e1606062b64e46f880d8868c74535df3.png#pic_center\"></p>\n<ul>\n<li>width &#x3D; device - width：视口宽度 &#x3D; 设备宽度</li>\n<li>initial - scale &#x3D; 1.0：缩放1倍(不缩放)</li>\n</ul>\n<p><strong>二倍图</strong></p>\n<ul>\n<li>目标:能够使用像素大厨软件测量二倍图中元素的尺寸</li>\n<li>图片分辨率,为了高分辨率下图片不会模糊失真</li>\n<li>现阶段设计稿参考iPhone6&#x2F;7&#x2F;8，设备宽度375px产出设计稿</li>\n<li>二倍图设计稿尺寸:750px</li>\n</ul>\n<h2 id=\"7、百分比布局\"><a href=\"#7、百分比布局\" class=\"headerlink\" title=\"7、百分比布局\"></a>7、百分比布局</h2><ul>\n<li>百分比布局，也叫流式布局</li>\n<li>效果︰宽度自适应，高度固定。</li>\n</ul>\n<h2 id=\"8、Flex布局\"><a href=\"#8、Flex布局\" class=\"headerlink\" title=\"8、Flex布局\"></a>8、Flex布局</h2><p><strong>Flex</strong></p>\n<ul>\n<li><p>多个盒子横向排列使用<strong>浮动</strong>属性</p>\n</li>\n<li><p>设置盒子间的间距使用<strong>margin</strong>属性</p>\n</li>\n<li><p>需要注意浮动的盒子<strong>脱标问题</strong></p>\n</li>\n<li><p>Flex布局&#x2F;弹性布局:</p>\n<ul>\n<li>是─种浏览器提倡的布局模型</li>\n<li>布局网页更简单、灵活</li>\n<li><strong>避免浮动脱标的问题</strong></li>\n</ul>\n</li>\n<li><p>作用：</p>\n<ul>\n<li><p>基于Flex精确灵活控制块级盒子的布局方式，<strong>避免浮动布局中脱离文档流现象发生</strong>。</p>\n</li>\n<li><p>Flex布局非常适合结构化布局</p>\n</li>\n</ul>\n</li>\n<li><p>设置方式：父元素添加<strong>display: flex</strong>，子元素可以自动的挤压或拉伸</p>\n</li>\n<li><p>组成部分</p>\n<ul>\n<li>弹性容器</li>\n<li>弹性盒子</li>\n<li>主轴</li>\n<li>侧轴&#x2F;交叉轴</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/8d22c98ea95a4be3a13c0be81cb56a35.png#pic_center\"></p>\n<p><strong>主轴对齐方式</strong></p>\n<ul>\n<li><p>在Flex布局模型中，调节主轴或侧轴的对齐方式来设置盒子之间的间距。</p>\n</li>\n<li><p>修改主轴对齐方式属性：justify-content</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性值</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">flex-start</td>\n<td align=\"center\">默认值，起点开始依次排列</td>\n</tr>\n<tr>\n<td align=\"center\">flex-end</td>\n<td align=\"center\">终点开始依次排列</td>\n</tr>\n<tr>\n<td align=\"center\">center</td>\n<td align=\"center\">沿主轴居中排列</td>\n</tr>\n<tr>\n<td align=\"center\">space-around</td>\n<td align=\"center\">弹性盒子沿主轴均匀排列，空白间距均分在弹性盒子两侧</td>\n</tr>\n<tr>\n<td align=\"center\">space-between</td>\n<td align=\"center\">弹性盒子沿主轴均匀排列，空白间距均分在弹性盒子两侧</td>\n</tr>\n<tr>\n<td align=\"center\">space-evenly</td>\n<td align=\"center\">弹性盒子沿主轴均匀排列，弹性盒子与容器之间间距相等</td>\n</tr>\n</tbody></table>\n<ul>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        * &#123;\n            margin: 0;\n            padding: 0;\n        &#125;\n\n        .box &#123;\n            display: flex;\n\n            /* 居中 */\n            justify-content: center;\n\n            /* 间距在弹性盒子(子级)之间 */\n            justify-content: space-between;\n\n            /* 所有地方的间距都相等 */\n            justify-content: space-evenly;\n\n            /* 间距加在子级的两侧 */\n            /* 视觉效果: 子级之间的距离是父级两头距离的2倍 */\n            justify-content: space-around;\n            \n            height: 200px;\n            margin: auto;\n            border: 1px solid #000;\n        &#125;\n        \n        .box div &#123;\n            width: 100px;\n            height: 100px;\n            background-color: pink;\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<p><strong>侧轴对齐方式</strong></p>\n<ul>\n<li>修改侧轴对齐方式属性:<ul>\n<li>align-items(添加到弹性容器)</li>\n<li>align-self:控制某个弹性盒子在侧轴的对齐方式(添加到弹性盒子)</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性值</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">flex-start</td>\n<td align=\"center\">默认值，起点开始依次排列</td>\n</tr>\n<tr>\n<td align=\"center\">flex-end</td>\n<td align=\"center\">终点开始依次排列</td>\n</tr>\n<tr>\n<td align=\"center\">center</td>\n<td align=\"center\">沿侧轴居中排列</td>\n</tr>\n<tr>\n<td align=\"center\">stretch</td>\n<td align=\"center\">默认值，弹性盒子沿着主轴被拉伸至铺满容器</td>\n</tr>\n</tbody></table>\n<ul>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        * &#123;\n            margin: 0;\n            padding: 0;\n        &#125;\n\n        .box &#123;\n            display: flex;\n\n            /* 居中 */\n            /* align-items: center; */\n\n            /* 拉伸,默认值(现有状态,测试的时候去掉子级的高度) */\n            /* align-items: stretch; */\n\n            height: 300px;\n            margin: auto;\n            border: 1px solid #000;\n        &#125;\n        \n        .box div &#123;\n            /* width: 100px; */\n            /* height: 100px; */\n            background-color: pink;\n        &#125;\n\n        /* 单独设置某个弹性盒子的侧轴对齐方式 */\n        .box div:nth-child(2) &#123;\n            align-self: center;\n        &#125;\n        \n    &lt;/style&gt;\n</code></pre>\n<p><strong>伸缩比</strong></p>\n<ul>\n<li>属性 - flex：值</li>\n<li>取值分类：数值(整数)</li>\n<li>注意：只占用父盒子剩余尺寸</li>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        * &#123;\n            margin: 0;\n            padding: 0;\n        &#125;\n\n        .box &#123;\n            display: flex;\n\n            height: 300px;\n            border: 1px solid #000;\n        &#125;\n\n        .box div &#123;\n            height: 200px;\n            margin: 0 20px;\n            background-color: pink;\n        &#125;\n\n        .box div:nth-child(1) &#123;\n            width: 50px;\n        &#125;\n\n        .box div:nth-child(2) &#123;\n            /* 占用父级剩余尺寸的份数 */\n            flex: 3;\n        &#125;\n\n        .box div:nth-child(3) &#123;\n            flex: 1;\n        &#125;\n        \n    &lt;/style&gt;\n</code></pre>\n<p><strong>主轴方向</strong></p>\n<ul>\n<li>主轴默认是水平方向，侧轴默认是垂直方向</li>\n<li>修改主轴方向属性: flex-direction</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性值</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">row</td>\n<td align=\"center\">行，水平(默认值)</td>\n</tr>\n<tr>\n<td align=\"center\">column</td>\n<td align=\"center\">*列，垂直</td>\n</tr>\n<tr>\n<td align=\"center\">row-reverse</td>\n<td align=\"center\">行，从右先左</td>\n</tr>\n<tr>\n<td align=\"center\">column-reverse</td>\n<td align=\"center\">列，从下向上</td>\n</tr>\n</tbody></table>\n<ul>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        * &#123;\n            margin: 0;\n            padding: 0;\n        &#125;\n\n        li &#123;\n            list-style: none;\n        &#125;\n\n        .box li &#123;\n            display: flex;\n            /* 1. 先确定主轴方向; 2. 再选择对应的属性实现主轴或侧轴的对齐方式 */\n            /* 修改主轴方向: 列 */\n            flex-direction: column;\n\n            /* 当前视觉效果: 实现盒子水平居中 */\n            align-items: center;\n\n            /* 当前视觉效果: 垂直居中 */\n            justify-content: center;\n            \n\n            width: 80px;\n            height: 80px;\n            border: 1px solid #ccc;\n        &#125;\n        \n        .box img &#123;\n            width: 32px;\n            height: 32px;\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<p><strong>弹性盒子换行</strong></p>\n<ul>\n<li><p>弹性盒子换行显示: flex-wrap: wrap;</p>\n</li>\n<li><p>调整行对齐方式: align-content</p>\n<ul>\n<li>取值与justify-content基本相同</li>\n</ul>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        * &#123;\n            margin: 0;\n            padding: 0;\n        &#125;\n\n        .box &#123;\n            display: flex;\n\n            /* 默认值, 不换行 */\n            /* flex-wrap: nowrap; */\n\n            /* 弹性盒子换行 */\n            flex-wrap: wrap;\n\n            /* 调节行对齐方式 */\n            /* align-content: center; */\n            /* align-content: space-around; */\n            align-content: space-between;\n\n            height: 500px;\n            border: 1px solid #000;\n        &#125;\n        \n        .box div &#123;\n            width: 100px;\n            height: 100px;\n            background-color: pink;\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<h2 id=\"9、移动适配\"><a href=\"#9、移动适配\" class=\"headerlink\" title=\"9、移动适配\"></a>9、移动适配</h2><h3 id=\"9-1-rem\"><a href=\"#9-1-rem\" class=\"headerlink\" title=\"9.1 rem\"></a>9.1 rem</h3><p><strong>使用rem单位设置网页元素的尺寸</strong></p>\n<ul>\n<li><p>网页效果：屏幕宽度不同，网页元素尺寸不同（等比缩放)</p>\n</li>\n<li><p>px单位或百分比布局可以实现吗?</p>\n<ul>\n<li>px单位是绝对单位</li>\n<li>百分比布局特点宽度自适应，高度固定</li>\n</ul>\n</li>\n<li><p>适配方案</p>\n<ul>\n<li><strong>rem</strong></li>\n<li><strong>vw &#x2F; vh</strong></li>\n</ul>\n</li>\n<li><p>rem单位</p>\n<ul>\n<li>相对单位</li>\n<li>rem单位是<strong>相对于HTML标签的字号</strong>计算结果</li>\n<li><strong>1rem &#x3D; 1HTML字号大小</strong></li>\n</ul>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        * &#123;\n            margin: 0;\n            padding: 0;\n        &#125;\n        \n        /* 1rem = 1html标签字号大小 */\n        html &#123;\n            font-size: 20px;\n        &#125;\n        \n        .box &#123;\n            width: 5rem;\n            height: 3rem;\n            background-color: pink;\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<p><strong>媒体查询</strong></p>\n<ul>\n<li><p>手机屏幕大小不同，分辨率不同，通过媒体查询设置不同的HTML标签字号</p>\n</li>\n<li><p>媒体查询能够检测视口的宽度，然后编写差异化的CSS样式</p>\n</li>\n<li><p>当某个条件成立,执行对应的CSS样式</p>\n</li>\n<li><p>写法：</p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/7000547bfede42458a06d69efef03d7d.png#pic_center\"></p>\n<ul>\n<li>设备宽度大，元素尺寸大；设备宽度小，元素尺寸小</li>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        /* 使用媒体查询, 根据不同的视口宽度, 设置不同的根字号 */\n        @media (width:375px) &#123;\n            html &#123;\n                font-size: 40px;\n            &#125;\n        &#125;\n\n        /* 电脑缩放显示100%情况下 */\n        @media (width:320px) &#123;\n            html &#123;\n                font-size: 30px;\n            &#125;\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<p><strong>rem移动适配和适配原理</strong></p>\n<ul>\n<li><p>目前rem布局方案中，将网页等分成10份，<strong>HTML标签的字号为视口宽度的1&#x2F;10(width:375px – font-size:37.5px)</strong></p>\n</li>\n<li><p>rem单位尺寸</p>\n<ol>\n<li><p>根据视口宽度，设置不同的HTML标签字号</p>\n</li>\n<li><p>书写代码，尺寸是rem单位</p>\n<ul>\n<li>确定设计稿对应的设备的HTML标签字号</li>\n<li>查看设计稿宽度→确定参考设备宽度(视口宽度)→确定基准根字号(1&#x2F;10视口宽度)</li>\n<li>2.2 rem单位的尺寸</li>\n<li>N*37.5 &#x3D; 68→N&#x3D; 68&#x2F; 37.5</li>\n<li>rem单位的尺寸&#x3D; px单位数值&#x2F;基准根字号</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<p><strong>flexible</strong></p>\n<ul>\n<li><p>使用flexible.js配合rem实现在不同宽度的设备中，网页元素尺寸等比缩放效果</p>\n</li>\n<li><p>flexible.js是手淘开发出的一个用来适配移动端的js框架</p>\n</li>\n<li><p>核心原理就是根据不同的视口宽度给网页中html根节点设置不同的font-size</p>\n</li>\n</ul>\n<pre><code class=\"javascript\">(function flexible (window, document) &#123;\n  var docEl = document.documentElement\n  var dpr = window.devicePixelRatio || 1\n\n  // adjust body font size\n  function setBodyFontSize () &#123;\n    if (document.body) &#123;\n      document.body.style.fontSize = (12 * dpr) + &#39;px&#39;\n    &#125;\n    else &#123;\n      document.addEventListener(&#39;DOMContentLoaded&#39;, setBodyFontSize)\n    &#125;\n  &#125;\n  setBodyFontSize();\n\n  // set 1rem = viewWidth / 10\n  function setRemUnit () &#123;\n    var rem = docEl.clientWidth / 10\n    docEl.style.fontSize = rem + &#39;px&#39;\n  &#125;\n\n  setRemUnit()\n\n  // reset rem unit on page resize\n  window.addEventListener(&#39;resize&#39;, setRemUnit)\n  window.addEventListener(&#39;pageshow&#39;, function (e) &#123;\n    if (e.persisted) &#123;\n      setRemUnit()\n    &#125;\n  &#125;)\n\n  // detect 0.5px supports\n  if (dpr &gt;= 2) &#123;\n    var fakeBody = document.createElement(&#39;body&#39;)\n    var testElement = document.createElement(&#39;div&#39;)\n    testElement.style.border = &#39;.5px solid transparent&#39;\n    fakeBody.appendChild(testElement)\n    docEl.appendChild(fakeBody)\n    if (testElement.offsetHeight === 1) &#123;\n      docEl.classList.add(&#39;hairlines&#39;)\n    &#125;\n    docEl.removeChild(fakeBody)\n  &#125;\n&#125;(window, document))\n</code></pre>\n<h3 id=\"9-2-less\"><a href=\"#9-2-less\" class=\"headerlink\" title=\"9.2 less\"></a>9.2 less</h3><ul>\n<li><p>在px单位转换到rem单位过程中，除法运算比较麻烦，<strong>因为CSS不支持计算写法</strong></p>\n</li>\n<li><p>解决方案:<strong>可以通过Less实现</strong></p>\n</li>\n<li><p>Less是一个CSS预处理器,Less文件后缀是.less</p>\n</li>\n<li><p>扩充了CSS语言,使CSS具备一定的逻辑性、<strong>计算</strong>能力。</p>\n</li>\n<li><p>注意︰浏览器不识别Less代码，目前阶段，网页要引入对应的CSS文件</p>\n</li>\n<li><p>Easy Less :vscode插件</p>\n</li>\n<li><p>作用: less文件保存自动生成css文件</p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/746dc14b44d24307a631d567524e1d77.png#pic_center\"></p>\n<ul>\n<li>Less代码：</li>\n</ul>\n<pre><code class=\"less\">.father &#123;\n    color: red;\n\n    width: (68 / 37.5rem);\n\n    .son &#123;\n        background-color: pink;\n    &#125;\n&#125;\n</code></pre>\n<ul>\n<li>自动生成的css代码：</li>\n</ul>\n<pre><code class=\"css\">.father &#123;\n  color: red;\n  width: 1.81333333rem;\n&#125;\n.father .son &#123;\n  background-color: pink;\n&#125;\n</code></pre>\n<ul>\n<li><p>注释:</p>\n<ul>\n<li>单行注释：语法 ：&#x2F;&#x2F;注释内容 ；快捷键: ctrl+&#x2F;</li>\n<li>块注释：语法∶&#x2F; * 注释内容 *&#x2F;  ；快捷键: shift + alt +A</li>\n</ul>\n</li>\n<li><p>运算:</p>\n<ul>\n<li><p>加、减、乘直接书写计算表达式</p>\n</li>\n<li><p>除法需要添加小括号 或 .</p>\n</li>\n</ul>\n</li>\n<li><p>Less代码：</p>\n</li>\n</ul>\n<pre><code class=\"less\">.box &#123;\n    width: 100 + 10px;\n    width: 100 - 20px;\n    width: 100 * 2px;\n\n    // 除法\n    // 68  -&gt; rem\n    width: (68 / 37.5rem);\n    height: 29 ./ 37.5rem;\n&#125;\n</code></pre>\n<ul>\n<li>自动生成的css代码：</li>\n</ul>\n<pre><code class=\"css\">.box &#123;\n  width: 110px;\n  width: 80px;\n  width: 200px;\n  width: 1.81333333rem;\n  height: 0.77333333rem;\n&#125;\n</code></pre>\n<ul>\n<li>注意︰表达式存在多个单位以第一个单位为准</li>\n</ul>\n<p><strong>嵌套</strong></p>\n<ul>\n<li><p>作用：<strong>快速生成后代代码</strong></p>\n</li>\n<li><p>注意：&amp;不生成后代选择器，表示当前选择器，通常配合伪类或伪元素使用</p>\n</li>\n<li><p>Less代码：</p>\n</li>\n</ul>\n<pre><code class=\"less\">.father &#123;\n    width: 100px;\n\n    .son &#123;\n        color: pink;\n\n        // &amp; 表示当前选择器\n        &amp;:hover &#123;\n            color: green;\n        &#125;\n    &#125;\n\n    &amp;:hover &#123;\n        color: orange;\n    &#125;\n&#125;\n</code></pre>\n<ul>\n<li>自动生成的css代码：</li>\n</ul>\n<pre><code class=\"css\">.father &#123;\n  width: 100px;\n&#125;\n\n.father .son &#123;\n  color: pink;\n&#125;\n\n.father .son:hover &#123;\n  color: green;\n&#125;\n\n.father:hover &#123;\n  color: orange;\n&#125;\n</code></pre>\n<p><strong>变量</strong></p>\n<ul>\n<li><p>网页中文字颜色基本同一，如果网站改版，变换文字颜色，修改代码方式：</p>\n<ol>\n<li>逐一修改属性值(繁琐)</li>\n<li>把颜色提前存储到一个容器，设置属性值为这个容器名(推荐)</li>\n</ol>\n</li>\n<li><p>把颜色提前存储到一个容器，设置属性值为这个容器名</p>\n</li>\n<li><p>变量:存储数据，方便使用和修改。</p>\n</li>\n<li><p>语法︰</p>\n<ul>\n<li>定义变量：**@变量名：值;**</li>\n<li>使用变量：CSS属性：**@变量名;**</li>\n</ul>\n</li>\n<li><p>Less代码：</p>\n</li>\n</ul>\n<pre><code class=\"less\">// 1. 定义. 2.使用\n@colora: green;\n\n.box &#123;\n    color: @colora;\n&#125;\n\n.father &#123;\n    background-color: @colora;\n&#125;\n\n.aa &#123;\n    color: @colora;\n&#125;\n</code></pre>\n<ul>\n<li>自动生成的css代码：</li>\n</ul>\n<pre><code class=\"css\">.box &#123;\n  color: green;\n&#125;\n\n.father &#123;\n  background-color: green;\n&#125;\n\n.aa &#123;\n  color: green;\n&#125;\n</code></pre>\n<p><strong>文件操作</strong></p>\n<ul>\n<li><p>开发网站时</p>\n<ol>\n<li>CSS：书写link标签</li>\n<li>Less：导入</li>\n</ol>\n</li>\n<li><p>导入方式：**@import ‘文件路径’**</p>\n</li>\n<li><p>导出方式：</p>\n<ol>\n<li><p>配置EasyLess插件，实现所有Less有相同的导出路径</p>\n<ul>\n<li>配置插件︰设置→搜索EasyLess→在setting.json中编辑→添加导出代码（注意，必须是双引号)</li>\n</ul>\n</li>\n<li><p>控制当前Less文件导出路径</p>\n<ul>\n<li>Less文件第一行添加如下代码,注意文件夹名称后面添加&#x2F;</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<pre><code class=\"markdown\">// out: ./css/\n// out: ./css/common.css\n</code></pre>\n<ul>\n<li>禁止导出：在less文件第一行添加：&#x2F;&#x2F;out.false</li>\n</ul>\n<pre><code class=\"markdown\">// out: false\n</code></pre>\n<h3 id=\"9-3-vw-vh\"><a href=\"#9-3-vw-vh\" class=\"headerlink\" title=\"9.3 vw&#x2F;vh\"></a>9.3 vw&#x2F;vh</h3><ul>\n<li><p>相对单位</p>\n<ul>\n<li><strong>相对视口的尺寸</strong>计算结果</li>\n<li>vw : viewport width；1vw &#x3D; 1&#x2F;100视口宽度</li>\n<li>vh : viewport height；1vh &#x3D; 1&#x2F;100视口高度</li>\n</ul>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        * &#123;\n            margin: 0;\n            padding: 0;\n        &#125;\n\n        /* 1. vw = 1/100视口宽度 */\n        /* .box &#123;\n            width: 50vw;\n            height: 30vw;\n            background-color: pink;\n        &#125; */\n\n        /* 2. vh = 1/100视口高度 */\n        .box &#123;\n            width: 50vh;\n            height: 30vh;\n            background-color: pink;\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<p><strong>vw适配原理</strong></p>\n<ul>\n<li>vw单位尺寸<ol>\n<li>确定设计稿对应的vw尺寸( 1&#x2F;100视口宽度)<ul>\n<li>查看设计稿宽度→确定参考设备宽度(视口宽度)→确定vw尺寸(1&#x2F;100视口宽度)</li>\n</ul>\n</li>\n<li>vw单位的尺寸&#x3D; px单位数值&#x2F;( 1&#x2F;100视口宽度)</li>\n</ol>\n</li>\n</ul>\n<p><strong>vh适配原理</strong></p>\n<ul>\n<li><p>vh单位尺寸</p>\n<ol>\n<li>确定设计稿对应的vh尺寸( 1&#x2F;100视口高度)<ul>\n<li>查看设计稿宽度→确定参考设备高度(视口高度)→确定vh尺寸( 1&#x2F;100视口高度)</li>\n</ul>\n</li>\n<li>vh单位的尺寸&#x3D; px单位数值&#x2F;( 1&#x2F;100视口高度)</li>\n</ol>\n</li>\n<li><p>开发中不会混用vw和vh，vh是1&#x2F;100视口高度，全面屏视口高度尺寸大，如果混用可能会导致盒子变形。</p>\n</li>\n</ul>\n<p><strong>rem和vw&#x2F;vh的区别</strong></p>\n<ul>\n<li><p>rem：市场比较常见</p>\n<ol>\n<li>需要不断修改html文字大小</li>\n<li>需要媒体查询media</li>\n<li>需要flexible.js</li>\n</ol>\n</li>\n<li><p>vw&#x2F;vh：将来(马上)趋势（推荐）</p>\n<ol>\n<li>省去各种判断和修改</li>\n<li>……</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"10、媒体查询\"><a href=\"#10、媒体查询\" class=\"headerlink\" title=\"10、媒体查询\"></a>10、媒体查询</h2><p><strong>基本语法</strong></p>\n<ul>\n<li><p>开发常用写法：max-width(从小到大)、min-width(从大到小)<br><img src=\"https://img-blog.csdnimg.cn/46a8487b058141f6b25f1439ca977324.png#pic_center\"></p>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">&lt;style&gt;\n        /*\n            视口宽度 &gt;= 768px，网页背景色是 粉色\n            视口宽度 &gt;= 992px，网页背景色是 绿色\n            视口宽度 &gt;= 1200px，网页背景色是 skyblue\n         */\n        @media (min-width: 768px) &#123;\n            body &#123;\n                background-color: pink;\n            &#125;\n        &#125;\n\n        @media (min-width: 992px) &#123;\n            body &#123;\n                background-color: green;\n            &#125;\n        &#125;\n\n        @media (min-width: 1200px) &#123;\n            body &#123;\n                background-color: skyblue;\n            &#125;\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<ul>\n<li>书写具有顺序：</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/5088a14046a24822b84212030cc262f4.png\"></p>\n<p><strong>完整写法</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/a1f43bff4e2445d68ab9ffe5d5a3a15e.png\"></p>\n<ul>\n<li><p>关键词：and&#x2F;only&#x2F;not</p>\n</li>\n<li><p>媒体类型:媒体是用来区分设备类型的，如屏幕设备、打印设备等，其中手机、电脑、平板都属于屏幕设备</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">类型名称</th>\n<th align=\"center\">值</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">屏幕</td>\n<td align=\"center\">screen</td>\n<td align=\"center\">带屏幕的设备</td>\n</tr>\n<tr>\n<td align=\"center\">打印预览</td>\n<td align=\"center\">print</td>\n<td align=\"center\">打印预览模式</td>\n</tr>\n<tr>\n<td align=\"center\">阅读器</td>\n<td align=\"center\">speech</td>\n<td align=\"center\">屏幕阅读模式</td>\n</tr>\n<tr>\n<td align=\"center\">不区分类型</td>\n<td align=\"center\">all</td>\n<td align=\"center\">默认值，包含以上三种</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">特性名称</th>\n<th align=\"center\">属性</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">视口的宽和高</td>\n<td align=\"center\">width、height</td>\n<td align=\"center\">数值</td>\n</tr>\n<tr>\n<td align=\"center\">视口最大宽或高</td>\n<td align=\"center\">max-width、max-height</td>\n<td align=\"center\">数值</td>\n</tr>\n<tr>\n<td align=\"center\">视口最大宽或高</td>\n<td align=\"center\">min-width、min-height</td>\n<td align=\"center\">数值</td>\n</tr>\n<tr>\n<td align=\"center\">屏幕方向</td>\n<td align=\"center\">orientation</td>\n<td align=\"center\">portrait:竖屏&#x2F;landscape：横屏</td>\n</tr>\n</tbody></table>\n<p><strong>外链式引入</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/11f903cd595a47e8863090e9bd5df70f.png\"></p>\n<ul>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;!-- 视口宽度 &gt;= 992px，网页背景色为粉色 --&gt;\n    &lt;!-- 视口宽度 &gt;= 1200px，网页背景色为绿色 --&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;./one.css&quot; media=&quot;(min-width: 992px)&quot;&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;./two.css&quot; media=&quot;(min-width: 1200px)&quot;&gt;\n</code></pre>\n<p><strong>隐藏</strong></p>\n<ul>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">    &lt;style&gt;\n        * &#123;\n            margin: 0;\n            padding: 0;\n        &#125;\n\n        .box &#123;\n            display: flex;\n            width: 100%;\n        &#125;\n\n        .left &#123;\n            width: 300px;\n            min-height: 500px;\n            background-color: pink;\n        &#125;\n\n        .main &#123;\n            flex: 1;\n            min-height: 500px;\n            background-color: skyblue;\n        &#125;\n\n        /* 如果检测到视口宽度小于768px, 认为是手机端, left隐藏 */\n        @media (max-width: 768px) &#123;\n            .left &#123;\n                display: none;\n            &#125;\n        &#125;\n    &lt;/style&gt;\n</code></pre>\n<h2 id=\"11、BootStrap\"><a href=\"#11、BootStrap\" class=\"headerlink\" title=\"11、BootStrap\"></a>11、BootStrap</h2><p><strong>UI框架</strong></p>\n<ul>\n<li>将常见效果进行统一封装后形成的一套代码,例如:BootStrap</li>\n<li>作用：基于框架开发，效率高，稳定性高。</li>\n</ul>\n<p><strong>BootStrap简介</strong></p>\n<ul>\n<li><p>Bootstrap是由Twitter公司开发维护的前端UI框架，它提供了大量编写好的CSS样式，允许开发者结合一定HTML结构及JavaScript，快速编写功能完善的网页及常见交互效果。</p>\n</li>\n<li><p>中文官网: <a href=\"https://www.bootcss.com/\">https://www.bootcss.com/</a></p>\n</li>\n<li><p>使用：</p>\n<ol>\n<li>下载</li>\n</ol>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/470335e2b2b542bbbc04ab95a604d314.png#pic_center\"></p>\n<ol start=\"2\">\n<li>引入</li>\n</ol>\n<pre><code class=\"html\">  &lt;link rel=&quot;stylesheet&quot; href=&quot;./bootstrap-03.3.7/css/bootstrap.css&quot;&gt;\n</code></pre>\n<ol start=\"3\">\n<li>调用类：使用BootStrap提供的样<ul>\n<li>container :响应式布局版心类</li>\n</ul>\n</li>\n</ol>\n<p><strong>BootStrap栅格系统</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/701601e1912d497da82a1e063c3dc14c.png#pic_center\"></p>\n<ul>\n<li>栅格化是指将整个网页的宽度分成若干等份</li>\n<li>BootStrap3默认将网页分成12等份</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">超小屏幕</th>\n<th align=\"center\">小屏幕</th>\n<th align=\"center\">中等屏幕</th>\n<th align=\"center\">大屏幕</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">响应断点</td>\n<td align=\"center\">&lt;768px</td>\n<td align=\"center\">&gt;&#x3D;768px</td>\n<td align=\"center\">&gt;&#x3D;992px</td>\n<td align=\"center\">&gt;&#x3D;1200px</td>\n</tr>\n<tr>\n<td align=\"center\">别名</td>\n<td align=\"center\">xs</td>\n<td align=\"center\">sm</td>\n<td align=\"center\">md</td>\n<td align=\"center\">lg</td>\n</tr>\n<tr>\n<td align=\"center\">容器宽度</td>\n<td align=\"center\">100%</td>\n<td align=\"center\">750px</td>\n<td align=\"center\">970px</td>\n<td align=\"center\">1170px</td>\n</tr>\n<tr>\n<td align=\"center\">类前缀</td>\n<td align=\"center\">col-xs-*</td>\n<td align=\"center\">col-sm-*</td>\n<td align=\"center\">col-md-*</td>\n<td align=\"center\">col-lg-*</td>\n</tr>\n<tr>\n<td align=\"center\">列数</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n</tr>\n<tr>\n<td align=\"center\">列间隙</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n</tr>\n</tbody></table>\n<ul>\n<li>代码：</li>\n</ul>\n<pre><code class=\"html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;栅格系统&lt;/title&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;./bootstrap-3.4.1-dist/css/bootstrap.min.css&quot;&gt;\n\n    &lt;style&gt;\n        .container div &#123;\n            height: 50px;\n            background-color: pink;\n        &#125;\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;!-- 需求: 大屏: 一行排列4个内容; 中屏:一行排列2个内容 --&gt;\n    &lt;div class=&quot;container&quot;&gt;\n        &lt;div class=&quot;col-lg-3 col-md-6&quot;&gt;1&lt;/div&gt;\n        &lt;div class=&quot;col-lg-3 col-md-6&quot;&gt;2&lt;/div&gt;\n        &lt;div class=&quot;col-lg-3 col-md-6&quot;&gt;3&lt;/div&gt;\n        &lt;div class=&quot;col-lg-3 col-md-6&quot;&gt;4&lt;/div&gt;\n    &lt;/div&gt;\n    \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<ul>\n<li><p>.container是Bootstrap中专门提供的类名，所有应用该类名的盒子，默认已被指定宽度且居中</p>\n</li>\n<li><p>.container-fluid也是Bootstrap 中专门提供的类名，所有应用该类名的盒子，宽度均为100%</p>\n</li>\n<li><p>分别使用.row类名和.col类名定义栅格布局的行和列。</p>\n</li>\n<li><p>注意：container类自带间距15px；row类自带间距-15px</p>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">    &lt;!-- 版心样式:自带左右各15px的padding --&gt;\n    &lt;div class=&quot;container&quot;&gt;1&lt;/div&gt;\n\n    &lt;!-- row类作用就是抵消container类的15px的内边距(padding), row有-15px的外边距(margin) --&gt;\n    &lt;div class=&quot;container&quot;&gt;\n        &lt;div class=&quot;row&quot;&gt;2&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;!-- 宽度100%:自带左右各15px的padding --&gt;\n    &lt;div class=&quot;container-fluid&quot;&gt;3&lt;/div&gt;\n</code></pre>\n<p><strong>全局样式</strong></p>\n<ul>\n<li><p>BootStrap预定义了大量类用来美化页面，掌握手册的查找方法是学习全局样式的重点</p>\n</li>\n<li><p>网站首页→BootStrap3中文文档→全局CSS样式→按分类导航查找目标类</p>\n</li>\n<li><p>布局类：表格</p>\n<ul>\n<li>table:基本类名,初始化表格默认样式</li>\n<li>table-bordered :边框线</li>\n<li>table-striped:隔行变色</li>\n<li>table-hover:鼠标悬停效果</li>\n<li>table-responsive :表格宽溢出滚动</li>\n<li>……</li>\n</ul>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">&lt;table class=&quot;table table-striped table-bordered table-hover&quot;&gt;\n</code></pre>\n<ul>\n<li><p>美化内容类：按钮</p>\n<ul>\n<li>btn:基准样式</li>\n<li>btn-info; btn-success:设置按钮背景色</li>\n<li>btn-block :设置按钮为块元素</li>\n<li>btn-lg; btn-sm; btn-xs:设置按钮大小</li>\n<li>……</li>\n</ul>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">&lt;button class=&quot;btn btn-success btn-lg&quot;&gt;成功&lt;/button&gt;\n</code></pre>\n<ul>\n<li>布局类：辅助类<ul>\n<li>pull-right:强制元素右浮动</li>\n<li>pull-left :强制元素左浮动</li>\n<li>clearfix:清除浮动元素的影响</li>\n<li>text-left文:本左对齐</li>\n<li>text-right :文本右对齐</li>\n<li>text-center : 文本居中对齐</li>\n<li>center-block :块元素居中</li>\n<li>……</li>\n</ul>\n</li>\n</ul>\n<p><strong>组件</strong></p>\n<ul>\n<li><p>BootStrap提供的常见功能，包含了HTML结构和CSS样式</p>\n</li>\n<li><p>使用方法：</p>\n<ol>\n<li>引入BootStrap样式</li>\n<li>复制结构，修改内容</li>\n</ol>\n</li>\n<li><p>字体图标使用步骤：</p>\n<ol>\n<li>HTML页面引入BootStrap样式文件</li>\n<li>准备字体文件(注意路径)</li>\n<li>空标签调用对应类名<ul>\n<li>glyphicon</li>\n<li>图标类</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>代码：</p>\n</li>\n</ul>\n<pre><code class=\"html\">&lt;i class=&quot;glyphicon glyphicon-user&quot;&gt;&lt;/i&gt;\n</code></pre>\n<p><strong>插件</strong></p>\n<ul>\n<li>使用方法：</li>\n</ul>\n<ol>\n<li>引入BootStrap样式</li>\n</ol>\n<pre><code class=\"html\">&lt;script src=&quot;./js/jquery.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;./bootstrap-3.3.7-dist/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>  2.引入js文件: jQuery.js +BootStrap.min.js<br>  3.复制HTML结构,并适当调整结构或内容</p>\n<p><strong>定制</strong></p>\n<ul>\n<li>使用方法：<ol>\n<li>导航菜单→定制</li>\n<li>输入目标变量值</li>\n<li>编译并下载，使用定制后的框架</li>\n</ol>\n</li>\n</ul>\n<p><strong>总结</strong></p>\n<ul>\n<li><p>响应式适用:</p>\n<ol>\n<li>企业站</li>\n<li>内容较少的网站</li>\n</ol>\n</li>\n<li><p>电商站两套布局，移动端用rem&#x2F;vh、vw适配，企业站用响应式布局</p>\n</li>\n</ul>\n","feature":true,"text":"在前端开发中，移动端适配是指利用CSS技术使网页能够在不同移动设备上呈现良好的显示效果。通过使用响应式布局、媒体查询和弹性布局等技术，开发者可以实现移动端适配，使网页在手机和平板等移动设备上具有良好的可视和交互体验。...","permalink":"/post/前端--移动Web知识点大全","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"23 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"CSS","slug":"CSS","count":4,"path":"api/tags/CSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A7%BB%E5%8A%A8Web\"><span class=\"toc-text\">移动Web</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%AD%97%E4%BD%93%E5%9B%BE%E6%A0%87\"><span class=\"toc-text\">1、字体图标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%B9%B3%E9%9D%A2%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">2、平面转换</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E6%B8%90%E5%8F%98\"><span class=\"toc-text\">3、渐变</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E7%A9%BA%E9%97%B4%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">4、空间转换</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">5、动画</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6%E3%80%81%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">6、移动端特点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7%E3%80%81%E7%99%BE%E5%88%86%E6%AF%94%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">7、百分比布局</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8%E3%80%81Flex%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">8、Flex布局</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9%E3%80%81%E7%A7%BB%E5%8A%A8%E9%80%82%E9%85%8D\"><span class=\"toc-text\">9、移动适配</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-1-rem\"><span class=\"toc-text\">9.1 rem</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-2-less\"><span class=\"toc-text\">9.2 less</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-3-vw-vh\"><span class=\"toc-text\">9.3 vw&#x2F;vh</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10%E3%80%81%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">10、媒体查询</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11%E3%80%81BootStrap\"><span class=\"toc-text\">11、BootStrap</span></a></li></ol></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"JavaScript入门：掌握基础语法","uid":"20bde650eb44b90bc389cc737e93f282","slug":"前端--JavaScript基础知识点大全","date":"2022-12-19T13:55:31.000Z","updated":"2025-07-14T15:12:20.463Z","comments":true,"path":"api/articles/前端--JavaScript基础知识点大全.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/de6c1a55cf774f9fa1e2cff7c25e5fc9.png","text":"JavaScript基础语法包括变量声明、数据类型、运算符、条件语句和循环结构等。通过学习JavaScript基础语法，开发者可以实现网页的动态效果和交互功能，如表单验证、页面元素操作及动画效果等。JavaScript作为前端开发的核心语言，掌握其基础语法对于创建交互丰富的网页至关重要。...","permalink":"/post/前端--JavaScript基础知识点大全","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true},"next_post":{"title":"前端必备之CSS基础知识点","uid":"6d37bc10bf7dcfd3ccdbf8e29e0a8564","slug":"前端--CSS这一篇就够啦","date":"2022-12-07T12:20:07.000Z","updated":"2025-07-14T15:12:20.463Z","comments":true,"path":"api/articles/前端--CSS这一篇就够啦.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/de6c1a55cf774f9fa1e2cff7c25e5fc9.png","text":"前端开发中，CSS（层叠样式表）用于控制网页的样式和布局。通过CSS，开发人员可以选择元素的字体、颜色、大小和位置等属性，以及定义动画和过渡效果。CSS的使用能够使网页更加美观、可读性更好，并提升用户体验。...","permalink":"/post/前端--CSS这一篇就够啦","photos":[],"count_time":{"symbolsCount":"38k","symbolsTime":"34 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"CSS","slug":"CSS","count":4,"path":"api/tags/CSS.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}