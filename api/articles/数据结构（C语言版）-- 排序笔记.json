{"title":"排序","uid":"2a1893ca085cc0c5b7d1cdcd8c0b1c91","slug":"数据结构（C语言版）-- 排序笔记","date":"2022-02-20T13:06:27.000Z","updated":"2025-07-14T15:12:20.469Z","comments":true,"path":"api/articles/数据结构（C语言版）-- 排序笔记.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/615f198050724f5e8140b446a34d7f7c.png","content":"<hr>\n<h1 id=\"1、排序的基本概念\"><a href=\"#1、排序的基本概念\" class=\"headerlink\" title=\"1、排序的基本概念\"></a>1、排序的基本概念</h1><p>排序是计算机内经常进行的一种操作，其目的是将一组“无序”的记录序列调整为“有序”的记录序列。<strong>排序的目的是为了便于查找</strong>。</p>\n<p>若整个排序过程不需要访问外存便能完成，则称此类排序问题为内部排序;<br>反之，若参加排序的记录数量很大，整个序列的排序过程不可能在内存中完成，必须访问外存，则称此类排序问题为外部排序。</p>\n<p><strong>内部排序方法的分类</strong></p>\n<ul>\n<li><p><strong>插入排序(直接插入、折半插入、希尔排序)</strong><br> 将无序子序列中的一个或几个记录“插入”到有序序列中，从而增加记录的有序子序列的长度。</p>\n</li>\n<li><p><strong>交换排序(冒泡排序、快速排序)</strong><br> 通过“交换”无序序列中的记录从而得到其中关键字最小或最大的记录，并将它加入到有序子序列中，以此方法增加记录的有序子序列的长度。</p>\n</li>\n<li><p><strong>选择排序(简单选择、树形选择、堆排序)</strong><br> 从记录的无序子序列中“选择”关键字最小或最大的记录，并将它加入到有序子序列中，以此方法增加记录的有序子序列的长度。</p>\n</li>\n<li><p><strong>归并排序</strong><br> 通过“归并”两个或两个以上的记录有序子序列，逐步增加记录有序序列的长度。</p>\n</li>\n<li><p><strong>基数排序</strong><br> 不需要进行关键字之间的比较，依据“多关键字”排序的思想，借助“分配”和“收集”两种操作，对单逻辑关键字进行排序的方法。</p>\n</li>\n</ul>\n<p><strong>待排序记录的存储方式</strong>：顺序表、链表、地址向量</p>\n<p><strong>排序算法效率的评价指标</strong></p>\n<ol>\n<li><strong>时间效率</strong>——排序速度（比较次数与移动次数)</li>\n<li><strong>空间效率</strong>——占内存辅助空间的大小</li>\n<li><strong>稳定性</strong>——A和B的关键字相等，排序后A、B的先后次序保持不变，则称这种排序算法是稳定的。</li>\n</ol>\n<hr>\n<h1 id=\"2、插入排序\"><a href=\"#2、插入排序\" class=\"headerlink\" title=\"2、插入排序\"></a>2、插入排序</h1><p>&#x3D;&#x3D;插人排序的基本思想是:<strong>每一趟将一个待排序的记录，按其关键字的大小插人到已经排好序的一组记录的适当位置上，直到所有待排序记录全部插人为止。</strong>&#x3D;&#x3D;</p>\n<h2 id=\"①-直接插入排序\"><a href=\"#①-直接插入排序\" class=\"headerlink\" title=\"①.直接插入排序\"></a>①.直接插入排序</h2><p>&#x3D;&#x3D;直接插入排序(Straight Insertion Sort)是一种最简单的排序方法，其基本操作是将―条记录插入到已排好序的有序表，从而得到一个新的、记录数量增1的有序表。&#x3D;&#x3D;</p>\n<p>直接插入排序算法步骤：</p>\n<ul>\n<li>设待排序的记录存放在数组r[1..n]中，r[1]是一个有序序列。</li>\n<li>循环n -1次，每次使用顺序查找法，查找r[i](i&#x3D;2,…,n）在已排好序的序列r[1…i-1]中的插入位置，然后将r[i]插人表长为i-1的有序序列r[1…i-1]，直到将r[n]插入表长为n-1的有序序列r[1…n-1]，最后得到一个表长为n的有序序列。</li>\n</ul>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//直接插入排序</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\">  20          \t\t\t\t\t\t//顺序表的最大长度</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">otherinfo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序表的存储结构                         </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t         \t\t\t\t\t\t//存储空间的基地址</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\">  length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t//顺序表长度</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//顺序表类型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">InsertSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">   //对顺序表L做直接插入排序</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">   \t\t\t\t\t\t\t\t\t\t//&quot;&lt;&quot;，需将r[i]插入有序子表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t \t\t\t//将待插入的记录暂存到监视哨中</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t            \t\t//r[i-1]后移</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;--</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">\t\t\t//从后向前寻找插入位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//记录逐个后移，直到找到插入位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//将r[0]即原r[i]，插入到正确位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//if</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t\t//InsertSort</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据个数，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//输入个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入待排序的数据:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个数超过上限，不能超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">，请重新输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SqList L</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> ElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">InsertSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">排序后的结果为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>例：已知待排序记录的关键字序列为{49,38,65,97,76,13,27,49 }，用直接插入排序法进行排序的过程。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/8780feac249d4bd6b228b6195f6a1118.png#pic_center\"><br>直接插入排序特点：</p>\n<ul>\n<li>稳定排序。</li>\n<li>算法简便，且容易实现。</li>\n<li>也适用于链式存储结构，只是在单链表上无需移动记录，只需修改相应的指针。</li>\n<li>更适合于初始记录基本有序（正序)的情况，当初始记录无序，n较大时，此算法时间复杂度较高，不宜采用。</li>\n</ul>\n<h2 id=\"②-折半插入排序\"><a href=\"#②-折半插入排序\" class=\"headerlink\" title=\"②.折半插入排序\"></a>②.折半插入排序</h2><p>折半插入排序算法步骤：</p>\n<ol>\n<li>设待排序的记录存放在数组r[1…n]中，r[1]是一个有序序列。</li>\n<li>循环n-1次，每次使用折半查找法，查找r<a href=\"i=2%EF%BC%8C%E2%80%A6%EF%BC%8Cn\">i</a>在已排好序的序列r[1..i-1]中的插入位置，然后将r[i插入表长为i-1的有序序列r[1…i-1]，直到将r[n]插入表长为n-l的有序序列r[<br>1…n-1]，最后得到一个表长为n的有序序列。</li>\n</ol>\n<p> <img src=\"https://img-blog.csdnimg.cn/f1df7f1ae60c48b5858280a56487bda7.png#pic_center\"></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//折半插入排序</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\">  20          \t\t\t//顺序表的最大长度</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">otherinfo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序表的存储结构                         </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t         \t\t\t\t\t\t//存储空间的基地址</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\">  length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t//顺序表长度</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//顺序表</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">BInsertSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //对顺序表L做折半插入排序</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">high</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">m</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">          \t\t\t\t\t//将待插入的记录暂存到监视哨中</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        low</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> high</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">        \t\t\t\t\t//置查找区间初值</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//在r[low..high]中折半查找插入的位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            m</span><span style=\"color: #89DDFF\">=(</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">)/</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">             \t\t\t//折半</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\">  high</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t//插入点在前一子表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\">  low</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t   \t\t//插入点在后一子表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//while</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;--</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\">  </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t//记录后移</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//将r[0]即原r[i]，插入到正确位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t//for</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t\t//BInsertSort</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据个数，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//输入个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入待排序的数据：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个数超过上限，不能超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">，请重新输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SqList L</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> ElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">BInsertSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">排序后的结果为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>折半插入排序特点：</p>\n<ul>\n<li>稳定排序。</li>\n<li>因为要进行折半查找，所以只能用于顺序结构，不能用于链式结构。</li>\n<li>适合初始记录无序、n较大时的情况。</li>\n</ul>\n<h2 id=\"③-希尔排序\"><a href=\"#③-希尔排序\" class=\"headerlink\" title=\"③.希尔排序\"></a>③.希尔排序</h2><p>&#x3D;&#x3D;希尔排序：先将整个待排记录序列分割成若干子序列,分别进行直接插入排序，待整个序列中的记录“基本有序”时，再对全体记录进行一次直接插入排序。&#x3D;&#x3D;</p>\n<p><img src=\"https://img-blog.csdnimg.cn/ee970b64b1a24857a527c9ddf618324d.png#pic_center\"></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//希尔排序</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\">  20          \t\t\t//顺序表的最大长度</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">otherinfo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序表的存储结构                         </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t         \t\t\t\t\t\t//存储空间的基地址</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\">  length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t//顺序表长度</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//顺序表类型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ShellInsert</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">dk</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //对顺序表L做一趟增量是dk的希尔插入排序</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">dk</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">dk</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t//需将L.r[i]插入有序增量子表</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//暂存在L.r[0]</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\">dk</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">-=</span><span style=\"color: #F07178\">dk</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\">dk</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t//记录后移，直到找到插入位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\">dk</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//将r[0]即原r[i]，插入到正确位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t//for</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">                                                //ShellInsert</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ShellSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">dt</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">],</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">t</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">   //按增量序列dt[0..t-1]对顺序表L作t趟希尔排序</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">ShellInsert</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">dt</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">]);</span><span style=\"color: #676E95; font-style: italic\">\t\t\t \t\t//一趟增量为dt[t]的希尔插入排序</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t//ShellSort</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据个数，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t//输入个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入待排序的数据：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个数超过上限，不能超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">，请重新输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SqList L</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> ElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">//增量数组的长度</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">dt</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">//增量数组</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入增量个数：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">第</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个增量:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">dt</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">ShellSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">dt</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">排序后的结果为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>希尔排序特点：</p>\n<ul>\n<li>记录跳跃式地移动导致排序方法是不稳定的。</li>\n<li>只能用于顺序结构，不能用于链式结构。</li>\n<li>增量序列可以有各种取法，但应该使增量序列中的值没有除1之外的公因子，并且最后一个增量值必须等于1。</li>\n<li>记录总的比较次数和移动次数都比直接插人排序要少，n越大时，效果越明显。所以适合初始记录无序、n较大时的情况。</li>\n</ul>\n<hr>\n<h1 id=\"3、交换排序\"><a href=\"#3、交换排序\" class=\"headerlink\" title=\"3、交换排序\"></a>3、交换排序</h1><p>&#x3D;&#x3D;交换排序的基本思想是:两两比较待排序记录的关键字，一旦发现两个记录不满足次序要求时则进行交换，直到整个序列全部满足要求为止。&#x3D;&#x3D;</p>\n<h2 id=\"①-冒泡排序\"><a href=\"#①-冒泡排序\" class=\"headerlink\" title=\"①.冒泡排序\"></a>①.冒泡排序</h2><p>&#x3D;&#x3D;冒泡排序(Bubble Sort)是一种最简单的交换排序方法，它通过两两比较相邻记录的关键字，如果发生逆序，则进行交换，从而使关键字小的记录如气泡一般逐渐往上“漂浮”(左移)，或者使关键字大的记录如石块一样逐渐向下“坠落”(右移)。&#x3D;&#x3D;</p>\n<p>冒泡排序算法步骤：</p>\n<ol>\n<li>设待排序的记录存放在数组r[1…n]中。首先将第一个记录的关键字和第二个记录的关键字进行比较，若为逆序（即 L.r[1].key&gt;L.r[2].key)，则交换两个记录。然后比较第二个记录和第三个记录的关键字。依次类推，直至第n-1个记录和第n个记录的关键字进行过比较为止。上述过程称作第一趟起泡排序，其结果使得关键字最大的记录被安置到最后一个记录的位置上。</li>\n<li>然后进行第二趟起泡排序，对前n-1个记录进行同样操作，其结果是使关键字次大的记录被安置到第n-1个记录的位置上。</li>\n<li>重复上述比较和交换过程,第i趟是从L.r[1]到L.r[n-i+l]依次比较相邻两个记录的关键字，并在“逆序”时交换相邻记录，其结果是这n-i+1个记录中关键字最大的记录被交换到第n-i+1的位置上。直到在某一趟排序过程中没有进行过交换记录的操作,说明序列已全部达到排序要求，则完成排序。</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//冒泡排序</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\">  20          \t\t\t//顺序表的最大长度</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">otherinfo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序表的存储结构                         </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t         \t\t\t\t\t\t//存储空间的基地址</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\">  length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t//顺序表长度</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//顺序表类型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">BubbleSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //对顺序表L做冒泡排序</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> m</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">flag</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ElemType t</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    m</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> flag</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> \t\t\t\t//flag用来标记某一趟排序是否发生交换</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">m</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)&amp;&amp;(</span><span style=\"color: #BABED8\">flag</span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        flag</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">           \t\t\t\t//flag置为0，如果本趟排序没有发生交换，则不会执行下一趟排序</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                flag</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//flag置为1，表示本趟排序发生了交换</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                t</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F07178\">t</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t//交换前后两个记录</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//if</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t//while</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t//BubbleSort</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据个数，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//输入个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入待排序的数据:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个数超过上限，不能超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">，请重新输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SqList L</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> ElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">BubbleSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">排序后的结果为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>例：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/cff96920c86745cab3025e0e04282aef.png#pic_center\"><br>冒泡排序特点：</p>\n<ol>\n<li>稳定排序。</li>\n<li>可用于链式存储结构。</li>\n<li>移动记录次数较多，算法平均时间性能比直接插人排序差。当初始记录无序，n较大时,此算法不宜采用。</li>\n</ol>\n<h2 id=\"②-快速排序\"><a href=\"#②-快速排序\" class=\"headerlink\" title=\"②.快速排序\"></a>②.快速排序</h2><p>&#x3D;&#x3D;快速排序（ Quick Sort〉是由冒泡排序改进而得的。在冒泡排序过程中，只对相邻的两个记录进行比较，因此每次交换两个相邻记录时只能消除一个逆序。如果能通过两个(不相邻)记录的一次交换，消除多个逆序，则会大大加快排序的速度。快速排序方法中的一次交换可能消除多个逆序。&#x3D;&#x3D;</p>\n<p>快速排序算法步骤：</p>\n<ol>\n<li>选择待排序表中的第一个记录作为枢轴,将枢轴记录暂存在r[0]的位置上.附设两个指针 low和high，初始时分别指向表的下界和上界（第一趟时，low&#x3D; 1; high&#x3D; L.length; ).</li>\n<li>从表的最右侧位置依次向左搜索，找到第一个关键字小于枢轴关键字pivotkey 的记录,将其移到low处。具体操作是:当low&lt;high时，若high所指记录的关键字大于等于pivotkey，则向左移动指针high(执行操作–high);否则将high所指记录移到low所指记录。</li>\n<li>然后再从表的最左侧位置,依次向右搜索找到第一个关键字大于pivotkey的记录和枢轴记录交换。具体操作是:当low&lt;high时，若low所指记录的关键字小于等于pivotkey，则向右移动指针low(执行操作++low);否则将low所指记录与枢轴记录交换。</li>\n<li>重复步骤②和③，直至 low与high相等为止。此时low或high 的位置即为枢轴在此趟排序中的最终位置，原表被分成两个子表。</li>\n</ol>\n<p>在上述过程中，记录的交换都是与枢轴之间发生，每次交换都要移动3次记录，可以先将枢轴记录暂存在r[0]的位置上，排序过程中只移动要与枢轴交换的记录，即只做r[low]或r[high]的单向移动，直至一趟排序结束后再将枢轴记录移至正确位置上。</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//快速排序</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\">  20          \t\t\t//顺序表的最大长度</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">otherinfo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序表的存储结构                         </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t         \t\t\t\t\t\t//存储空间的基地址</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\">  length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t//顺序表长度</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//顺序表类型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Partition</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //对顺序表L中的子表r[low..high]进行一趟排序，返回枢轴位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> pivotkey</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">                    \t//用子表的第一个记录做枢轴记录</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    pivotkey</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t   \t\t\t//枢轴记录关键字保存在pivotkey中</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t//从表的两端交替地向中间扫描</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F07178\">pivotkey</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//将比枢轴记录小的记录移到低端</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\">pivotkey</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//将比枢轴记录大的记录移到高端</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//while</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//枢轴记录到位</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\">  low</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//返回枢轴位置</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//Partition</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">QSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">\t//调用前置初值：low=1; high=L.length;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //对顺序表L中的子序列L.r[low..high]做快速排序</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> pivotloc</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t//长度大于1</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">       pivotloc</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">Partition</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\"> \t\t//将L.r[low..high]一分为二，pivotloc是枢轴位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">       </span><span style=\"color: #82AAFF\">QSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">pivotloc</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t//对左子表递归排序</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">       </span><span style=\"color: #82AAFF\">QSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">pivotloc</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">        \t//对右子表递归排序</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//QSort</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">QuickSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">   //对顺序表L做快速排序</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #82AAFF\">QSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//QuickSort</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                                </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据个数，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//输入个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入待排序的数据:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个数超过上限，不能超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">，请重新输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">void</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SqList L</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> ElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">QuickSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">排序后的结果为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>例：已知待排序记录的关键字序列为{49,38,65,97,76,13,27,49}，用快速排序法进行排序的过程。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/58c85a3720af40458bf0149a6b311992.png#pic_center\"></p>\n<p>例：<br><img src=\"https://img-blog.csdnimg.cn/6507df376bbd4bd09574cc81acb633c7.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/eaae2d0cc8d04862b1ad42954dc7e89e.png#pic_center\"></p>\n<p>快速排序特点：</p>\n<ol>\n<li>记录非顺次的移动导致排序方法是不稳定的。</li>\n<li>排序过程中需要定位表的下界和上界，所以适合用于顺序结构，很难用于链式结构。</li>\n<li>当n较大时，在平均情况下快速排序是所有内部排序方法中速度最快的一种，所以其适合初始记录无序、n较大时的情况。</li>\n</ol>\n<hr>\n<h1 id=\"4、选择排序\"><a href=\"#4、选择排序\" class=\"headerlink\" title=\"4、选择排序\"></a>4、选择排序</h1><p>&#x3D;&#x3D;选择排序的基本思想是:每一趟从待排序的记录中选出关键字最小的记录，按顺序放在已排序的记录序列的最后，直到全部排完为止。&#x3D;&#x3D;</p>\n<h2 id=\"①-简单选择排序\"><a href=\"#①-简单选择排序\" class=\"headerlink\" title=\"①.简单选择排序\"></a>①.简单选择排序</h2><p>&#x3D;&#x3D;简单选择排序也称作直接选择排序&#x3D;&#x3D;</p>\n<p>简单选择排序算法步骤：</p>\n<ol>\n<li>设待排序的记录存放在数组r[l…n]中。第一趟从r[1]开始，通过n-1次比较，从n个记录中选出关键字最小的记录，记为r[k，交换r[1]和r[k]。</li>\n<li>第二趟从r[2]开始,通过n-2次比较,从n-l个记录中选出关键字最小的记录，记为r[k],交换r[2]和r[k]。</li>\n<li>依次类推，第i趟从r[i]开始，通过n-i次比较，从n-i+tl个记录中选出关键字最小的记录，记为r[k]，交换r[i]和r[k]。</li>\n<li>经过n-1趟，排序完成。</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//简单选择排序</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\">  20          \t\t\t\t\t\t//顺序表的最大长度</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">otherinfo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序表的存储结构                         </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t         \t\t\t\t\t\t//存储空间的基地址</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\">  length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t//顺序表长度</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//顺序表类型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">SelectSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">   //对顺序表L做简单选择排序</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ElemType t</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">  \t\t\t\t\t\t\t\t\t\t\t\t//在L.r[i..L.length] 中选择关键字最小的记录</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        k</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">                 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\">  k</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t//k指向此趟排序中关键字最小的记录</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\">t</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F07178\">t</span><span style=\"color: #89DDFF\">;&#125;</span><span style=\"color: #676E95; font-style: italic\"> //交换r[i]与r[k]        </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">     </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t//for  </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t\t// SelectSort</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                                </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据个数，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//输入个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入待排序的数据:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个数超过上限，不能超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">，请重新输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SqList L</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> ElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">SelectSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">排序后的结果为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>例：已知待排序记录的关键字序列为{ 49,38,65,97,49,13,27,76}，给出用简单选择排序法进行排序的过程。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/93c3ca3e120743aeaa5dc6c8db837bdf.png#pic_center\"><br>简单选择排序特点：</p>\n<ol>\n<li>就选择排序方法本身来讲，它是一种稳定的排序方法，但例子所表现出来的现象是不稳定的，这是因为上述实现选择排序的算法采用“交换记录”的策略所造成的，改变这个策略，可以写出不产生“不稳定现象”的选择排序算法。</li>\n<li>可用于链式存储结构。</li>\n<li>移动记录次数较少，当每一记录占用的空间较多时，此方法比直接插人排序快。</li>\n</ol>\n<h2 id=\"②-树形选择排序\"><a href=\"#②-树形选择排序\" class=\"headerlink\" title=\"②.树形选择排序\"></a>②.树形选择排序</h2><p>&#x3D;&#x3D;树形选择排序(Tree Selection Sort):又称锦标赛排序，是一种按照锦标赛的思想进行选择排序的方法。借助有n个叶子结点的完全二叉树，两两比较选最小。这个过程可用一颗有n个叶子结点的完全二叉树表示。&#x3D;&#x3D;</p>\n<p><img src=\"https://img-blog.csdnimg.cn/b52619103f484db5a5df28e75db11fc1.png#pic_center\"></p>\n<h2 id=\"③-堆排序\"><a href=\"#③-堆排序\" class=\"headerlink\" title=\"③.堆排序\"></a>③.堆排序</h2><p>&#x3D;&#x3D;堆排序（Heap Sort）是一种树形选择排序，在排序过程中，将待排序的记录r[1..n]看成是一棵完全二叉树的顺序存储结构，利用完全二叉树中双亲结点和孩子结点之间的内在关系，在当前无序的序列中选择关键字最大（或最小)的记录。&#x3D;&#x3D;</p>\n<p><strong>堆的定义：</strong></p>\n<p>n个元素的序列{k<del>1</del>,k<del>2</del>,…,k<del>n</del>}称之为堆，当且仅当满足以下条件时:</p>\n<ol>\n<li><strong>k<del>i</del>≥k<del>2i</del>且k<del>i</del>≥k<del>2i+1</del>(大顶堆)</strong></li>\n<li><strong>或k<del>i</del>≤k<del>2i</del>且 k<del>i</del>≤k<del>2i+1</del>(小顶堆)</strong></li>\n</ol>\n<p><strong>若将和此序列对应的一维数组(即以一维数组做此序列的存储结构)看成是一个完全二叉树，则堆实质上是满足如下性质的完全二叉树:树中所有非终端结点的值均不大于(或不小于)其左、右孩子结点的值。</strong><br><img src=\"https://img-blog.csdnimg.cn/018461e9baa647388a5a89d8f4670ca0.png#pic_center\"></p>\n<ol>\n<li>按堆的定义将待排序序列r[ 1..n]调整为大根堆（这个过程称为建初堆)，交换r[1]和r[n],则r[n]为关键字最大的记录。</li>\n<li>将r[ 1..n-1]重新调整为堆,交换r[1]和r[n-1]，则r[n-1]为关键字次大的记录。</li>\n<li>循环n-1次，直到交换了r[1]和r[2]为止，得到了一个非递减的有序序列r[ 1..n]。</li>\n</ol>\n<p><strong>调整堆</strong></p>\n<p>先看一个例子，图（ a)是个堆，将堆顶元素97和堆中最后–个元素38交换后，如图( b)所示。由于此时除根结点外，其余结点均满足堆的性质，由此仅需自上至下进行一条路径上的结点调整即可。首先以堆顶元素38和其左、右子树根结点的值进行比较，由于左子树根结点的值大于右子树根结点的值且大于根结点的值，则将38和76交换;由于38替代了76之后破坏了左子树的“堆”，则需进行和上述相同的调整，直至叶子结点，调整后的状态如图( c )所示。重复上述过程，将堆顶元素76和堆中最后一个元素27交换且调整，得到如图( d）所示新的堆。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/daf88abbbb834934ab5aa4e6f5942961.png#pic_center\"></p>\n<p>上述过程就像过筛子一样，把较小的关键字逐层筛下去，而将较大的关键字逐层选上来。因此，称此方法为“筛选法”。</p>\n<p>筛选法调整堆：<br>从r[2s]和r[2s+I]中选出关键字较大者，假设r[2s]的关键字较大，比较r[s]和r[2s]的关键字。</p>\n<ol>\n<li>若r[s].key&gt; &#x3D;r[2s].key，说明以r[s]为根的子树已经是堆，不必做任何调整。</li>\n<li>若r[s].key&lt;r[2s].key，交换r[s]和r[2s]。交换后，以r[2s+I]为根的子树仍是堆,如果以r[2s]为根的子树不是堆，则重复上述过程，将以r[2s]为根的子树调整为堆，直至进行到叶子结点为止。</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//筛选法调整堆</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\">  20          \t\t\t\t\t\t//顺序表的最大长度</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">otherinfo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序表的存储结构                         </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t         \t\t\t\t\t\t//存储空间的基地址</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\">  length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t//顺序表长度</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//顺序表类型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">HeapAdjust</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">m</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">   //假设r[s+1..m]已经是堆，将r[s..m]调整为以r[s]为根的大根堆</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ElemType rc</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    rc</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">m</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">*=</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t//沿key较大的孩子结点向下筛选</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t//j为key较大的记录的下标</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rc</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">      \t\t\t//rc应插入在位置s上</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #F07178\"> s</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">rc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                          \t\t\t//插入</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t\t//HeapAdjust</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                                </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据个数，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//输入个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入待调整的数据:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个数超过上限，不能超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">，请重新输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SqList L</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> ElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">HeapAdjust</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">调整后的结果为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>建初堆</strong></p>\n<p>要将一个无序序列调整为堆，就必须将其所对应的完全二叉树中以每一结点为根的子树都调整为堆。显然，只有一个结点的树必是堆，而在完全二叉树中，所有序号大于[n&#x2F;2]的结点都是叶子,因此以这些结点为根的子树均已是堆。这样，只需利用筛选法,从最后一个分支结点|n&#x2F;2]开始，依次将序号为|n&#x2F;2]、[n&#x2F;2]-1…、1的结点作为根的子树都调整为堆即可。<br>对于无序序列r[1…n]，从i&#x3D;n&#x2F;2开始，反复调用筛选法HeapAdjust (L,in)，依次将以r团],r[i-1],…,r[1]为根的子树调整为堆。</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//建初堆</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\">  20          \t\t\t\t\t\t//顺序表的最大长度</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">otherinfo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序表的存储结构                         </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t         \t\t\t\t\t\t//存储空间的基地址</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\">  length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t//顺序表长度</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//顺序表类型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//用算法8.7 筛选法调整堆</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">HeapAdjust</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">m</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">   //假设r[s+1..m]已经是堆，将r[s..m]调整为以r[s]为根的大根堆</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ElemType rc</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    rc</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">m</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">*=</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t//沿key较大的孩子结点向下筛选</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t//j为key较大的记录的下标</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rc</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">      \t\t\t//rc应插入在位置s上</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #F07178\"> s</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">rc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                          \t\t\t//插入</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t\t//HeapAdjust</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                                </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据个数，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//输入个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个数超过上限，不能超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">，请重新输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreatHeap</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //把无序序列L.r[1..n]建成大根堆</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    n</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;--</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">       \t\t\t\t\t//反复调用HeapAdjust </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">HeapAdjust</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t//CreatHeap</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SqList L</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> ElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreatHeap</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">建立成堆的序列为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>例：</p>\n<p>已知无序序列为{49,38,65,97,76,13,27,49}，用“筛选法”将其调整为一个大根堆,给出建堆的过程。<br><img src=\"https://img-blog.csdnimg.cn/7ca21e565186411080ededaa34e016e6.png#pic_center\"><br>堆排序算法的实现：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//排序</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\">  20          \t\t\t\t\t\t//顺序表的最大长度</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">otherinfo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序表的存储结构                         </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t         \t\t\t\t\t\t//存储空间的基地址</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\">  length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">            \t\t\t\t\t\t//顺序表长度</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//顺序表类型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//用算法8.7 筛选法调整堆</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">HeapAdjust</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">m</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">   //假设r[s+1..m]已经是堆，将r[s..m]调整为以r[s]为根的大根堆</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ElemType rc</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    rc</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">m</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">*=</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t//沿key较大的孩子结点向下筛选</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">m</span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t//j为key较大的记录的下标</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rc</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">      \t\t\t//rc应插入在位置s上</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">s</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #F07178\"> s</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">rc</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                          \t\t\t//插入</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">                                                    //HeapAdjust\t\t\t\t\t\t\t\t</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据个数，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//输入个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入待排序的数据:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个数超过上限，不能超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">，请重新输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//用算法8.8 建初堆</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CreatHeap</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //把无序序列L.r[1..n]建成大根堆</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    n</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;--</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">       \t\t\t\t\t//反复调用HeapAdjust </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">HeapAdjust</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t\t//CreatHeap</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">HeapSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //对顺序表L进行堆排序 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ElemType x</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">CreatHeap</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">              \t\t\t\t\t//把无序序列L.r[1..L.length]建成大根堆 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;--</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        x</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">               \t\t\t\t//将堆顶记录和当前未经排序子序列L.r[1..i]中最后一个记录互换 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #F07178\">            </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F07178\">x</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">HeapAdjust</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//将L.r[1..i-1]重新调整为大根堆 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">   </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//HeapSort</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SqList L</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> ElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">HeapSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">排序后的结果为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>例：对建好的大根堆进行排序<br><img src=\"https://img-blog.csdnimg.cn/344e6939086a45e2b80f5378026310e9.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/e1e22b8f1e524fc9af2412b700a1eb1f.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/ebb3ec28a2484962aa9556efd2b03e6b.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/390de5d62eb345d1903e8b97e1d4a350.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/eb0d76dc6b6a402497fddca3c63f5565.png#pic_center\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/85619ae2c5ac433b85a288fc00c23d0d.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/a3752b18b27f4a83b4ed28bcbc9c23a1.png#pic_center\"></p>\n<p>堆排序特点：</p>\n<ol>\n<li>是不稳定排序。</li>\n<li>只能用于顺序结构，不能用于链式结构。</li>\n<li>初始建堆所需的比较次数较多，因此记录数较少时不宜采用。堆排序在最坏情况下时间复杂度为O(nlog<del>2</del>n)，相对于快速排序最坏情况下的O(n^2^)而言是一个优点，当记录较多时较为高效。</li>\n</ol>\n<hr>\n<h1 id=\"5、归并排序\"><a href=\"#5、归并排序\" class=\"headerlink\" title=\"5、归并排序\"></a>5、归并排序</h1><p>&#x3D;&#x3D;归并排序(Merging Sort)就是将两个或两个以上的有序表合并成一个有序表的过程。将两个有序表合并成一个有序表的过程称为⒉-路归并，2-路归并最为简单和常用。下面以2-路归并为例，介绍归并排序算法。&#x3D;&#x3D;</p>\n<p>归并排序算法的思想是:</p>\n<p>假设初始序列含有n个记录，则可看成是n个有序的子序列，每个子序列的长度为1，然后两两归并，得到⌈n&#x2F;2⌉ 个长度为2或1的有序子序列;再两两归并，……，如此重复、直至得到一个长度为n的有序序列为止。</p>\n<p>归并排序算法步骤：</p>\n<p>2-路归并排序将R[low..high]中的记录归并排序后放入T[low.high]中。当序列长度等于1时，递归结束，否则:</p>\n<ol>\n<li>将当前序列一分为二，求出分裂点mid &#x3D;⌊(low+high)&#x2F;2⌋;</li>\n<li>对子序列R[low..mid]递归，进行归并排序，结果放入S[low..mid]中;</li>\n<li>对子序列R[mid + 1..high]递归，进行归并排序，结果放入S[mid + 1..high]中;</li>\n<li>调用算法Merge，将有序的两个子序列S[low..mid]和 S[mid +1..high]归并为一个有序的序列T[low..high]。</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//归并排序</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">MAXSIZE</span><span style=\"color: #BABED8\">  20          \t\t\t\t\t\t//顺序表的最大长度</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">otherinfo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">RedType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    RedType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> length</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                                                                        </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据个数，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t\t\t\t\t//输入个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入待排序的数据:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个数超过上限，不能超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">MAXSIZE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">，请重新输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//相邻两个有序子序列的归并</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Merge</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">RedType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">R</span><span style=\"color: #89DDFF\">[],</span><span style=\"color: #FFCB6B\">RedType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">T</span><span style=\"color: #89DDFF\">[],</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">mid</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">   //将有序表R[low..mid]和R[mid+1..high]归并为有序表T[low..high] </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">mid</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">mid</span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\">                 \t</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //将R中记录由小到大地并入T中 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">T</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">++]=</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">++];</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">T</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">++]=</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">++];</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">mid</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">                            \t\t//将剩余的R[low..mid]复制到T中 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        T</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">++]=</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++];</span><span style=\"color: #BABED8\">                 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">high</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #676E95; font-style: italic\">                           \t\t//将剩余的R[j.high]复制到T中 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        T</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">++]=</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">++];</span><span style=\"color: #BABED8\">                       </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//Merge </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">RedType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">R</span><span style=\"color: #89DDFF\">[],</span><span style=\"color: #FFCB6B\">RedType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">T</span><span style=\"color: #89DDFF\">[],</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //R[low..high]归并排序后放入T[low..high]中 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> mid</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    RedType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> RedType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\">high</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> T</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">else</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        mid</span><span style=\"color: #89DDFF\">=(</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">)/</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">       \t\t\t\t\t//将当前序列一分为二，求出分裂点mid </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">MSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">R</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t//对子序列R[low..mid] 递归归并排序，结果放入S[low..mid] </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">MSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">R</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//对子序列R[mid+1..high] 递归归并排序，结果放入S[mid+1..high] </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">Merge</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">S</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">T</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//将S[low..mid]和S [mid+1..high]归并到T[low..high]  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//else </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">// MSort </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MergeSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //对顺序表L做归并排序 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">MSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//MergeSort </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SqList R</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> RedType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXSIZE</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">MergeSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">排序后的结果为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>例：已知待排序记录的关键字序列为{49,38,65,97,76,13,27}，给出用2-路归并排序法进行排序的过程。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/18078d22eea04f9aa65ef34340df9249.png#pic_center\"></p>\n<p>归并排序特点：</p>\n<ol>\n<li>是稳定排序。</li>\n<li>可用于链式结构，且不需要附加存储空间，但递归实现时仍需要开辟相应的递归工作栈。</li>\n</ol>\n<hr>\n<h1 id=\"6、基数排序\"><a href=\"#6、基数排序\" class=\"headerlink\" title=\"6、基数排序\"></a>6、基数排序</h1><p>&#x3D;&#x3D;借助多关键字排序的思想对单逻辑关键字进行排序。即:用关键字不同的位值进行排序。&#x3D;&#x3D;</p>\n<p><img src=\"https://img-blog.csdnimg.cn/6cb0c211a061420e8ce77a47bf528bfc.png#pic_center\"><br><strong>“多关键字”排序</strong></p>\n<p>例:对一副扑克牌该如何排序?<br>若规定花色和面值的顺序关系为:<br>花色:<img src=\"https://img-blog.csdnimg.cn/d29417e9df194fffb2e50d72ea3f35f9.png#pic_center\" alt=\"◆&lt;&lt;&lt;\"><br>面值:2&lt;3&lt;4&lt;5&lt;6&lt;7&lt;8&lt;9&lt;10&lt;J&lt;Q&lt;K&lt;A<br>则可以先按花色排序，花色相同者再按面值排序;也可以先按面值排序，面值相同者再按花色排序。</p>\n<p><strong>多关键字排序的实现方法通常有两种:</strong></p>\n<p>最高位优先法MSD (Most Significant Digit first)<br>最低位优先法LSD (Least Significant Digit first)</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//基数排序</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">iostream.h</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">string.h</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">stdlib.h</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">math.h</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAXNUM_KEY</span><span style=\"color: #BABED8\"> 8                \t//关键字项数的最大值 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">RADIX</span><span style=\"color: #BABED8\"> 10                        //关键字基数，此时是十进制整数的基数 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#define</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAX_SPACE</span><span style=\"color: #BABED8\"> 10000 </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> KeysType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//定义关键字类型为字符型</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> InfoType</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//定义其它数据项的类型</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    KeysType </span><span style=\"color: #BABED8\">keys</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MAXNUM_KEY</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">          //关键字 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    InfoType otheritems</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">               \t//其他数据项 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> next</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SLCell</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t    \t//静态链表的结点类型 </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    SLCell </span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">MAX_SPACE</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t\t        //静态链表的可利用空间，r[0]为头结点 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> keynum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t         \t//记录的当前关键字个数 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> recnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t     \t//静态链表的当前长度 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SLList</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t\t    //静态链表类型 </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> ArrType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">RADIX</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">\t          \t//指针数组类型</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">InitList</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SLList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">*</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //初始化静态链表L（把数组D中的数据存于L中）</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> c</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXNUM_KEY</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #BABED8\">c1</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">MAXNUM_KEY</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">max</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t\t//max为关键字的最大值 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    max</span><span style=\"color: #89DDFF\">=-</span><span style=\"color: #F78C6C\">10000</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入数据个数，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">MAX_SPACE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">MAX_SPACE</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">您输入的个数超过上限，请重新输入，不超过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">MAX_SPACE</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个。</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">个排排序的数据：</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">max</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            max</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">(*</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">keynum</span><span style=\"color: #89DDFF\">=(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">)(</span><span style=\"color: #82AAFF\">ceil</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">log10</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">max</span><span style=\"color: #89DDFF\">)));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">(*</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">recnum</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">itoa</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">D</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #F07178\">c</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//将10进制整型转化为字符型,存入c </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">strlen</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">c</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">&lt;(*</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">keynum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #676E95; font-style: italic\">  //若c的长度&lt;max的位数,在c前补&#39;0&#39; </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">           </span><span style=\"color: #82AAFF\">strcpy</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">c1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">0</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">           </span><span style=\"color: #82AAFF\">strcat</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">c1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">c</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">           </span><span style=\"color: #82AAFF\">strcpy</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">c</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">c1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">&lt;(*</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">keynum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">(*</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">keys</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">c</span><span style=\"color: #89DDFF\">[(*</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">keynum</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ord</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">c</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\">\t</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //返回k的映射(个位整数)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> c</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">0</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Distribute</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SLCell</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">*</span><span style=\"color: #BABED8; font-style: italic\">r</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFCB6B\">ArrType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">f</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFCB6B\">ArrType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //静态链表L的r域中记录已按（keys[0], …, keys[i-1]）有序 </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //本算法按第i个关键字keys[i]建立RADIX个子表，使同一子表中记录的keys[i]相同。 </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //f[0..RADIX-1]和e[0..RADIX-1]分别指向各子表中第一个和最后一个记录</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">RADIX</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">  f</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">        \t//各子表初始化为空表 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">ord</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">keys</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]);</span><span style=\"color: #676E95; font-style: italic\">                //ord将记录中第i个关键字映射到[0..RADIX-1] </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(!</span><span style=\"color: #BABED8\">f</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #F07178\">  </span><span style=\"color: #BABED8\">f</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\">  </span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]].</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                          \t//将p所指的结点插入第j个子表中 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//Distribute </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">succ</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //求后继函数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Collect</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SLCell</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">*</span><span style=\"color: #BABED8; font-style: italic\">r</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFCB6B\">ArrType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">f</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFCB6B\">ArrType</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //本算法按keys[i]自小至大地将f[0..RADIX-1]所指各子表依次链接成一个链表 </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //e[0..RADIX-1]为各子表的尾指针</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;!</span><span style=\"color: #BABED8\">f</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">succ</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">));</span><span style=\"color: #676E95; font-style: italic\">  \t\t\t//找第一个非空子表，succ为求后继函数 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">f</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">   \t\t\t//r[0].next指向第一个非空子表中第一个结点 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">RADIX</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">succ</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">RADIX</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">&amp;&amp;!</span><span style=\"color: #BABED8\">f</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">succ</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">       \t//找下一个非空子表 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">f</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">t</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">f</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #F07178\">t</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];&#125;</span><span style=\"color: #676E95; font-style: italic\">\t\t        \t//链接两个非空子表 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//while </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">                \t\t//t指向最后一个非空子表中的最后一个结点 </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//Collect </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">RadixSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SLList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //L是采用静态链表表示的顺序表 </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //对L做基数排序，使得L成为按关键字自小到大的有序静态链表，L.r[0]为头结点</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ArrType f</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">recnum</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">  L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">recnum</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">next </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">             \t//将L改造为静态链表 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">keynum</span><span style=\"color: #89DDFF\">;++</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\">       \t</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">        //按最低位优先依次对各关键字进行分配和收集 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">Distribute</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">f</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">e</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t     \t//第i趟分配 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">Collect</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">f</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">e</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">\t\t\t\t\t//第i趟收集 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\">//for </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // RadixSort</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SLList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\">  </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //按数组序号输出静态链表</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">recnum</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">keynum</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">--)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">keys</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #F07178\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SLList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">adr</span><span style=\"color: #89DDFF\">[])</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //求得adr[1..L.length]，adr[i]为静态链表L的第i个最小记录的序号</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">p</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">adr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">++]=</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        p</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Rearrange</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SLList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">*</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">adr</span><span style=\"color: #89DDFF\">[])</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //adr给出静态链表L的有序次序，即L.r[adr[i]]是第i小的记录。</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    //本算法按adr重排L.r，使其有序。算法10.18(L的类型有变) </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">k</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">adr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]!=</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">(*</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]=(*</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\"> //暂存记录(*L).r[i]</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">adr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]!=</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">            //调整(*L).r[adr[j]]的记录到位直到adr[j]=i为止</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            k</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">adr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF\">(*</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]=(*</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">adr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\"> //记录按序到位 </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">(*</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]=(*</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">adr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SLList l</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">adr</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">InitList</span><span style=\"color: #89DDFF\">(&amp;</span><span style=\"color: #BABED8\">l</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">RadixSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">l</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    adr</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">l</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">recnum</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">adr</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Rearrange</span><span style=\"color: #89DDFF\">(&amp;</span><span style=\"color: #BABED8\">l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">adr</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">排序后(重排记录):</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">l</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span></span></code></pre></div><hr>\n<h1 id=\"7、总结\"><a href=\"#7、总结\" class=\"headerlink\" title=\"7、总结\"></a>7、总结</h1><p><img src=\"https://img-blog.csdnimg.cn/47a2f527c09e45c9afe9628f6d1887ec.png#pic_center\"></p>\n<hr>\n<h1 id=\"8、例题与应用\"><a href=\"#8、例题与应用\" class=\"headerlink\" title=\"8、例题与应用\"></a>8、例题与应用</h1><p><img src=\"https://img-blog.csdnimg.cn/4ff744997e5546f4a4975b57326b4cc4.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/49eeac052a5244649c913e497316e205.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/d707475f741c47eea755678f1f1c7770.png#pic_center\"></p>\n<p>实现快速排序</p>\n<p><img src=\"https://img-blog.csdnimg.cn/1d5f922fd5de44e481702999380acf4e.png#pic_center\"></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">bits/stdc++.h</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">char</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">otherinfo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">ElemType</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//顺序表的存储结构                         </span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">typedef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">struct</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    ElemType </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\">  length</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//对顺序表的子表进行一趟排序，返回枢轴位置 </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Division</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> pivotkey</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    pivotkey</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F07178\">pivotkey</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\">pivotkey</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\">  low</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//对顺序表做快速排序 </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">QSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\">  </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> pivotloc</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">high</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\">\t\t\t\t\t\t\t\t\t\t</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">       pivotloc</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">Division</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\"> \t\t</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">       </span><span style=\"color: #82AAFF\">QSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">low</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">pivotloc</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #F07178\">\t\t\t</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">       </span><span style=\"color: #82AAFF\">QSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">pivotloc</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">high</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//进行快速排序 </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">QuickSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #82AAFF\">QSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//输入待排序的数据\t\t\t\t\t\t\t\t</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\t</span><span style=\"color: #C3E88D\">源码实现</span><span style=\"color: #BABED8\">\\t</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入待排序的10个数据:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//输出排序好的数据 </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">SqList</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">L</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">].</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">void</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SqList L</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">=new</span><span style=\"color: #BABED8\"> ElemType</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">11</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    L</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Create_Sq</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">QuickSort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">排序后的结果为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">Show</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><img src=\"https://img-blog.csdnimg.cn/f4fd65084654414ea42ade4ad9e98135.png#pic_center\"></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">#include</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">bits/stdc++.h</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">using</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">namespace</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">std</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">void</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> L</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\t</span><span style=\"color: #C3E88D\">STL实现</span><span style=\"color: #BABED8\">\\t</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入待排序的10个数据:</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cin</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">排序后的结果为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">endl</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        cout</span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\">L</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]&lt;&lt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span></span></code></pre></div>","feature":true,"text":"排序是计算机内经常进行的一种操作，其目的是将一组“无序”的记录序列调整为“有序”的记录序列。排序的目的是为了便于查找。...","permalink":"/post/数据结构（C语言版）-- 排序笔记","photos":[],"count_time":{"symbolsCount":"33k","symbolsTime":"30 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">1、排序的基本概念</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">2、插入排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A0-%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">①.直接插入排序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A1-%E6%8A%98%E5%8D%8A%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">②.折半插入排序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A2-%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">③.希尔排序</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3%E3%80%81%E4%BA%A4%E6%8D%A2%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">3、交换排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A0-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">①.冒泡排序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A1-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">②.快速排序</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4%E3%80%81%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">4、选择排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A0-%E7%AE%80%E5%8D%95%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">①.简单选择排序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A1-%E6%A0%91%E5%BD%A2%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">②.树形选择排序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%91%A2-%E5%A0%86%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">③.堆排序</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">5、归并排序</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6%E3%80%81%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">6、基数排序</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#7%E3%80%81%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">7、总结</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#8%E3%80%81%E4%BE%8B%E9%A2%98%E4%B8%8E%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">8、例题与应用</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Java程序设计--Java入门","uid":"1239464e856eda74e8dd930a35c271b7","slug":"Java程序设计 -- Java入门（一）","date":"2022-03-15T06:57:34.000Z","updated":"2025-07-14T15:12:20.458Z","comments":true,"path":"api/articles/Java程序设计 -- Java入门（一）.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/39b97c220e4c47a8a19e408b6dba7804.png","text":"Java是一种广泛使用的面向对象编程语言，具有跨平台、可移植性和安全性等特点。本文将介绍Java的概述，包括其历史、特点和应用领域。我们将给出一个简单的热门程序HelloWorld的示例，并解释其中的代码逻辑。此外，我们还将指导读者如何下载、安装和配置Java开发环境，特别是使用IDEA进行Java开发。...","permalink":"/post/Java程序设计 -- Java入门（一）","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"后端","slug":"后端","count":22,"path":"api/categories/后端.json"}],"tags":[{"name":"Java","slug":"Java","count":22,"path":"api/tags/Java.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true},"next_post":{"title":"查找","uid":"c6ad7ccbed505349c9093570c864bff1","slug":"数据结构（C语言版）-- 查找笔记","date":"2022-02-20T13:03:12.000Z","updated":"2025-07-14T15:12:20.469Z","comments":true,"path":"api/articles/数据结构（C语言版）-- 查找笔记.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/db70ceb9e22c4eebb7eb82117f4787b5.png","text":"查找是数据处理中经常使用的一种操作。本章主要介绍了对查找表的查找，查找表实际上仅仅是一个集合，为了提高查找效率，将查找表组织成不同的数据结构，主要包括3种不同结构的查找表:线性表、树表和散列表。...","permalink":"/post/数据结构（C语言版）-- 查找笔记","photos":[],"count_time":{"symbolsCount":"27k","symbolsTime":"25 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}