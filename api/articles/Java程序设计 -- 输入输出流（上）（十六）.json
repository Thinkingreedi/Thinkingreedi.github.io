{"title":"Java程序设计--输入输出流(上)","uid":"b7639bc085f01665e0869b23fc927b0f","slug":"Java程序设计 -- 输入输出流（上）（十六）","date":"2022-04-02T01:35:33.000Z","updated":"2025-07-14T15:12:20.461Z","comments":true,"path":"api/articles/Java程序设计 -- 输入输出流（上）（十六）.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/39b97c220e4c47a8a19e408b6dba7804.png","content":"<hr>\n<h1 id=\"1、字符集\"><a href=\"#1、字符集\" class=\"headerlink\" title=\"1、字符集\"></a>1、字符集</h1><h2 id=\"1-1-常见字符集介绍\"><a href=\"#1-1-常见字符集介绍\" class=\"headerlink\" title=\"1.1 常见字符集介绍\"></a>1.1 常见字符集介绍</h2><p><strong>字符集基础知识:</strong></p>\n<p>计算机底层不可以直接存储字符的。计算机中底层只能存储二进制(0、1)二进制是可以转换成十进制的。</p>\n<p>计算机底层可以表示十进制编号。计算机可以给人类字符进行编号存储，这套编号规则就是字符集。</p>\n<p><strong>ASCII字符集:</strong></p>\n<ul>\n<li>ASCII(American Standard Code for Information Interchange，美国信息交换标准代码):包括了数字、英文、符号。</li>\n<li>&#x3D;&#x3D;ASCII使用1个字节存储一个字符，一个字节是8位&#x3D;&#x3D;，总共可以表示128个字符信息，对于英文，数字来说是够用的。</li>\n</ul>\n<p><strong>GBK:</strong>   </p>\n<ul>\n<li>window系统默认的码表。兼容ASCII码表，也包含了几万个汉字，并支持繁体汉字以及部分日韩文字。</li>\n<li>注意:GBK是中国的码表，&#x3D;&#x3D;一个中文以两个字节的形式存储&#x3D;&#x3D;。但不包含世界上所有国家的文字。</li>\n</ul>\n<p><strong>Unicode码表:</strong></p>\n<ul>\n<li>unicode (又称统一码、万国码、单一码）是计算机科学领域里的一项业界字符编码标准。容纳世界上大多数国家的所有常见文字和符号，&#x3D;&#x3D;一个中文一般以三个字节的形式存储&#x3D;&#x3D; 。</li>\n<li>由于Unicode会先通过UTF-8，UTF-16，以及UTF-32的编码成二进制后再存储到计算机，其中最为常见的就是UTF-8。</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">UnsupportedEncodingException</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Arrays</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    学会自己进行文字的编码和解码，为以后可能用到的场景做准备。</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Test</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">throws</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 1、编码：把文字转换成字节（使用指定的编码）</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abc我爱你中国</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// byte[] bytes = name.getBytes(); // 以当前代码默认字符集进行编码 （UTF-8）</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> bytes </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> name</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBytes</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">GBK</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 指定编码</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">bytes</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">bytes</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 2、解码：把字节转换成对应的中文形式（编码前 和 编码后的字符集必须一致，否则乱码 ）</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// String rs = new String(bytes); // 默认的UTF-8</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> rs </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">String</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">bytes</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">GBK</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 指定GBK解码</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rs</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"1-2-字符集的编码、解码操作\"><a href=\"#1-2-字符集的编码、解码操作\" class=\"headerlink\" title=\"1.2 字符集的编码、解码操作\"></a>1.2 字符集的编码、解码操作</h2><p><strong>String编码</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法名称</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">byte[ ] getBytes()</td>\n<td align=\"center\">使用平台的默认字符集将该String编码为一系列字节，将结果存储到新的字节数组中</td>\n</tr>\n<tr>\n<td align=\"center\">byte[ ] getBytes(String charsetName)</td>\n<td align=\"center\">使用指定的字符集将该String编码为一系列字节，将结果存储到新的字节数组中</td>\n</tr>\n</tbody></table>\n<p><strong>String解码</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">构造器</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">String(byte[ ] bytes)</td>\n<td align=\"center\">通过使用平台的默认字符集解码指定的字节数组来构造新的String</td>\n</tr>\n<tr>\n<td align=\"center\">String(byte[ ] bytes，string charsetName)</td>\n<td align=\"center\">通过指定的字符集解码指定的字节数组来构造新的String</td>\n</tr>\n</tbody></table>\n<hr>\n<h1 id=\"2、IO流概述\"><a href=\"#2、IO流概述\" class=\"headerlink\" title=\"2、IO流概述\"></a>2、IO流概述</h1><p><strong>IO也称为输入、输出流，就是用来读写数据的。</strong></p>\n<ul>\n<li>&#x3D;&#x3D;I表示intput，是数据从硬盘文件读入到内存的过程，称之输入，负责读。&#x3D;&#x3D;</li>\n<li>&#x3D;&#x3D;O表示output，是内存程序的数据从内存到写出到硬盘文件的过程，称之输出，负责写。&#x3D;&#x3D;</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/edb07e88c9074b1983db8b42dce8dcf9.png#pic_center\"><br><strong>IO流的分类</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/b0e184cfcf3a46f2ac07d4552d2fdd2e.png#pic_center\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/156fb262a1d44a8ea555c393115ad236.png#pic_center\"></p>\n<p><strong>总结流的四大类:</strong></p>\n<ul>\n<li><strong>字节输入流:</strong> 以内存为基准，来自磁盘文件&#x2F;网络中的数据以字节的形式读入到内存中去的流称为字节输入流。</li>\n<li><strong>字节输出流:</strong> 以内存为基准，把内存中的数据以字节写出到磁盘文件或者网络中去的流称为字节输出流。</li>\n<li><strong>字符输入流:</strong> 以内存为基准，来自磁盘文件&#x2F;网络中的数据以字符的形式读入到内存中去的流称为字符输入流。</li>\n<li><strong>字符输出流:</strong> 以内存为基准，把内存中的数据以字符写出到磁盘文件或者网络介质中去的流称为字符输出流。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/099ded96d4ee400b88f4209d226fba89.png\"></p>\n<hr>\n<h1 id=\"3、字节流的使用\"><a href=\"#3、字节流的使用\" class=\"headerlink\" title=\"3、字节流的使用\"></a>3、字节流的使用</h1><h2 id=\"3-1-文字字节输入流\"><a href=\"#3-1-文字字节输入流\" class=\"headerlink\" title=\"3.1 文字字节输入流\"></a>3.1 文字字节输入流</h2><p><img src=\"https://img-blog.csdnimg.cn/3411453d073444049a6e158435553ec1.png\"><br><img src=\"https://img-blog.csdnimg.cn/f5b5e0a04b73439490beac326c0f16d6.png\"></p>\n<p>文件字节输入流:FilelnputStream</p>\n<p>作用:以内存为基准，把磁盘文件中的数据以字节的形式读取到内存中去。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">构造器</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public FileInputStream(File file)创建字节</td>\n<td align=\"center\">输入流管道与源文件对象接通</td>\n</tr>\n<tr>\n<td align=\"center\">public FileInputStream(String pathname)</td>\n<td align=\"center\">创建字节输入流管道与源文件路径接通</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法名称</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public int read()</td>\n<td align=\"center\">每次读取一个字节返回，如果字节已经没有可读的返回-1</td>\n</tr>\n<tr>\n<td align=\"center\">public int read(byte[] buffer)</td>\n<td align=\"center\">每次读取一个字节数组返回，如果字节已经没有可读的返回-1</td>\n</tr>\n</tbody></table>\n<p><strong>读取一个字节，性能较慢，读取中文字符输出无法避免乱码问题。</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">File</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">FileInputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">InputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">FileInputStreamDemo01</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">throws</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 创建一个文件字节输入流管道与源文件接通。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">InputStream</span><span style=\"color: #BABED8\"> is </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileInputStream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file-io-app</span><span style=\"color: #BABED8\">\\\\</span><span style=\"color: #C3E88D\">src</span><span style=\"color: #BABED8\">\\\\</span><span style=\"color: #C3E88D\">data.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> b</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> is</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">read</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #C792EA\">char</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> b</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>读取一个字节数组读取性能得到了提升，读取中文字符输出无法避免乱码问题。</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">FileInputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">InputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">FileInputStreamDemo02</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">throws</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 创建一个文件字节输入流管道与源文件接通</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">InputStream</span><span style=\"color: #BABED8\"> is </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileInputStream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file-io-app/src/data02.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> buffer </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> len</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 记录每次读取的字节数。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">len </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> is</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">read</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// 读取多少倒出多少</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">String</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> len</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>为了实现使用字节输入流读取中文内容不乱码，定义一个与文件一样大的字节数组，一次性读取完文件的全部字节。如果文件过大，字节数组可能引起内存溢出。</strong></p>\n<p><strong>方式一</strong></p>\n<p>自己定义一个字节数组与文件的大小一样大，然后使用读取字节数组的方法，一次性读取完成。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法名称</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public int read(byte[] buffer)</td>\n<td align=\"center\">每次读取一个字节数组返回，如果字节已经没有可读的返回-1</td>\n</tr>\n</tbody></table>\n<p><strong>方式二</strong></p>\n<p>官方为字节输入流InputStream提供了如下API可以直接把文件的全部数据读取到一个字节数组中。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法名称</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public byte[]readAllBytes() throws IOException</td>\n<td align=\"center\">直接将当前字节输入流对应的文件对象的字节数据装到一个字节数组返回</td>\n</tr>\n</tbody></table>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">File</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">FileInputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">InputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">   使用文件字节输入流一次读完文件的全部字节。可以解决乱码问题。</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">FileInputStreamDemo03</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">throws</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">//创建一个文件字节输入流管道与源文件接通</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">File</span><span style=\"color: #BABED8\"> f </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">File</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file-io-app/src/data03.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">InputStream</span><span style=\"color: #BABED8\"> is </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileInputStream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">f</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 读取全部字节数组</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> buffer </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> is</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">readAllBytes</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">String</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"3-2-文件字节输出流\"><a href=\"#3-2-文件字节输出流\" class=\"headerlink\" title=\"3.2 文件字节输出流\"></a>3.2 文件字节输出流</h2><p><img src=\"https://img-blog.csdnimg.cn/a24e5bd826074c08b64bdbf413e7e991.png\"></p>\n<p>作用:以内存为基准，把内存中的数据以字节的形式写出到磁盘文件中去的流。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">构造器</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public FileoutputStream(File file)</td>\n<td align=\"center\">创建字节输出流管道与源文件对象接通</td>\n</tr>\n<tr>\n<td align=\"center\">public FileOutputStream(File file, boolean append)</td>\n<td align=\"center\">创建字节输出流管道与源文件对象接通，可追加数据</td>\n</tr>\n<tr>\n<td align=\"center\">public Fileoutputstream(String filepath)</td>\n<td align=\"center\">创建字节输出流管道与源文件路径接通</td>\n</tr>\n<tr>\n<td align=\"center\">public FileOutputstream(String filepath, boolean append)</td>\n<td align=\"center\">创建字节输出流管道与源文件路径接通，可追加数据</td>\n</tr>\n</tbody></table>\n<p><strong>文件字节输出流(FileOutputStream)写数据出去的API</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法名称</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public void write(int a)</td>\n<td align=\"center\">写一个字节出去</td>\n</tr>\n<tr>\n<td align=\"center\">public void write(byte[ ] buffer)</td>\n<td align=\"center\">写一个字节数组出去</td>\n</tr>\n<tr>\n<td align=\"center\">public void write(byte[ ] buffer , int pos , int len)</td>\n<td align=\"center\">写一个字节数组的一部分出去</td>\n</tr>\n</tbody></table>\n<p><strong>流的关闭与刷新</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">flush()</td>\n<td align=\"center\">刷新流，还可以继续写数据</td>\n</tr>\n<tr>\n<td align=\"center\">close()</td>\n<td align=\"center\">关闭流，释放资源，但是在关闭之前会先刷新流。一旦关闭，就不能再写数据</td>\n</tr>\n</tbody></table>\n<p><strong>字节输出流实现写出去的数据能换行：os.write(“\\r\\n” .getBytes())</strong></p>\n<p>让写出去的数据能成功生效：</p>\n<ul>\n<li>&#x3D;&#x3D;flush()刷新数据&#x3D;&#x3D;</li>\n<li>&#x3D;&#x3D;close()方法是关闭流，关闭包含刷新，关闭后流不可以继续使用了&#x3D;&#x3D;</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">File</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">FileNotFoundException</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">FileOutputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">OutputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">OutputStreamDemo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">throws</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 1、创建一个文件字节输出流管道与目标文件接通</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">OutputStream</span><span style=\"color: #BABED8\"> os </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileOutputStream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file-io-app/src/out04.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 追加数据管道</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//        OutputStream os = new FileOutputStream(&quot;file-io-app/src/out04.txt&quot;); // 先清空之前的数据，写新数据进入</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 2、写数据出去</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// a.public void write(int a):写一个字节出去</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">98</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\r\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBytes</span><span style=\"color: #89DDFF\">());</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 换行</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// os.write(&#39;徐&#39;); // [ooo]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// b.public void write(byte[] buffer):写一个字节数组出去。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> buffer </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">97</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">98</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">99</span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\r\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBytes</span><span style=\"color: #89DDFF\">());</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 换行</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> buffer2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">我是中国人</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBytes</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//        byte[] buffer2 = &quot;我是中国人&quot;.getBytes(&quot;GBK&quot;);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\r\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBytes</span><span style=\"color: #89DDFF\">());</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 换行</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// c. public void write(byte[] buffer , int pos , int len):写一个字节数组的一部分出去。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> buffer3 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">97</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">98</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">99</span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\r\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBytes</span><span style=\"color: #89DDFF\">());</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 换行</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// os.flush(); // 写数据必须，刷新数据 可以继续使用流</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 释放资源，包含了刷新的！关闭后流不可以使用了</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h2 id=\"3-3-文件拷贝\"><a href=\"#3-3-文件拷贝\" class=\"headerlink\" title=\"3.3 文件拷贝\"></a>3.3 文件拷贝</h2><p>需求:</p>\n<p>把某个视频复制到其他目录下的“b.avi”</p>\n<p>思路:</p>\n<ol>\n<li>根据数据源创建字节输入流对象</li>\n<li>根据目的地创建字节输出流对象</li>\n<li>读写数据，复制视频</li>\n<li>释放资源</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/9fcffa7b713b45d48e8f7c54ed5e1d29.png\"></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">FileInputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">FileOutputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">InputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">OutputStream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"> *   学会使用字节流完成文件的复制（支持一切文件类型的复制）</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">CopyDemo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// 1、创建一个字节输入流管道与原视频接通</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">InputStream</span><span style=\"color: #BABED8\"> is </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileInputStream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file-io-app/src/out04.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// 2、创建一个字节输出流管道与目标文件接通</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">OutputStream</span><span style=\"color: #BABED8\"> os </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileOutputStream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file-io-app/src/out05.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// 3、定义一个字节数组转移数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> buffer </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1024</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> len</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 记录每次读取的字节数。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">len </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> is</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">read</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> len</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">复制完成了！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// 4、关闭流。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            is</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            e</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">printStackTrace</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><hr>\n<h1 id=\"4、资源释放的方式\"><a href=\"#4、资源释放的方式\" class=\"headerlink\" title=\"4、资源释放的方式\"></a>4、资源释放的方式</h1><h2 id=\"4-1-try-catch-finally\"><a href=\"#4-1-try-catch-finally\" class=\"headerlink\" title=\"4.1 try-catch-finally\"></a>4.1 try-catch-finally</h2><ul>\n<li><strong>finally:在异常处理时提供finally块来执行所有清除操作，比如说IO流中的释放资源</strong></li>\n<li><strong>特点:被finally控制的语句最终一定会执行，除非JVM退出</strong></li>\n<li><strong>异常处理标准格式: try….catch…finally</strong></li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">FileOutputStream</span><span style=\"color: #BABED8\"> fos </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileOutputStream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">a.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fos</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">97</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fos</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">IOException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    e</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">printStackTrace</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #89DDFF; font-style: italic\">finally</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">*</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"> *   学会使用finally释放资源。</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">TryCatchFinallyDemo1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">InputStream</span><span style=\"color: #BABED8\"> is </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">OutputStream</span><span style=\"color: #BABED8\"> os </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// System.out.println(10/ 0);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// 1、创建一个字节输入流管道与原视频接通</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">             is </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileInputStream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file-io-app/src/out04.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// 2、创建一个字节输出流管道与目标文件接通</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">             os </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileOutputStream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file-io-app/src/out05.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// 3、定义一个字节数组转移数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> buffer </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1024</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> len</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 记录每次读取的字节数。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">len </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> is</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">read</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> len</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">复制完成了！</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">         </span><span style=\"color: #676E95; font-style: italic\">//   System.out.println( 10 / 0);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            e</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">printStackTrace</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">finally</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// 无论代码是正常结束，还是出现异常都要最后执行这里</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">========finally=========</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">                </span><span style=\"color: #676E95; font-style: italic\">// 4、关闭流。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">os</span><span style=\"color: #89DDFF\">!=null)</span><span style=\"color: #BABED8\">os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">IOException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                e</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">printStackTrace</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">is </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null)</span><span style=\"color: #BABED8\"> is</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">IOException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                e</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">printStackTrace</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">test</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">a</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">b</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> c </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> a </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\"> b</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> c</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            e</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">printStackTrace</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">111111</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 计算出现bug.</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #89DDFF; font-style: italic\">finally</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">--finally--</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// 哪怕上面有return语句执行，也必须先执行完这里才可以！</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// 开发中不建议在这里加return ，如果加了，返回的永远是这里的数据了，这样会出问题！</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"4-2-try-with-resource\"><a href=\"#4-2-try-with-resource\" class=\"headerlink\" title=\"4.2 try-with-resource\"></a>4.2 try-with-resource</h2><p>JDK7和JDK9中都简化了资源释放操作<br><img src=\"https://img-blog.csdnimg.cn/79d62ccc49e040fd8ff8f2da88e93f99.png\"></p>\n<hr>\n<h1 id=\"5、字符流的使用\"><a href=\"#5、字符流的使用\" class=\"headerlink\" title=\"5、字符流的使用\"></a>5、字符流的使用</h1><h2 id=\"5-1-文件字符输入流\"><a href=\"#5-1-文件字符输入流\" class=\"headerlink\" title=\"5.1 文件字符输入流\"></a>5.1 文件字符输入流</h2><p><img src=\"https://img-blog.csdnimg.cn/33a7af531aba48329dd0d3a85e06c106.png\"><br><img src=\"https://img-blog.csdnimg.cn/eb22d888762e43b3833ac0a86279bac5.png\"></p>\n<p>文件字符输入流: Reader</p>\n<p>作用:以内存为基准，把磁盘文件中的数据以字符的形式读取到内存中去。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">构造器</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public FileReader(File file)</td>\n<td align=\"center\">创建字符输入流管道与源文件对象接通</td>\n</tr>\n<tr>\n<td align=\"center\">public FileReader(String pathname)</td>\n<td align=\"center\">创建字符输入流管道与源文件路径接通</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法名称</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public int read()</td>\n<td align=\"center\">每次读取一个字符返回，如果字符已经没有可读的返回-1</td>\n</tr>\n<tr>\n<td align=\"center\">public int read(char[] buffer)</td>\n<td align=\"center\">每次读取一个字符数组，返回读取的字符个数，如果字符已经没有可读的返回-1</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>每次读取一个字符：读取中文字符不会出现乱码（如果代码文件编码一致)；性能较慢。</strong></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">File</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">FileReader</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Reader</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">FileReaderDemo01</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">throws</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 目标：每次读取一个字符。</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 创建一个字符输入流管道与源文件接通</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">Reader</span><span style=\"color: #BABED8\"> fr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileReader</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file-io-app</span><span style=\"color: #BABED8\">\\\\</span><span style=\"color: #C3E88D\">src</span><span style=\"color: #BABED8\">\\\\</span><span style=\"color: #C3E88D\">data06.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> code</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">code </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> fr</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">read</span><span style=\"color: #89DDFF\">())</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #C792EA\">char</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> code</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>每次读取一个字符数组：读取的性能得到了提升，读取中文字符输出不会乱码。</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">FileReader</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Reader</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">FileReaderDemo02</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">throws</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 1、创建一个文件字符输入流与源文件接通</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">Reader</span><span style=\"color: #BABED8\"> fr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileReader</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file-io-app/src/data07.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 2、用循环，每次读取一个字符数组的数据。  1024 + 1024 + 8</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">char</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> buffer </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">char</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1024</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 1K字符</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> len</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">len </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> fr</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">read</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> rs </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">String</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buffer</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> len</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rs</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"5-2-文件字符输出流\"><a href=\"#5-2-文件字符输出流\" class=\"headerlink\" title=\"5.2 文件字符输出流\"></a>5.2 文件字符输出流</h2><p>文件字符输出流:FileWriter</p>\n<p>作用:以内存为基准，把内存中的数据以字符的形式写出到磁盘文件中去的流。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">构造器</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public Filewriter(File file)</td>\n<td align=\"center\">创建字符输出流管道与源文件对象接通</td>\n</tr>\n<tr>\n<td align=\"center\">public Filewriter(File file, boolean append)</td>\n<td align=\"center\">创建字符输出流管道与源文件对象接通，可追加数据</td>\n</tr>\n<tr>\n<td align=\"center\">public Filewriter(string filepath)</td>\n<td align=\"center\">创建字符输出流管道与源文件路径接通</td>\n</tr>\n<tr>\n<td align=\"center\">public Filewriter(String filepath，boolean append)</td>\n<td align=\"center\">创建字符输出流管道与源文件路径接通，可追加数据</td>\n</tr>\n</tbody></table>\n<p><strong>文件字符输出流(FileWriter)写数据出去的API</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法名称</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">void write(int c)</td>\n<td align=\"center\">写一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">void write(char[] cbuf)</td>\n<td align=\"center\">写入一个字符数组</td>\n</tr>\n<tr>\n<td align=\"center\">void write(char[]cbuf, int off, int len)</td>\n<td align=\"center\">写入字符数组的一部分</td>\n</tr>\n<tr>\n<td align=\"center\">void write(String str)</td>\n<td align=\"center\">写一个字符串</td>\n</tr>\n<tr>\n<td align=\"center\">void write(String str, int off, int len)</td>\n<td align=\"center\">写一个字符串的一部分</td>\n</tr>\n<tr>\n<td align=\"center\">void write(int c)</td>\n<td align=\"center\">写一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">流的关闭与刷新</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">方法</td>\n<td align=\"center\">说明</td>\n</tr>\n<tr>\n<td align=\"center\">:-:</td>\n<td align=\"center\">:-:</td>\n</tr>\n<tr>\n<td align=\"center\">flush()</td>\n<td align=\"center\">刷新流，还可以继续写数据</td>\n</tr>\n<tr>\n<td align=\"center\">close()</td>\n<td align=\"center\">关闭流，释放资源，但是在关闭之前会先刷新流。一旦关闭，就不能再写数据</td>\n</tr>\n</tbody></table>\n<p><strong>字符输出流实现写出去的数据能换行:fw.write(“\\r\\n”)</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1d1d1d\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">File</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">FileWriter</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Writer</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">FileWriterDemo03</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">throws</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// 1、创建一个字符输出流管道与目标文件接通</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// Writer fw = new FileWriter(&quot;file-io-app/src/out08.txt&quot;); // 覆盖管道，每次启动都会清空文件之前的数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">Writer</span><span style=\"color: #BABED8\"> fw </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileWriter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file-io-app/src/out08.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 覆盖管道，每次启动都会清空文件之前的数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//      a.public void write(int c):写一个字符出去</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">98</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">徐</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 不会出问题了</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\r\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 换行</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//       b.public void write(String c)写一个字符串出去</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abc我是中国人</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\r\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 换行</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//       c.public void write(char[] buffer):写一个字符数组出去</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">char</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> chars </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abc我是中国人</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toCharArray</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">chars</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\r\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 换行</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//       d.public void write(String c ,int pos ,int len):写字符串的一部分出去</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abc我是中国人</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\r\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 换行</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//       e.public void write(char[] buffer ,int pos ,int len):写字符数组的一部分出去</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">chars</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\r\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 换行</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">// fw.flush();// 刷新后流可以继续使用</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 关闭包含刷线，关闭后流不能使用</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n","feature":true,"text":"字符集是一种用于表示字符编码的标准，它定义了字符与二进制数据之间的映射关系。在IO流操作中，字节流是处理二进制数据的基本流类型，它以字节为单位进行读写操作。通过合理选择字符集和使用字节流，我们可以实现字符和字节之间的转换，有效地处理文本和二进制数据的输入输出。...","permalink":"/post/Java程序设计 -- 输入输出流（上）（十六）","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"后端","slug":"后端","count":22,"path":"api/categories/后端.json"}],"tags":[{"name":"Java","slug":"Java","count":22,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%AD%97%E7%AC%A6%E9%9B%86\"><span class=\"toc-text\">1、字符集</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-%E5%B8%B8%E8%A7%81%E5%AD%97%E7%AC%A6%E9%9B%86%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1.1 常见字符集介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-%E5%AD%97%E7%AC%A6%E9%9B%86%E7%9A%84%E7%BC%96%E7%A0%81%E3%80%81%E8%A7%A3%E7%A0%81%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">1.2 字符集的编码、解码操作</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2%E3%80%81IO%E6%B5%81%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">2、IO流概述</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%AD%97%E8%8A%82%E6%B5%81%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">3、字节流的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E6%96%87%E5%AD%97%E5%AD%97%E8%8A%82%E8%BE%93%E5%85%A5%E6%B5%81\"><span class=\"toc-text\">3.1 文字字节输入流</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-%E6%96%87%E4%BB%B6%E5%AD%97%E8%8A%82%E8%BE%93%E5%87%BA%E6%B5%81\"><span class=\"toc-text\">3.2 文件字节输出流</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-%E6%96%87%E4%BB%B6%E6%8B%B7%E8%B4%9D\"><span class=\"toc-text\">3.3 文件拷贝</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4%E3%80%81%E8%B5%84%E6%BA%90%E9%87%8A%E6%94%BE%E7%9A%84%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">4、资源释放的方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-try-catch-finally\"><span class=\"toc-text\">4.1 try-catch-finally</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-try-with-resource\"><span class=\"toc-text\">4.2 try-with-resource</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%AD%97%E7%AC%A6%E6%B5%81%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">5、字符流的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-1-%E6%96%87%E4%BB%B6%E5%AD%97%E7%AC%A6%E8%BE%93%E5%85%A5%E6%B5%81\"><span class=\"toc-text\">5.1 文件字符输入流</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-2-%E6%96%87%E4%BB%B6%E5%AD%97%E7%AC%A6%E8%BE%93%E5%87%BA%E6%B5%81\"><span class=\"toc-text\">5.2 文件字符输出流</span></a></li></ol></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Java程序设计--输入输出流(下)","uid":"5dfd375e1addf174b025352719cc8bb2","slug":"Java程序设计 -- 输入输出流（下）（十七）","date":"2022-04-04T07:22:51.000Z","updated":"2025-07-14T15:12:20.461Z","comments":true,"path":"api/articles/Java程序设计 -- 输入输出流（下）（十七）.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/39b97c220e4c47a8a19e408b6dba7804.png","text":"缓冲流、转换流、序列化对象和打印流是Java中常用的IO操作工具。缓冲流可以提高读写效率，通过一次读写多个字节来减少IO次数。转换流用于字符流和字节流之间的相互转换，方便处理不同类型的数据。序列化对象允许将对象转换为字节序列，以便于数据的存储和传输。打印流则是一种方便输出格式化数据的工具，可用于生成可读性强的输出。...","permalink":"/post/Java程序设计 -- 输入输出流（下）（十七）","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"后端","slug":"后端","count":22,"path":"api/categories/后端.json"}],"tags":[{"name":"Java","slug":"Java","count":22,"path":"api/tags/Java.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true},"next_post":{"title":"前端开发利器 - - PxCook（像素大厨）","uid":"74587a5637a9c21548b605cd59260ff7","slug":"前端--PxCook（像素大厨）","date":"2022-03-30T13:51:02.000Z","updated":"2025-07-14T15:12:20.464Z","comments":true,"path":"api/articles/前端--PxCook（像素大厨）.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/direct/0ccda198820c4fb682083e7eef9fce11.jpeg","text":"PxCook（像素大厨）是一款前端开发利器，提供高效易用的自动标注工具和生成前端代码的功能。它可以帮助设计师和开发者进行设计研发协作，极大地提升工作效率。无论是自动标注还是生成代码，PxCook都能提供便捷而准确的解决方案，使前端开发变得更加轻松和高效。...","permalink":"/post/前端--PxCook（像素大厨）","photos":[],"count_time":{"symbolsCount":838,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"工具","slug":"工具","count":1,"path":"api/tags/工具.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}