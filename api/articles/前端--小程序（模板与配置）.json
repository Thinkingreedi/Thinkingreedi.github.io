{"title":"快速搭建微信小程序：模板和配置详细介绍","uid":"fcb4d1e2238062848ffc04d17153bd49","slug":"前端--小程序（模板与配置）","date":"2023-03-07T08:05:06.000Z","updated":"2025-07-14T15:12:20.465Z","comments":true,"path":"api/articles/前端--小程序（模板与配置）.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/direct/99ef3a76e98343f09343b862791073a9.png","content":"<h1 id=\"1、小程序-–-模板与配置\"><a href=\"#1、小程序-–-模板与配置\" class=\"headerlink\" title=\"1、小程序 – 模板与配置\"></a>1、小程序 – 模板与配置</h1><h2 id=\"1-1-WXML模板语法\"><a href=\"#1-1-WXML模板语法\" class=\"headerlink\" title=\"1.1 WXML模板语法\"></a>1.1 WXML模板语法</h2><p><strong>数据绑定</strong></p>\n<ul>\n<li>在data中定义数据</li>\n</ul>\n<pre><code class=\"js\">Page(&#123;\n    data:&#123;\n        //字符串类型数据\n        info:&#39;init data&#39;,\n        //数组类型数据\n        msgList:[&#123;msg:&#39;hello&#39;&#125;,&#123;nsf:&#39;world&#39;&#125;]\n    &#125;\n&#125;)\n</code></pre>\n<ul>\n<li>在WXML中使用数据</li>\n</ul>\n<pre><code class=\"js\">&lt;view&gt;&#123;&#123; 要绑定的数据名称 &#125;&#125;&lt;/view&gt;\n//Mustache语法(双大括号)\n//应用场景：绑定内容,绑定属性,运算（三元运算、算术运算等)\n</code></pre>\n<p><strong>事件绑定</strong></p>\n<ul>\n<li>事件是渲染层到逻辑层的通讯方式</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/3ac86c372bb54d38811ac8d9a431db60.png\"></p>\n<ul>\n<li>小程序中常用事件</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>类型</strong></th>\n<th align=\"center\"><strong>绑定方式</strong></th>\n<th align=\"center\"><strong>事件描述</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">tap</td>\n<td align=\"center\">bindtap 或 bind:tap</td>\n<td align=\"center\">手指触摸后马上离开，类似于 HTML 中的 click 事件</td>\n</tr>\n<tr>\n<td align=\"center\">input</td>\n<td align=\"center\">bindinput 或 bind:input</td>\n<td align=\"center\">文本框的输入事件</td>\n</tr>\n<tr>\n<td align=\"center\">change</td>\n<td align=\"center\">bindchange 或 bind:change</td>\n<td align=\"center\">状态改变时触发</td>\n</tr>\n</tbody></table>\n<ul>\n<li>事件对象的属性列表<ul>\n<li>当事件回调触发的时候，会收到一个事件对象event，它的详细属性如下表所示:</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>属性</strong></th>\n<th align=\"center\"><strong>类型</strong></th>\n<th align=\"center\"><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">type</td>\n<td align=\"center\">String</td>\n<td align=\"center\">事件类型</td>\n</tr>\n<tr>\n<td align=\"center\">timeStamp</td>\n<td align=\"center\">Integer</td>\n<td align=\"center\">页面打开到触发事件所经过的毫秒数</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>target</strong></td>\n<td align=\"center\">Object</td>\n<td align=\"center\"><strong>触发事件的(源头)组件</strong>的一些属性值集合</td>\n</tr>\n<tr>\n<td align=\"center\">currentTarget</td>\n<td align=\"center\">Object</td>\n<td align=\"center\"><strong>当前(正在触发事件)组件</strong>的一些属性值集合</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>detail</strong></td>\n<td align=\"center\">Object</td>\n<td align=\"center\">额外的信息</td>\n</tr>\n<tr>\n<td align=\"center\">touches</td>\n<td align=\"center\">Array</td>\n<td align=\"center\">触摸事件，当前停留在屏幕中的触摸点信息的数组</td>\n</tr>\n<tr>\n<td align=\"center\">changedTouches</td>\n<td align=\"center\">Array</td>\n<td align=\"center\">触摸事件，当前变化的触摸点信息的数组</td>\n</tr>\n</tbody></table>\n<ul>\n<li>事件绑定语法格式：</li>\n</ul>\n<pre><code class=\"js\">//wxml\n&lt;button type=&quot;primary&quot; bindtap=&quot;btnTapHandler&quot;&gt;按钮&lt;/button&gt;\n\n//js\nPage(&#123;\n  btnTapHandler(e)&#123;\n    console.log(e)\n  &#125;,  \n&#125;)\n</code></pre>\n<ul>\n<li>在事件处理函数中为data中的数据赋值</li>\n</ul>\n<pre><code class=\"js\">Page(&#123;\n  data:&#123;\n    count:0\n  &#125;,\n  changeCount()&#123;\n    this.setData(&#123;\n      count:this.data.count + 1//修改\n    &#125;)\n  &#125;\n&#125;)\n</code></pre>\n<ul>\n<li>事件传参</li>\n</ul>\n<pre><code class=\"js\">//wxml\n&lt;button bindtap = &quot;btnHandler&quot; data-info=&quot;&#123;&#123;2&#125;&#125;&quot;&gt;事件传参&lt;/button&gt;\n//通过data-*自定义属性传参\n\n//js\nbtnHandler(event)&#123;\n    console.log(event.target.dataset.info)\n&#125;\n//通过event.target.dataset.参数名获取到具体参数的值\n</code></pre>\n<ul>\n<li>bindinput语法格式<ul>\n<li>通过input事件来响应文本框的输入事件</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"js\">//wxml\n&lt;input bindinput=&quot;inputHandler&quot;&gt;&lt;/input&gt;\n\n//js\nPage(&#123;\n  inputHandler(e)&#123;\n    console.log(e.detail.value)\n  &#125;\n&#125;)\n</code></pre>\n<p><strong>数据同步</strong></p>\n<ul>\n<li>步骤</li>\n</ul>\n<ol>\n<li>定义数据(data数据)</li>\n<li>渲染结构(wxml)</li>\n<li>美化样式(wxss)</li>\n<li>绑定input事件处理函数(js函数)</li>\n</ol>\n<p><strong>条件渲染</strong></p>\n<pre><code class=\"js\">&lt;view wx:if=&quot;&#123;&#123;type === 1&#125;&#125;&quot;&gt;男&lt;/view&gt;\n&lt;view wx:elif=&quot;&#123;&#123;type === 2&#125;&#125;&quot;&gt;女&lt;/view&gt;\n&lt;view wx:else&gt;保密&lt;/view&gt;\n\n//要一次性控制多个组件的展示与隐藏，可以使用一个&lt;block&gt; &lt;/block&gt;标签将多个组件包装起来，&lt;block&gt;并不是一个组件，它只是一个包裹性质的容器，不会在页面中做任何渲染。\n&lt;block wx: if=&quot;&#123;&#123;true&#125;&#125;&quot;&gt;\n    &lt;view&gt; view1 &lt;/view&gt;\n    &lt;view&gt; view2 &lt;/view&gt;\n&lt;/block&gt;\n\n//hidden也能控制元素的显示与隐藏\n&lt;view hidden=&quot;&#123;&#123;condition&#125;&#125;&quot;&gt;条件为true隐藏，条件为 false显示&lt;/view&gt;\n</code></pre>\n<ul>\n<li>wx:if 与 hidden 的对比<ol>\n<li>运行方式不同<ul>\n<li>wx:if 以动态创建和移除元素的方式，控制元素的展示与隐藏</li>\n<li>hidden 以切换样式的方式(display: none&#x2F;block;)，控制元素的显示与隐藏</li>\n</ul>\n</li>\n<li>使用建议<ul>\n<li><strong>频繁切换时,建议使用hidden</strong></li>\n<li><strong>控制条件复杂时</strong>，建议使用wx:if 搭配wx:elif、wx:else进行展示与隐藏的切换</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<p><strong>列表渲染</strong></p>\n<pre><code class=\"js\">&lt;view wx:for=&quot;&#123;&#123;arr&#125;&#125;&quot;&gt;\n  索引是：&#123;&#123;index&#125;&#125;, item项：&#123;&#123;item&#125;&#125;\n&lt;/view&gt;\n//默认情况下，当前循环项的索引用index表示;当前循环项用item表示\n//也可以手动指定索引和当前项的变量名 wx:for-index=&quot;&quot; wx:for-item=&quot;&quot;\n\n//小程序在实现列表渲染时，也建议为渲染出来的列表项指定唯一的key值，从而提高渲染的效率\n//wxml\n&lt;view wx:for=&quot;&#123;&#123;userList&#125;&#125;&quot; wx:key=&quot;id&quot;&gt;&#123;&#123;item.name&#125;&#125;&lt;/view&gt;\n//js\nPage(&#123;\n  data:&#123;\n    userList:[\n      &#123;id:1,name:&#39;小红&#39;&#125;,\n      &#123;id:2,name:&#39;小黄&#39;&#125;,\n      &#123;id:3,name:&#39;小白&#39;&#125;\n    ]\n  &#125;,\n&#125;)\n</code></pre>\n<h2 id=\"1-2-WXSS模板样式\"><a href=\"#1-2-WXSS模板样式\" class=\"headerlink\" title=\"1.2 WXSS模板样式\"></a>1.2 WXSS模板样式</h2><p><img src=\"https://img-blog.csdnimg.cn/d82a4dcff7aa4c6c8cd422b5ba4a7b9e.png\"></p>\n<p><strong>rpx</strong></p>\n<ul>\n<li><p>rpx (responsive pixel）是微信小程序独有的，用来解决屏适配的尺寸单位</p>\n</li>\n<li><p>rpx的实现原理：鉴于不同设备屏幕的大小不同，为了实现屏幕的自动适配，rpx把所有设备的屏幕，在<strong>宽度上等分为750份</strong>(即:当前屏幕的总宽度为750rpx) </p>\n<ul>\n<li><p>在较小的设备上,1rpx所代表的宽度较小</p>\n</li>\n<li><p>在较大的设备上， 1rpx所代表的宽度较大</p>\n</li>\n</ul>\n</li>\n<li><p>小程序在不同设备上运行的时候，会自动把rpx的样式单位换算成对应的像素单位来渲染，从而实现屏幕适配</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>设备</strong></th>\n<th align=\"center\">rpx换算px (屏幕宽度750)</th>\n<th align=\"center\">px换算rpx (750&#x2F;屏幕宽度)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">iPhone5</td>\n<td align=\"center\">1rpx &#x3D; 0.42px</td>\n<td align=\"center\">1px  &#x3D; 2.34rpx</td>\n</tr>\n<tr>\n<td align=\"center\">iPhone6</td>\n<td align=\"center\"><strong>1rpx</strong> <strong>&#x3D;</strong> <strong>0.5px</strong></td>\n<td align=\"center\">1px &#x3D; 2rpx</td>\n</tr>\n<tr>\n<td align=\"center\">iPhone6  Plus</td>\n<td align=\"center\">1rpx &#x3D; 0.552px</td>\n<td align=\"center\">1px  &#x3D; 1.81rpx</td>\n</tr>\n</tbody></table>\n<ul>\n<li>开发中建议采用iPhone 6作为视觉设计稿</li>\n</ul>\n<p><strong>样式导入</strong></p>\n<ul>\n<li>使用WXSS提供的import语法。可以导入外联的样式表</li>\n</ul>\n<pre><code class=\"js\">@import &quot;demo.wxss&quot;\n</code></pre>\n<p><strong>全局样式</strong></p>\n<ul>\n<li>定义在app.wxss中的样式为全局样式，作用于每一个页面</li>\n</ul>\n<p><strong>局部样式</strong></p>\n<ul>\n<li><p>在页面的.wxss文件中定义的样式为局部样式，只作用于当前页面</p>\n</li>\n<li><p>注意:</p>\n<ul>\n<li>当局部样式和全局样式<strong>冲突</strong>时，根据<strong>就近原则</strong>，<strong>局部样式会覆盖全局样式</strong></li>\n<li>当局部样式的<strong>权重大于或等于全局样式</strong>的权重时，才会覆盖全局的样式</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-3-全局配置\"><a href=\"#1-3-全局配置\" class=\"headerlink\" title=\"1.3 全局配置\"></a>1.3 全局配置</h2><ul>\n<li>小程序根目录下的 app.json文件是小程序的全局配置文件。常用的配置项如下:<ul>\n<li>pages：记录当前小程序所有页面的存放路径</li>\n<li>window：全局设置小程序窗口的外观</li>\n<li>tabBar：设置小程序底部的tabBar效果</li>\n<li>style：是否启用新版的组件样式</li>\n</ul>\n</li>\n</ul>\n<p><strong>window</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/4c7074822c634bbbbfeffd34e9c12b1a.png\"></p>\n<ul>\n<li>常用配置项</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>属性名</strong></th>\n<th align=\"center\"><strong>类型</strong></th>\n<th align=\"center\"><strong>默认值</strong></th>\n<th align=\"center\"><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">navigationBarTitleText</td>\n<td align=\"center\">String</td>\n<td align=\"center\">字符串</td>\n<td align=\"center\">导航栏标题文字内容</td>\n</tr>\n<tr>\n<td align=\"center\">navigationBarBackgroundColor</td>\n<td align=\"center\">HexColor</td>\n<td align=\"center\">#000000</td>\n<td align=\"center\">导航栏背景颜色，<strong>仅支持16进制颜色</strong></td>\n</tr>\n<tr>\n<td align=\"center\">navigationBarTextStyle</td>\n<td align=\"center\">String</td>\n<td align=\"center\">white</td>\n<td align=\"center\">导航栏标题颜色，<strong>仅支持 black &#x2F; white</strong></td>\n</tr>\n<tr>\n<td align=\"center\">backgroundColor</td>\n<td align=\"center\">HexColor</td>\n<td align=\"center\">#ffffff</td>\n<td align=\"center\">窗口的背景色 ，<strong>仅支持16进制颜色</strong></td>\n</tr>\n<tr>\n<td align=\"center\">backgroundTextStyle</td>\n<td align=\"center\">String</td>\n<td align=\"center\">dark</td>\n<td align=\"center\">下拉 loading 的样式，<strong>仅支持 dark &#x2F; light</strong></td>\n</tr>\n<tr>\n<td align=\"center\">enablePullDownRefresh</td>\n<td align=\"center\">Boolean</td>\n<td align=\"center\">false</td>\n<td align=\"center\">是否全局开启下拉刷新</td>\n</tr>\n<tr>\n<td align=\"center\">onReachBottomDistance</td>\n<td align=\"center\">Number</td>\n<td align=\"center\">50</td>\n<td align=\"center\">页面上拉触底事件触发时距页面底部距离，单位为px</td>\n</tr>\n</tbody></table>\n<p><strong>tabBar</strong></p>\n<ul>\n<li>tabBar是移动端应用常见的页面效果,用于实现多页面的快速切换，分为底部和顶部两类</li>\n<li>只能配置<strong>最少2个，最多5个</strong>tab页签；渲染顶部tabBar时并不显示icon</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/a18499736aa74510b9707efc714d55bd.png\"></p>\n<ul>\n<li>tabBar配置项：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>属性</strong></th>\n<th align=\"center\"><strong>类型</strong></th>\n<th align=\"center\"><strong>必填</strong></th>\n<th align=\"center\"><strong>默认值</strong></th>\n<th align=\"center\"><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">position</td>\n<td align=\"center\">String</td>\n<td align=\"center\">否</td>\n<td align=\"center\">bottom</td>\n<td align=\"center\">tabBar 的位置，<strong>仅支持 bottom&#x2F;top</strong></td>\n</tr>\n<tr>\n<td align=\"center\">borderStyle</td>\n<td align=\"center\">String</td>\n<td align=\"center\">否</td>\n<td align=\"center\">black</td>\n<td align=\"center\">tabBar 上边框的颜色，<strong>仅支持 black&#x2F;white</strong></td>\n</tr>\n<tr>\n<td align=\"center\">color</td>\n<td align=\"center\">HexColor</td>\n<td align=\"center\">否</td>\n<td align=\"center\"></td>\n<td align=\"center\">tab 上文字的默认（未选中）颜色</td>\n</tr>\n<tr>\n<td align=\"center\">selectedColor</td>\n<td align=\"center\">HexColor</td>\n<td align=\"center\">否</td>\n<td align=\"center\"></td>\n<td align=\"center\">tab 上的文字选中时的颜色</td>\n</tr>\n<tr>\n<td align=\"center\">backgroundColor</td>\n<td align=\"center\">HexColor</td>\n<td align=\"center\">否</td>\n<td align=\"center\"></td>\n<td align=\"center\">tabBar 的背景色</td>\n</tr>\n<tr>\n<td align=\"center\">list</td>\n<td align=\"center\">Array</td>\n<td align=\"center\"><strong>是</strong></td>\n<td align=\"center\"></td>\n<td align=\"center\">tab 页签的列表，  最少 2  个、最多  5 个 tab</td>\n</tr>\n</tbody></table>\n<ul>\n<li>每个tab项的配置选项</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>属性</strong></th>\n<th align=\"center\"><strong>类型</strong></th>\n<th align=\"center\"><strong>必填</strong></th>\n<th align=\"center\"><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">pagePath</td>\n<td align=\"center\">String</td>\n<td align=\"center\"><strong>是</strong></td>\n<td align=\"center\">页面路径，页面必须在 pages  中预先定义</td>\n</tr>\n<tr>\n<td align=\"center\">text</td>\n<td align=\"center\">String</td>\n<td align=\"center\"><strong>是</strong></td>\n<td align=\"center\">tab 上显示的文字</td>\n</tr>\n<tr>\n<td align=\"center\">iconPath</td>\n<td align=\"center\">String</td>\n<td align=\"center\">否</td>\n<td align=\"center\">未选中时的图标路径；当 postion 为 top 时，不显示 icon</td>\n</tr>\n<tr>\n<td align=\"center\">selectedIconPath</td>\n<td align=\"center\">String</td>\n<td align=\"center\">否</td>\n<td align=\"center\">选中时的图标路径；当 postion 为 top 时，不显示 icon</td>\n</tr>\n</tbody></table>\n<h2 id=\"1-4-页面配置\"><a href=\"#1-4-页面配置\" class=\"headerlink\" title=\"1.4 页面配置\"></a>1.4 页面配置</h2><ul>\n<li>小程序中，每个页面都有自己的.json配置文件，用来对当前页面的窗口外观、页面效果等进行配置</li>\n<li>当页面配置与全局配置冲突时，根据就近原则，最终的效果以页面配置为准</li>\n<li>常用配置项：(同全局配置项)</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>属性</strong></th>\n<th align=\"center\"><strong>类型</strong></th>\n<th align=\"center\"><strong>默认值</strong></th>\n<th align=\"center\"><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">navigationBarBackgroundColor</td>\n<td align=\"center\">HexColor</td>\n<td align=\"center\">#000000</td>\n<td align=\"center\">当前页面导航栏背景颜色，如 #000000</td>\n</tr>\n<tr>\n<td align=\"center\">navigationBarTextStyle</td>\n<td align=\"center\">String</td>\n<td align=\"center\">white</td>\n<td align=\"center\">当前页面导航栏标题颜色，仅支持 black &#x2F; white</td>\n</tr>\n<tr>\n<td align=\"center\">navigationBarTitleText</td>\n<td align=\"center\">String</td>\n<td align=\"center\"></td>\n<td align=\"center\">当前页面导航栏标题文字内容</td>\n</tr>\n<tr>\n<td align=\"center\">backgroundColor</td>\n<td align=\"center\">HexColor</td>\n<td align=\"center\">#ffffff</td>\n<td align=\"center\">当前页面窗口的背景色</td>\n</tr>\n<tr>\n<td align=\"center\">backgroundTextStyle</td>\n<td align=\"center\">String</td>\n<td align=\"center\">dark</td>\n<td align=\"center\">当前页面下拉 loading 的样式，仅支持 dark &#x2F; light</td>\n</tr>\n<tr>\n<td align=\"center\">enablePullDownRefresh</td>\n<td align=\"center\">Boolean</td>\n<td align=\"center\">false</td>\n<td align=\"center\">是否为当前页面开启下拉刷新的效果</td>\n</tr>\n<tr>\n<td align=\"center\">onReachBottomDistance</td>\n<td align=\"center\">Number</td>\n<td align=\"center\">50</td>\n<td align=\"center\">页面上拉触底事件触发时距页面底部距离，单位为 px</td>\n</tr>\n</tbody></table>\n<h2 id=\"1-5-网络数据请求\"><a href=\"#1-5-网络数据请求\" class=\"headerlink\" title=\"1.5 网络数据请求\"></a>1.5 网络数据请求</h2><ul>\n<li>出于安全性方面的考虑，小程序官方对数据接口的请求做出了如下两个限制:<ul>\n<li>只能请求HTTPS类型的接口</li>\n<li>必须将接口的域名添加到信任列表中</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/3ef2078381284e88afc6d57364a1a0bf.png\"></p>\n<ul>\n<li><p>配置域名步骤：<strong>登录微信小程序管理后台 -&gt; 开发 -&gt; 开发设置 -&gt; 服务器域名 -&gt; 修改request合法域名</strong></p>\n</li>\n<li><p>注意：</p>\n<ul>\n<li>域名只支持https协议</li>\n<li>域名不能使用IP地址或localhost</li>\n<li>域名必须经过ICP备案</li>\n<li>服务器域名一个月内最多可申请5次修改</li>\n</ul>\n</li>\n<li><p>发起GET请求</p>\n</li>\n</ul>\n<pre><code class=\"js\">wx.request(&#123;\n      url: &#39;https://www.escook.cn/api/get&#39;, //请求的接口地址，必须是基于https协议\n      method:&#39;GET&#39;,  //请求的方式\n      data:&#123;         //发送到服务器的数据\n        name:&#39;xyk&#39;,\n        age:21\n      &#125;,\n      success:(res=&gt;&#123;  //请求成功之后的回调函数  \n        console.log(res)\n      &#125;)\n    &#125;)\n</code></pre>\n<ul>\n<li>发起POST请求</li>\n</ul>\n<pre><code class=\"js\">wx.request(&#123;\n      url: &#39;https://www.escook.cn/api/post&#39;, //请求的接口地址，必须是基于https协议\n      method:&#39;POST&#39;,  //请求的方式\n      data:&#123;         //发送到服务器的数据\n        name:&#39;xyk&#39;,\n        age:21\n      &#125;,\n      success:(res)=&gt;&#123;  //请求成功之后的回调函数  \n        console.log(res)\n      &#125;\n    &#125;)\n</code></pre>\n<ul>\n<li>页面加载时请求数据</li>\n</ul>\n<pre><code class=\"js\">//生命周期函数\nonLoad(options) &#123;\n  this.getInfo()\n  this.postInfo()\n&#125;,\n</code></pre>\n<ul>\n<li>跳过合法域名检验<ul>\n<li>我们可以在微信开发者工具中，临时开启「开发环境不校验请求域名、TLS版本及 HTTPS证书」选项，跳过request 合法域名的校验</li>\n<li><strong>仅限在开发与调试阶段使用</strong></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/5ecd65388d5a46c0b76c68dd932aab75.png\"></p>\n<ul>\n<li>关于跨域和Ajax<ul>\n<li>跨域问题只存在于基于浏览器的Web开发中。由于小程序的宿主环境不是浏览器，而是微信客户端，所以小程序中不存在跨域的问题</li>\n<li>Ajax技术的核心是依赖于浏览器中的XMLHttpRequest这个对象，由于小程序的宿主环境是微信客户端，所以小程序中不能叫做“发起Ajax请求”，而是叫做“发起网络数据请求”</li>\n</ul>\n</li>\n</ul>\n","feature":true,"text":"微信小程序是一种可以在微信平台上运行的应用程序。它不需要下载和安装，用户可以直接通过微信扫码或搜索进入使用。微信小程序具有轻量、快速、跨平台等特点，开发者可以使用HTML、CSS、JavaScript等前端技术进行开发。...","permalink":"/post/前端--小程序（模板与配置）","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"微信小程序","slug":"微信小程序","count":5,"path":"api/tags/微信小程序.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E2%80%93-%E6%A8%A1%E6%9D%BF%E4%B8%8E%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">1、小程序 – 模板与配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-WXML%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">1.1 WXML模板语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-WXSS%E6%A8%A1%E6%9D%BF%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">1.2 WXSS模板样式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-3-%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">1.3 全局配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-4-%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">1.4 页面配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-5-%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">1.5 网络数据请求</span></a></li></ol></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"快速上手微信小程序：视图与逻辑","uid":"3c5b8d1cedaa864e9f8845e75af9e565","slug":"前端--微信小程序（视图与逻辑）","date":"2023-03-11T01:45:00.000Z","updated":"2025-07-14T15:12:20.465Z","comments":true,"path":"api/articles/前端--微信小程序（视图与逻辑）.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/direct/99ef3a76e98343f09343b862791073a9.png","text":"微信小程序是一种可以在微信平台上运行的应用程序。它不需要下载和安装，用户可以直接通过微信扫码或搜索进入使用。微信小程序具有轻量、快速、跨平台等特点，开发者可以使用HTML、CSS、JavaScript等前端技术进行开发。...","permalink":"/post/前端--微信小程序（视图与逻辑）","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"微信小程序","slug":"微信小程序","count":5,"path":"api/tags/微信小程序.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true},"next_post":{"title":"快速上手微信小程序：简介与开发技巧","uid":"4919a85d97ec4c073e64d0ad59bc5172","slug":"前端--微信小程序（起步）","date":"2023-02-25T01:22:07.000Z","updated":"2025-07-14T15:12:20.465Z","comments":true,"path":"api/articles/前端--微信小程序（起步）.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/direct/99ef3a76e98343f09343b862791073a9.png","text":"微信小程序是一种可以在微信平台上运行的应用程序。它不需要下载和安装，用户可以直接通过微信扫码或搜索进入使用。微信小程序具有轻量、快速、跨平台等特点，开发者可以使用HTML、CSS、JavaScript等前端技术进行开发。...","permalink":"/post/前端--微信小程序（起步）","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"微信小程序","slug":"微信小程序","count":5,"path":"api/tags/微信小程序.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}