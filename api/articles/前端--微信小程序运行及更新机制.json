{"title":"微信小程序运行原理揭秘：高效的更新机制","uid":"e6457ff6789a076addbc03fc1dc3721a","slug":"前端--微信小程序运行及更新机制","date":"2023-04-23T14:34:07.000Z","updated":"2025-07-14T15:12:20.465Z","comments":true,"path":"api/articles/前端--微信小程序运行及更新机制.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/direct/99ef3a76e98343f09343b862791073a9.png","content":"<hr>\n<h1 id=\"1、微信小程序运行机制\"><a href=\"#1、微信小程序运行机制\" class=\"headerlink\" title=\"1、微信小程序运行机制\"></a>1、微信小程序运行机制</h1><ul>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/runtime/operating-mechanism.html\">微信小程序运行机制</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/17e07a4f797c4b9e8e695977557ce391.png#pic_center\"></p>\n<ul>\n<li>官方文档描述的很详细，所以这里只介绍主要的相关概念。</li>\n</ul>\n<h2 id=\"1-1-前台和后台\"><a href=\"#1-1-前台和后台\" class=\"headerlink\" title=\"1.1 前台和后台\"></a>1.1 前台和后台</h2><ul>\n<li><p>小程序启动后，界面被展示给用户，此时小程序处于<strong>前台</strong>状态。</p>\n</li>\n<li><p>当用户点击右上角按钮关闭小程序，或者按了设备 Home 键离开微信时，小程序并没有完全终止运行，而是进入了<strong>后台</strong>状态，小程序还可以运行一小段时间。</p>\n</li>\n<li><p>当用户再次进入微信或再次打开小程序，小程序又会从后台进入<strong>前台</strong>。但如果用户很久没有再进入小程序，或者系统资源紧张，小程序可能被<strong>销毁</strong>，即完全终止运行。</p>\n</li>\n</ul>\n<h2 id=\"1-2-小程序启动：冷启动和热启动\"><a href=\"#1-2-小程序启动：冷启动和热启动\" class=\"headerlink\" title=\"1.2 小程序启动：冷启动和热启动\"></a>1.2 小程序启动：冷启动和热启动</h2><ul>\n<li>小程序启动可以分为两种情况，一种是<strong>冷启动</strong>，一种是<strong>热启动</strong>。</li>\n</ul>\n<ol>\n<li>冷启动：如果用户首次打开，或小程序销毁后被用户再次打开，此时小程序需要重新加载启动，即冷启动。</li>\n<li>热启动：如果用户已经打开过某小程序，然后在一定时间内再次打开该小程序，此时小程序并未被销毁，只是从后台状态进入前台状态，这个过程就是热启动。</li>\n</ol>\n<h2 id=\"1-3-小程序销毁\"><a href=\"#1-3-小程序销毁\" class=\"headerlink\" title=\"1.3 小程序销毁\"></a>1.3 小程序销毁</h2><ul>\n<li>通常，只有当小程序进入后台一定时间，或者系统资源占用过高，才会被销毁。具体而言包括以下几种情形：</li>\n</ul>\n<ol>\n<li>当小程序进入后台，可以维持一小段时间的运行状态，如果这段时间内都未进入前台，小程序会被销毁。</li>\n<li>当小程序占用系统资源过高，可能会被系统销毁或被微信客户端主动回收。</li>\n</ol>\n<hr>\n<h1 id=\"2、微信小程序更新机制\"><a href=\"#2、微信小程序更新机制\" class=\"headerlink\" title=\"2、微信小程序更新机制\"></a>2、微信小程序更新机制</h1><ul>\n<li><p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/runtime/update-mechanism.html\">微信小程序更新机制</a></p>\n</li>\n<li><p>开发者在管理后台发布新版本的小程序之后，微信客户端会有若干个时机去检查本地缓存的小程序有没有新版本，并进行小程序的代码包更新。但如果用户本地有小程序的历史版本，此时打开的可能还是旧版本。</p>\n</li>\n</ul>\n<h2 id=\"2-1-启动时同步更新\"><a href=\"#2-1-启动时同步更新\" class=\"headerlink\" title=\"2.1 启动时同步更新\"></a>2.1 启动时同步更新</h2><ul>\n<li><p>在以下情况下，小程序启动时会同步更新代码包。同步更新会阻塞小程序的启动流程，影响小程序的启动耗时。</p>\n</li>\n<li><p>如果更新失败或超时，为了保障小程序的可用性，还是会使用本地版本打开。</p>\n</li>\n</ul>\n<h4 id=\"定期检查发现版本更新\"><a href=\"#定期检查发现版本更新\" class=\"headerlink\" title=\"定期检查发现版本更新\"></a>定期检查发现版本更新</h4><ul>\n<li>微信运行时，会<strong>定期检查最近使用的小程序是否有更新</strong>。如果有更新，下次小程序启动时会同步进行更新，更新到最新版本后再打开小程序，尽可能保证用户能够尽快使用小程序的最新版本。</li>\n</ul>\n<h4 id=\"用户长时间未使用小程序\"><a href=\"#用户长时间未使用小程序\" class=\"headerlink\" title=\"用户长时间未使用小程序\"></a>用户长时间未使用小程序</h4><ul>\n<li><p>用户长时间未使用小程序时，为保障小程序版本的实时性，会强制同步检查版本更新，更新到最新版本后再打开小程序。</p>\n</li>\n<li><p>若用户处于弱网环境、下载最新版本失败等情况下，仍会启动本地的较低版本。</p>\n</li>\n</ul>\n<h2 id=\"2-2-启动时异步更新\"><a href=\"#2-2-启动时异步更新\" class=\"headerlink\" title=\"2.2 启动时异步更新\"></a>2.2 启动时异步更新</h2><ul>\n<li>即使启动前未发现更新，小程序每次<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/runtime/operating-mechanism.html\">冷启动</a>时，都会异步检查是否有更新版本。如果发现有新版本，将会异步下载新版本的代码包。但当次启动仍会使用客户端本地的旧版本代码，即新版本的小程序需要等<strong>下一次冷启动</strong>才会使用。</li>\n</ul>\n<h4 id=\"开发者手动触发更新\"><a href=\"#开发者手动触发更新\" class=\"headerlink\" title=\"开发者手动触发更新\"></a>开发者手动触发更新</h4><ul>\n<li>在启动时异步更新的情况下，如果开发者希望立刻进行版本更新，可以使用 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/base/update/wx.getUpdateManager.html\">wx.getUpdateManager</a> API 进行处理。在有新版本时提示用户重启小程序更新新版本。</li>\n<li>官方版本：</li>\n</ul>\n<pre><code class=\"js\">const updateManager = wx.getUpdateManager()\n\nupdateManager.onCheckForUpdate(function (res) &#123;\n  // 请求完新版本信息的回调\n  console.log(res.hasUpdate)\n&#125;)\n\nupdateManager.onUpdateReady(function () &#123;\n  wx.showModal(&#123;\n    title: &#39;更新提示&#39;,\n    content: &#39;新版本已经准备好，是否重启应用？&#39;,\n    success(res) &#123;\n      if (res.confirm) &#123;\n        // 新的版本已经下载好，调用 applyUpdate 应用新版本并重启\n        updateManager.applyUpdate()\n      &#125;\n    &#125;\n  &#125;)\n&#125;)\n\nupdateManager.onUpdateFailed(function () &#123;\n  // 新版本下载失败\n&#125;)\n</code></pre>\n<ul>\n<li>实际使用版本：</li>\n</ul>\n<pre><code class=\"js\">//app.js\nApp(&#123;\n    onLaunch() &#123;\n        this.update()\n    &#125;,\n \n    // 版本更新\n    update() &#123;\n        const updateManager = wx.getUpdateManager()\n \n        updateManager.onCheckForUpdate(function (res) &#123;\n            // 请求完新版本信息的回调\n            if(res.hasUpdate) &#123;\n \n                // 新版本下载成功\n                updateManager.onUpdateReady(function () &#123;\n                    wx.showModal(&#123;\n                        title: &#39;更新提示&#39;,\n                        content: &#39;新版本已经准备好，请您重启应用，以确保正常使用。&#39;,\n                        success: function (res) &#123;\n                            if (res.confirm) &#123;\n                                // 新的版本已经下载好，调用 applyUpdate 应用新版本并重启\n                                updateManager.applyUpdate()\n                            &#125;\n                        &#125;\n                    &#125;)\n                &#125;)\n \n                // 新版本下载失败\n                updateManager.onUpdateFailed(function () &#123;\n                    wx.showModal(&#123;\n                        title: &#39;更新提示&#39;,\n                        content: &#39;检测到了新版本，但是下载失败了~&#39;\n                    &#125;)\n                &#125;)\n \n            &#125;\n        &#125;)\n    &#125;\n&#125;)\n</code></pre>\n<h2 id=\"2-3-小程序管理后台的相关设置\"><a href=\"#2-3-小程序管理后台的相关设置\" class=\"headerlink\" title=\"2.3 小程序管理后台的相关设置\"></a>2.3 小程序管理后台的相关设置</h2><ul>\n<li>小程序开发者可以通过在<strong>小程序管理后台</strong>进行设置，影响更新逻辑。</li>\n</ul>\n<h4 id=\"优先使用本地版本设置\"><a href=\"#优先使用本地版本设置\" class=\"headerlink\" title=\"优先使用本地版本设置\"></a>优先使用本地版本设置</h4><ul>\n<li>若开发者判断某些较新的小程序版本无需强制用户同步更新到最新版本，可以在小程序管理后台「设置」-「功能设置」-「优先使用本地版本设置」中进行设置，设置后若同步更新时检查本地版本不低于该版本，则优先使用本地版本，同时将会异步下载最新版本的代码包。</li>\n</ul>\n<h4 id=\"小程序最低可用版本设置\"><a href=\"#小程序最低可用版本设置\" class=\"headerlink\" title=\"小程序最低可用版本设置\"></a>小程序最低可用版本设置</h4><ul>\n<li><p>若开发者判断某些较旧的小程序版本服务不再可用，可以在小程序管理后台 「设置」-「功能设置」-「小程序最低可用版本设置」中进行设置。设置后若同步更新时检查本地版本低于该版本，则无法打开，并继续尝试下载最新版本、若异步更新，则会在检查到更新后提示用户重启小程序更新新版本。</p>\n</li>\n<li><p>操作步骤如下：</p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/478d22af2e1d4e628e6fe5410c0e7687.png#pic_center\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/f4cd73a70c6d4acfb78d712483a8714c.png#pic_center\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/a351b4aa046742c1b0f36f8c44e877bc.png#pic_center\"></p>\n<ul>\n<li>最终小程序打开如下图所示<br><img src=\"https://img-blog.csdnimg.cn/59a5ec82928d43cb8c6495d6df1014af.png#pic_center#pic_center\"></li>\n</ul>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><ol>\n<li>开发者在后台发布新版本之后，无法立刻影响到所有现网用户，但最差情况下，也在发布之后 <strong>24 小时之内</strong>覆盖绝大多数用户。</li>\n<li>小程序管理后台的「优先使用本地版本设置」和「小程序最低可用版本设置」不会影响同步更新与异步更新的选择。</li>\n</ol>\n","feature":true,"text":"微信小程序是一种可以在微信平台上运行的应用程序。它不需要下载和安装，用户可以直接通过微信扫码或搜索进入使用。微信小程序具有轻量、快速、跨平台等特点，开发者可以使用HTML、CSS、JavaScript等前端技术进行开发。...","permalink":"/post/前端--微信小程序运行及更新机制","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"微信小程序","slug":"微信小程序","count":5,"path":"api/tags/微信小程序.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">1、微信小程序运行机制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-%E5%89%8D%E5%8F%B0%E5%92%8C%E5%90%8E%E5%8F%B0\"><span class=\"toc-text\">1.1 前台和后台</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%90%AF%E5%8A%A8%EF%BC%9A%E5%86%B7%E5%90%AF%E5%8A%A8%E5%92%8C%E7%83%AD%E5%90%AF%E5%8A%A8\"><span class=\"toc-text\">1.2 小程序启动：冷启动和热启动</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-3-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%94%80%E6%AF%81\"><span class=\"toc-text\">1.3 小程序销毁</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%9B%B4%E6%96%B0%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">2、微信小程序更新机制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E5%90%AF%E5%8A%A8%E6%97%B6%E5%90%8C%E6%AD%A5%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">2.1 启动时同步更新</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E6%9C%9F%E6%A3%80%E6%9F%A5%E5%8F%91%E7%8E%B0%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">定期检查发现版本更新</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E9%95%BF%E6%97%B6%E9%97%B4%E6%9C%AA%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">用户长时间未使用小程序</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E5%90%AF%E5%8A%A8%E6%97%B6%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">2.2 启动时异步更新</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%8A%A8%E8%A7%A6%E5%8F%91%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">开发者手动触发更新</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-3-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%AE%A1%E7%90%86%E5%90%8E%E5%8F%B0%E7%9A%84%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">2.3 小程序管理后台的相关设置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%85%88%E4%BD%BF%E7%94%A8%E6%9C%AC%E5%9C%B0%E7%89%88%E6%9C%AC%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">优先使用本地版本设置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%9C%80%E4%BD%8E%E5%8F%AF%E7%94%A8%E7%89%88%E6%9C%AC%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">小程序最低可用版本设置</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F\"><span class=\"toc-text\">注意</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"计算机体系结构概述","uid":"c87b8553228183b157da295156afb592","slug":"计算机体系结构知识点大全","date":"2023-07-02T01:47:11.000Z","updated":"2025-07-14T15:12:20.470Z","comments":true,"path":"api/articles/计算机体系结构知识点大全.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/direct/c9a21fa8cc98404588e864660d2e34bd.png","text":"计算机体系结构概述涵盖了计算机硬件和软件之间的组织关系和交互方式。它包括指令集架构、处理器结构、存储器层次结构、输入输出系统等内容。计算机体系结构的设计直接影响着计算机的性能、功耗和可扩展性。...","permalink":"/post/计算机体系结构知识点大全","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"计算机科学与技术","slug":"计算机科学与技术","count":6,"path":"api/categories/计算机科学与技术.json"}],"tags":[{"name":"计算机体系结构","slug":"计算机体系结构","count":1,"path":"api/tags/计算机体系结构.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true},"next_post":{"title":"快速上手微信小程序：开发进阶","uid":"e64fdb23f4387c8c4044a46c8a9a5d8b","slug":"前端--微信小程序（进阶）","date":"2023-03-25T01:15:36.000Z","updated":"2025-07-14T15:12:20.466Z","comments":true,"path":"api/articles/前端--微信小程序（进阶）.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/direct/99ef3a76e98343f09343b862791073a9.png","text":"微信小程序是一种可以在微信平台上运行的应用程序。它不需要下载和安装，用户可以直接通过微信扫码或搜索进入使用。微信小程序具有轻量、快速、跨平台等特点，开发者可以使用HTML、CSS、JavaScript等前端技术进行开发。...","permalink":"/post/前端--微信小程序（进阶）","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"微信小程序","slug":"微信小程序","count":5,"path":"api/tags/微信小程序.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}