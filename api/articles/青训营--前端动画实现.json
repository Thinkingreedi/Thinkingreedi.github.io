{"title":"前端动画实现","uid":"96f2401ef260a2fda3074e7c72b8a623","slug":"青训营--前端动画实现","date":"2022-01-21T08:11:16.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--前端动画实现.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","content":"<h2 id=\"1、动画的基本原理\"><a href=\"#1、动画的基本原理\" class=\"headerlink\" title=\"1、动画的基本原理\"></a>1、动画的基本原理</h2><p> <strong>什么是动画？</strong></p>\n<p>动画是通过快速连续排列批次差异极小的连续图像来制造运动错觉和变化错觉的过程 ——维基百科<br>关键词：</p>\n<ul>\n<li>快速</li>\n<li>连续排列</li>\n<li>彼此差异极小</li>\n<li>制造错觉</li>\n</ul>\n<p><strong>动画的历史与发展：</strong></p>\n<p>动画早在五千年前就存在了：<br><img src=\"https://img-blog.csdnimg.cn/494f877c01d44101bf20d1761ac8d8cb.png\"></p>\n<ul>\n<li><p>常见的前端动画技术:<br>Sprite 动画、CSS 动画、JS 动画、SVG 动画、WebGL 动画</p>\n</li>\n<li><p>按应用分类:<br>UI 动画、基于Web 的游戏动画和动画数据可视化</p>\n</li>\n</ul>\n<p>历史上第一个网站：<br><img src=\"https://img-blog.csdnimg.cn/7bdceeb095a3444f92ad285207ac14ac.png\"></p>\n<p><strong>计算机动画原理：</strong></p>\n<p>帧:连续变换的多张画面，其中的每一幅画面都是一帧。<br>帧率:用于度量一定时间段内的帧数，通常的测量单位是FPS (frame persecond) 。<br>帧率与人眼:一般每秒10-12帧人会认为画面是连贯的,这个现象称为视觉暂留。对于一些电脑动画和游戏来说低于30FPS会感受到明显卡顿，目前主流的屏幕、显卡输出为60FPS，效果会明显更流畅。<br><img src=\"https://img-blog.csdnimg.cn/56eace80807e438b91d80f3a5dc68b3f.png\"><br><strong>空白的补全方式:</strong></p>\n<ul>\n<li><p>补间动画:<br>传统动画，主画师绘制关键帧，交给清稿部门,清稿部门的补间动画师补充关键帧进行交付。(类比到这里，补间动画师由浏览器来担任，如keyframe，transition)</p>\n</li>\n<li><p>逐帧动画(Frame By Frame) :<br>从词语来说意味着全片每一帧逐帧都是纯手绘。(如css 的steps实现精灵动画)</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"2、前端动画分类\"><a href=\"#2、前端动画分类\" class=\"headerlink\" title=\"2、前端动画分类\"></a>2、前端动画分类</h2><h3 id=\"CSS动画\"><a href=\"#CSS动画\" class=\"headerlink\" title=\"CSS动画\"></a>CSS动画</h3><p><strong>animation</strong></p>\n<ul>\n<li>animation-name : 指定应用的一系列动画，每个名称代表一个由@keyframes定义的动画序列</li>\n<li>animation-duration : 制定一个动画周期的时长（默认为0秒，表示无动画）</li>\n<li>animation-timing-function : 定义CSS动画在每一动画周期中执行的节奏</li>\n<li>animation-delay : 定义动画于何时开始</li>\n<li>animation-iteration-count : 定义动画在结束前运行的次数，可以是1次也可以是无限循环</li>\n<li>animation-direction : 定义动画是否反向播放</li>\n<li>animation-fill-mode : 设置CSS动画在执行之前和之后如何将样式应用于目标</li>\n<li>animation-play-state : 定义一个动画是否运行或暂停</li>\n</ul>\n<p><strong>transform</strong></p>\n<ul>\n<li>translate : 平移</li>\n<li>scale : 缩放</li>\n<li>rotate : 旋转</li>\n<li>skew : 倾斜</li>\n</ul>\n<p><strong>transition API</strong></p>\n<ul>\n<li>transition-property : 指定哪个或者哪些CSS属性用于过渡</li>\n<li>transition-duration : 指定过度的时长</li>\n<li>transition-timing-function : 指定一个函数,定义属性值怎么变化</li>\n<li>transition-delay : 指定延迟</li>\n</ul>\n<p><strong>@Keyframe</strong></p>\n<ul>\n<li>from to</li>\n<li>百分比</li>\n</ul>\n<p><strong>CSS动画总结：</strong><br>优点 : 简单、高效 声明式的 不依赖于主线程，采用硬件加速(GPU) 简单的控制keyframe animation 的播放盒暂停<br>缺点 : 不能动态修改或定义动画内容 不同的动画无法实现同步 多个动画无法堆叠<br>适用场景 : 简单的h5活动&#x2F;宣传页<br>推荐库 : animation.css、shake.css</p>\n<h3 id=\"svg动画\"><a href=\"#svg动画\" class=\"headerlink\" title=\"svg动画\"></a>svg动画</h3><p>SVG动画的实现方式 SVG时基于XML的矢量图形描述语言，实现方式一般有以下三种：</p>\n<ul>\n<li>SMIL(同步多媒体集成语言)，原始的兼容性不好，不过多讨论</li>\n<li>JS: 一般是以下两个属性配合使用实现笔画效果。 stroke-dashoffset：<length> | <percentage><br>需要填充的路径 stroke-dasharray：<length> | <percentage> dash模式开始位置的偏移量</li>\n<li>CSS： 主要使用animation、transform、transition来实现动画，类似于css动画。</li>\n</ul>\n<p><strong>svg动画总结：</strong><br>优点：通过矢量元素实现动画，不同的屏幕下均可获得较好的清晰度。可以实现一些特殊的效果：描字，形变，墨水扩散等。<br>缺点：使用方式较为复杂，计算量比较大，过多使用可能会带来性能问题。</p>\n<h3 id=\"JS动画\"><a href=\"#JS动画\" class=\"headerlink\" title=\"JS动画\"></a>JS动画</h3><p>可以通过JS控制CSS的属性值，以实现动画，或者操作canvas上的API进行动画绘制。</p>\n<p><strong>JS动画总结：</strong></p>\n<p>优点：使用灵活，调节参数方便；可以进行多个状态的组合执行或联动。<br>缺点：调优不如CSS简单；对于性能和兼容性差的浏览器，JS需要写很多适配代码。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>为UI 元素采用较小的独立状态时，使用CSS。</li>\n<li>在需要对动画进行大量控制时，使用JavaScript。</li>\n<li>在特定的场景下可以使用SVG，可以使用CSS或JS去操作SVG变化。</li>\n</ul>\n<hr>\n<h2 id=\"3、实现前端动画\"><a href=\"#3、实现前端动画\" class=\"headerlink\" title=\"3、实现前端动画\"></a>3、实现前端动画</h2><p><strong>JS动画函数封装：</strong><br>JavaScript动画应该通过requestAnimationFrame.该内置方法允许设置回调函数以在浏览器准备重绘时运行。通常这很快，但确切的时间取决于浏览器。当页面在后台时,根本没有重绘，所以回调不会运行:动画将被暂停并且不会消耗资源。</p>\n<pre><code class=\"typescript\">\n// *@param draw &#123;function&#125; 绘制函数\n//  @param easing &#123;function&#125; 缓动函数\n//  @param duration &#123;number&#125; 持续时间\n\n function animate (&#123;easing, draw, duration&#125;) &#123;\n   let start = performance.now();\n   return new Promise(resolve =&gt; &#123;\n     requestAnimationFrame(function animate(time) &#123;\n       let timeFraction = (time - start) / duation;\n       if (timeFraction &gt; 1) timeFraction = 1;\n       let progress = easing(timeFraction);\n       draw(progress);\n       if(timeFraction &lt; 1) &#123;\n         requestAnimationFrame(animate);\n       &#125; else &#123;\n         resolve();\n       &#125;\n     &#125;)\n   &#125;)\n &#125;\n</code></pre>\n<ul>\n<li><p><strong>draw绘制函数：</strong><br>可以把draw想象成一只画笔,随着函数的执行，这个画笔的函数会反复被调用，并传入当前执行的进度progress，progress是一个介于0-1的number数字。</p>\n</li>\n<li><p><strong>easing缓动函数</strong><br>缓动函数决定了时间在线性增长过程中，实际的执行进度的变化，这个变化可以是线性的，也可以是非线性的，或者多维度的。</p>\n</li>\n<li><p><strong>duration持续时间</strong><br>动画的持续时间，单位是毫秒（返回Promise的原因：动画可以是连续的，支持通过then函数或await进行顺序调用）</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"4、工作实践\"><a href=\"#4、工作实践\" class=\"headerlink\" title=\"4、工作实践\"></a>4、工作实践</h2><p><strong>动画代码示例：</strong><br><a href=\"https://codepen.io/\">https://codepen.io/</a><br><a href=\"https://codesandbox.io/\">https://codesandbox.io/</a><br><strong>设计网站：</strong><br><a href=\"https://dribbble.com/\">https://dribbble.com/</a><br><strong>动画资源：</strong><br>SVG :</p>\n<ul>\n<li>Snap.svg-现代SVG图形的JavaScript库。</li>\n<li>Svg.js -用于操作和动画SVG的轻量级库。</li>\n</ul>\n<p>js :</p>\n<ul>\n<li>GSAP - JavaScript动画库。</li>\n<li>TweenJs - 一个简单但功能强大的JavaScript补间&#x2F;动画库。Create]S库套件的一部分。</li>\n<li>Velocity-加速的JavaScript动画。</li>\n</ul>\n<p>css :</p>\n<ul>\n<li>Animate.css - CSS动画的跨浏览器库。像一件简单的事情一样容易使用。</li>\n</ul>\n<p>canvas :</p>\n<ul>\n<li>EaselJs - EaselS是一个用于在 HTML5中构建高性能交互式2D内容的库</li>\n<li>Fabric.js -支持动画的JavaScript 画布库。</li>\n<li>Paper.js -矢量图形脚本的瑞士军刀- Scriptographer使用HTML5Canvas移植到JavaScript和浏览器。</li>\n<li>Pixijs -使用最快、最灵活的2D WebGL渲染器创建精美的数字内容。</li>\n</ul>\n","feature":false,"text":"在前端开发中，动画效果能够增强用户体验并提升页面吸引力。本文将介绍前端动画实现的多种方式，包括CSS动画、JavaScript动画库以及最新的Web动画API。通过学习本文，读者将掌握多种前端动画实现技术，从而丰富其网页设计与开发的技能。...","permalink":"/post/青训营--前端动画实现","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%8A%A8%E7%94%BB%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">1、动画的基本原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%89%8D%E7%AB%AF%E5%8A%A8%E7%94%BB%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">2、前端动画分类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CSS%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">CSS动画</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#svg%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">svg动画</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JS%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">JS动画</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">3、实现前端动画</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E5%B7%A5%E4%BD%9C%E5%AE%9E%E8%B7%B5\"><span class=\"toc-text\">4、工作实践</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Http实用指南","uid":"79d011c4f922321d4bb1c1cdb5390980","slug":"青训营--HTTP实用指南","date":"2022-01-24T02:38:04.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--HTTP实用指南.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","text":"HTTP实用指南是帮助开发人员理解和应用HTTP协议的重要资源。本文将介绍HTTP的基本概念，包括请求和响应的结构、状态码、请求方法等。...","permalink":"/post/青训营--HTTP实用指南","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false},"next_post":{"title":"响应式系统与React","uid":"daa70c85e66020d3179c9d18aed40c23","slug":"青训营--响应式系统与React","date":"2022-01-21T07:55:49.000Z","updated":"2025-07-14T15:12:20.472Z","comments":true,"path":"api/articles/青训营--响应式系统与React.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","text":"React是一个流行的JavaScript库，而响应式系统是现代前端开发中的重要概念。本文将探讨React与响应式系统之间的关系，包括React中的状态管理、组件的渲染机制以及响应式数据流的实现原理。...","permalink":"/post/青训营--响应式系统与React","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false}}