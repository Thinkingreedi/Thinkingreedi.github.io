{"title":"Node.js与前端开发实战","uid":"0182665cc415e72321b4209011c914e6","slug":"青训营--Node.js与前端开发实战","date":"2022-01-25T03:09:55.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--Node.js与前端开发实战.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","content":"<h1 id=\"一、Node-js的应用场景\"><a href=\"#一、Node-js的应用场景\" class=\"headerlink\" title=\"一、Node.js的应用场景\"></a>一、Node.js的应用场景</h1><h2 id=\"1-前端工程化\"><a href=\"#1-前端工程化\" class=\"headerlink\" title=\"1.前端工程化\"></a>1.前端工程化</h2><ul>\n<li>Bundle：webpack, vite, esbuild, parcel</li>\n<li>Uglify：uglifyjs</li>\n<li>Transpile：bablejs, typescript</li>\n<li>其他语言加入竞争：esbuild（go）, parcel（rust）, prisma</li>\n<li>现状：难以替代</li>\n</ul>\n<h2 id=\"2-Web服务端应用\"><a href=\"#2-Web服务端应用\" class=\"headerlink\" title=\"2.Web服务端应用\"></a>2.Web服务端应用</h2><ul>\n<li>学习曲线平缓，开发效率较高</li>\n<li>运行效率接近常见的编译语言</li>\n<li>社区生态丰富及工具链成熟(npm, V8 inspector)</li>\n<li>与前端结合的场景会有优势(SSR)</li>\n<li>现状：竞争激烈，Node.js有自己独特的优势</li>\n</ul>\n<h2 id=\"3-Electron跨端桌面应用\"><a href=\"#3-Electron跨端桌面应用\" class=\"headerlink\" title=\"3.Electron跨端桌面应用\"></a>3.Electron跨端桌面应用</h2><ul>\n<li>商业应用：vscode, slack, discord, zoom</li>\n<li>大型公司内的效率工具</li>\n<li>现状：大部分场景在选型时，都值得考虑</li>\n</ul>\n<h2 id=\"4-Node-js在字节\"><a href=\"#4-Node-js在字节\" class=\"headerlink\" title=\"4.Node.js在字节\"></a>4.Node.js在字节</h2><ul>\n<li>BFF应用、SSR应用，举例：Modern.js</li>\n<li>服务端应用，例如：头条搜索，西瓜视频，懂车帝</li>\n<li>Electron应用：飞连，飞书</li>\n<li>每年新增1000+ Node.js应用</li>\n</ul>\n<hr>\n<h1 id=\"二、Node-js运行时结构\"><a href=\"#二、Node-js运行时结构\" class=\"headerlink\" title=\"二、Node.js运行时结构\"></a>二、Node.js运行时结构</h1><p><img src=\"https://img-blog.csdnimg.cn/53ac4a87d3c045af9fcf8c9dc9ad0ff7.png#pic_center\"><br><strong>结构：</strong></p>\n<ul>\n<li>V8：JavaScript Runtime，诊断调试工具(inspector)</li>\n<li>libuv：eventloop(事件循环)， syscall (系统调用)</li>\n<li>举例：用node-fetch发起请求时…</li>\n</ul>\n<p><strong>特点：</strong></p>\n<ol>\n<li><p>异步I&#x2F;O<br>当Node.js执行I&#x2F;O操作时，会在响应返回后恢复操作，而不是阻塞线程并占用额外内存等待。<br><img src=\"https://img-blog.csdnimg.cn/1360487bef044facb060523108b05761.png#pic_center\"></p>\n</li>\n<li><p>单线程</p>\n</li>\n</ol>\n<ul>\n<li>JS 单线程<ul>\n<li>实际：JS线程+uv线程池+V8任务线程池+V8 Inspector线程</li>\n</ul>\n</li>\n<li>优点：不用考虑多线程状态同步问题，也就不需要锁；同时还能比较高效地利用系统资源</li>\n<li>缺点：阻塞会产生更多负面影响<ul>\n<li>解决办法：多进程或多线程</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>跨平台</li>\n</ol>\n<ul>\n<li>跨平台(大部分功能、api)</li>\n<li>Node.js跨平台+JS无需编译环境(+ Web 跨平台+诊断工具跨平台)<ul>\n<li>&#x3D;开发成本低(大部分场景无需担心跨平台问题)，整体学习成本低</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1 id=\"三、编写-Http-Server\"><a href=\"#三、编写-Http-Server\" class=\"headerlink\" title=\"三、编写 Http Server\"></a>三、编写 Http Server</h1><p><strong>安装Node.js</strong></p>\n<ul>\n<li>Mac,Linux推荐使用nvm。多版本管理。</li>\n<li>Windows推荐 nvm4w 或是官方安装包。</li>\n<li>安装慢，安装失败的情况，设置安装源<br>NVM_NODEJS_ORG_MRROR&#x3D;<a href=\"https://npmmirror.com/mirrors/node\">https://npmmirror.com/mirrors/node</a> nvm install 16</li>\n</ul>\n<p><strong>Http Server</strong><br><img src=\"https://img-blog.csdnimg.cn/f4fb3d960c7349db847f34811b985c5e.png#pic_center\"><br><strong>静态文件</strong><br><img src=\"https://img-blog.csdnimg.cn/fcecb67af53e4deb8d2ad34148ee0b1e.png#pic_center\"></p>\n<p><strong>React SSR</strong><br><img src=\"https://img-blog.csdnimg.cn/532b88cb75c74c0182c7459f7ed7a39a.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/3bf0e71edd324f01850c6cf512295a63.png#pic_center\"></p>\n<p><strong>Debug</strong><br>V8 Inspector：开箱即用、特性丰富强大、与前端开发一致、跨平台</p>\n<ul>\n<li>node –inspect</li>\n<li>open <a href=\"http://localhost:9229/json\">http://localhost:9229/json</a></li>\n</ul>\n<p>场景：</p>\n<ul>\n<li>查看console.log内容</li>\n<li>breakpoint</li>\n<li>高CPU、死循环：cpuprofile</li>\n<li>高内存占用：heapsnapshot</li>\n<li>性能分析</li>\n</ul>\n<p><strong>部署</strong></p>\n<p>部署要解决的问题：</p>\n<ul>\n<li>守护进程：当进程退出时，重新拉起</li>\n<li>多进程：cluster便捷地利用多进程</li>\n<li>记录进程状态，用于诊断</li>\n</ul>\n<p>容器环境：</p>\n<ul>\n<li>通常有健康检查的手段，只需考虑多核 cpu 利用率即可</li>\n</ul>\n<hr>\n<h1 id=\"四、延伸话题\"><a href=\"#四、延伸话题\" class=\"headerlink\" title=\"四、延伸话题\"></a>四、延伸话题</h1><ul>\n<li>Node.js贡献代码</li>\n<li>编译Node.js</li>\n<li>诊断&#x2F;追踪</li>\n<li>WASM,NAPI</li>\n</ul>\n<hr style=\" border:solid; width:100px; height:1px;\" color=#000000 size=1\">\n\n<p><a href=\"https://nodejs.org/zh-cn/\">Node.js下载</a></p>\n<p><a href=\"https://www.runoob.com/nodejs/nodejs-tutorial.html\">Node.js 教程-菜鸟教程</a></p>\n","feature":false,"text":"在本文中，我们将探讨如何将Node.js与前端开发实战相结合。我们还会深入研究前端开发中常用的构建工具、自动化流程和部署技巧，以及如何通过Node.js优化前端开发工作流程。...","permalink":"/post/青训营--Node.js与前端开发实战","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81Node-js%E7%9A%84%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">一、Node.js的应用场景</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96\"><span class=\"toc-text\">1.前端工程化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-Web%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">2.Web服务端应用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-Electron%E8%B7%A8%E7%AB%AF%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">3.Electron跨端桌面应用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-Node-js%E5%9C%A8%E5%AD%97%E8%8A%82\"><span class=\"toc-text\">4.Node.js在字节</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81Node-js%E8%BF%90%E8%A1%8C%E6%97%B6%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">二、Node.js运行时结构</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E7%BC%96%E5%86%99-Http-Server\"><span class=\"toc-text\">三、编写 Http Server</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E5%BB%B6%E4%BC%B8%E8%AF%9D%E9%A2%98\"><span class=\"toc-text\">四、延伸话题</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"WebGL初识","uid":"c2bb75f6dd30000ed3be30fb34a8fb6a","slug":"青训营--WebGL初识","date":"2022-01-26T01:59:26.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--WebGL初识.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","text":"WebGL是一种用于在Web浏览器中实现高性能3D图形的技术。本文将帮助读者快速入门WebGL，了解其基本概念和使用方法。我们将介绍WebGL的基本架构和API，包括如何创建WebGL上下文、渲染对象和着色器编程等。...","permalink":"/post/青训营--WebGL初识","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false},"next_post":{"title":"Http实用指南","uid":"79d011c4f922321d4bb1c1cdb5390980","slug":"青训营--HTTP实用指南","date":"2022-01-24T02:38:04.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--HTTP实用指南.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","text":"HTTP实用指南是帮助开发人员理解和应用HTTP协议的重要资源。本文将介绍HTTP的基本概念，包括请求和响应的结构、状态码、请求方法等。...","permalink":"/post/青训营--HTTP实用指南","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false}}