{"title":"Web多媒体入门","uid":"cbeef85e3ef827f236c8157203105c9a","slug":"青训营--Web多媒体入门","date":"2022-02-05T10:40:59.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--Web多媒体入门.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","content":"<hr>\n<h2 id=\"1、Web多媒体历史\"><a href=\"#1、Web多媒体历史\" class=\"headerlink\" title=\"1、Web多媒体历史\"></a>1、Web多媒体历史</h2><p><img src=\"https://img-blog.csdnimg.cn/f15abeb50dcd4d8eab44ece5cc8c0690.png\"></p>\n<hr>\n<h2 id=\"2、基础知识\"><a href=\"#2、基础知识\" class=\"headerlink\" title=\"2、基础知识\"></a>2、基础知识</h2><h3 id=\"编码格式\"><a href=\"#编码格式\" class=\"headerlink\" title=\"编码格式\"></a>编码格式</h3><p><strong>图像基本概念</strong></p>\n<p>图像分辨率：用于确定组成一副图像的像素数据，就是指在水平和垂直方向上图像所具有的像素个数。如1920*1080（水平方向1920个像素、垂直方向1080个像素）</p>\n<p>图像深度︰图像深度是指存储每个像素所需要的比特数。图像深度决定了图像的每个像素可能的颜色数，或可能的灰度级数。例如, 彩色图像每个像素用R,G,B三个分量表示,每个分量用8位,像素深度为24位可以表示的颜色数目为2的24次方，既16777216个﹔一副单色图像存储每个像素需要8bit，则图像的像素深度为8位，最大灰度数目为2的8次方，既256个。（图片的分辨率越大不一定所占据的存储空间越大，还要根据其图片深度占用位数。）</p>\n<p><strong>视频的基本概念</strong></p>\n<ul>\n<li>分辨率：每一帧图像的分辨率（所有帧分辨率相同）</li>\n<li>帧率：视频单位时间内包含的视频帧的数量</li>\n<li>码率：指视频单位时间内传输的数据量，一般用kbps标签，即千位每秒</li>\n</ul>\n<p><strong>视频帧的分类</strong></p>\n<ul>\n<li>I帧<br>I帧对视频压缩编码无需依赖其他的帧，只要有I帧自己的数据就能完全解码。</li>\n<li>P帧（前项预测编码帧）<br>其解码要依赖前一帧，前一帧没解码自身也无法解码。</li>\n<li>B帧<br>其解码不仅要依赖前一帧，还要根据其后面的帧内容。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/a2663095ad544286a9814bddadc7fdee.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2c1ecbbec1e544f5a6519721e54059a9.png\"></p>\n<p><strong>为什么要编码</strong><br>假设存在一个图片，分辨率是1920*1080，则其未压缩的占用空间为：1920108024&#x2F;8&#x3D;6220800Byte，大约5.9M；若帧率为30FPS，时长 90分钟，则占用空间为大小 933G，这样的存储空间是不能接受的。因此编码的意义是为了压缩视频视频大小，为了更好的进行视频传输和节约存储空间。视频是有很多冗余的，包括空间冗余、时间冗余、编码冗余、视觉冗余等。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/80425c5bc2fa4e658ec49e50dba81b91.png\"></p>\n<p><strong>编码格式</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/c9443ad8538144b39e0bf69ef49c63dc.png\"></p>\n<h3 id=\"封装格式\"><a href=\"#封装格式\" class=\"headerlink\" title=\"封装格式\"></a>封装格式</h3><p>存储音视频、图片或字幕信息的容器，便于存储传输。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/f18bd836bd2c4d0080130f0ee5db4788.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/702cd2f2b0984780a226878e2e86261d.png\"></p>\n<h3 id=\"多媒体元素和扩展API\"><a href=\"#多媒体元素和扩展API\" class=\"headerlink\" title=\"多媒体元素和扩展API\"></a>多媒体元素和扩展API</h3><p><strong>video和audio元素</strong><br>在h5中，通过可以通过video标签和audio标签分别播放视频和音频。两种标签用法一样。</p>\n<pre><code class=\"html\">&lt;video src=&quot;./video.mp4&quot; muted autoplay width=600 height=300 control&gt;\n&lt;/video&gt;\n</code></pre>\n<pre><code class=\"html\">&lt;video muted autoplay width=600 height=300 control&gt;\n    &lt;source src=&quot;./video.mp4&quot;&gt;\n    &lt;/source&gt;\n    &lt;source src=&quot;./video1.mp4&quot;&gt;\n    &lt;/source&gt;   \n&lt;/video&gt;\n&lt;!-- 可以写多个source标签 --&gt;\n</code></pre>\n<p><strong>元素方法</strong></p>\n<ul>\n<li>play：开始播放音频&#x2F;视频 </li>\n<li>pause：暂停当前播放的音频&#x2F;视频 </li>\n<li>load：重新加载音频&#x2F;视频元素</li>\n<li>canPlayType：检测浏览器是否能播放指定的音频&#x2F;视频类型 </li>\n<li>addTextTrack：向音频&#x2F;视频添加新的文本轨道</li>\n</ul>\n<blockquote>\n<p>play方法是异步的，立刻暂停，即立刻调用pause方法会报错</p>\n</blockquote>\n<p> <strong>元素属性</strong></p>\n<ul>\n<li>autoplay：设置或返回是否在加载完成后随即播放 </li>\n<li>control：设置或返回是否显示控件</li>\n<li>currentTime：设置或返回视频&#x2F;视频中的当前播放位置(以秒计)</li>\n<li>duration：返回当前视频&#x2F;音频的长度</li>\n<li>src：设置或返回视频&#x2F;音频的来源 </li>\n<li>volume：设置或返回视频&#x2F;音频的音量TimeRanges对象</li>\n<li>buffered：返回表示视频&#x2F;音频已缓存部分的 </li>\n<li>playbackRate：设置或返回视频&#x2F;音频的播放速度</li>\n<li>error：返回表示错误状态的MediaError对象</li>\n<li>readyState：返回当前的就绪状态</li>\n</ul>\n<p> <strong>元素事件</strong></p>\n<ul>\n<li>loadedmetadata：浏览器开始加载视频&#x2F;音频时触发 </li>\n<li>canplay：浏览器可以开始播放视频&#x2F;音频时触发</li>\n<li>play：视频&#x2F;音频暂停时触发 </li>\n<li>playing：在视频&#x2F;音频在因缓冲而暂停或停止后已就绪时触发 </li>\n<li>pause：视频&#x2F;音频暂停时触发</li>\n<li>timeupdate：用于播放位置改变时触发 </li>\n<li>seeking：用于开始跳跃到视频&#x2F;音频中的新位置时触发</li>\n<li>seeked：用于已跳跃到视频&#x2F;音频中的新位置时触发 </li>\n<li>waiting：视频由于缓冲下一帧而停止时触发 </li>\n<li>ended：播放列表已结束时触发</li>\n</ul>\n<p><strong>video和audio标签的缺陷</strong></p>\n<ul>\n<li>不支持直接播放hls、flv等格式视频</li>\n<li>视频资源的请求和加载无法通过代码控制<ul>\n<li>分段加载（节约流量） </li>\n<li>清晰度无缝切换（增强用户体验） </li>\n<li>精确预加载（增强用户体验）</li>\n</ul>\n</li>\n</ul>\n<p><strong>媒体源扩展MSE(Media Source Extensions)</strong></p>\n<ul>\n<li>无插件在Web端播放流媒体 </li>\n<li>支持播放hls、flv、mp4等格式视频 </li>\n<li>可实现视频分段加载、清晰度无缝切换、自适应码率、精确预加载等</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/dc1c278d08c340048ce4c1635b3c827d.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/11696cbb4fb94c5fbe6d60857f60cd56.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/3d690f0fb7bd4b7f81765dce7e7d7085.png\"></p>\n<p><strong>mp4和fmp4</strong><br>fmp4文件结构相比普通的MP4文件多了多个moof和moot文件，因此对流式播放支持得更加友好</p>\n<h3 id=\"流媒体协议\"><a href=\"#流媒体协议\" class=\"headerlink\" title=\"流媒体协议\"></a>流媒体协议</h3><p><img src=\"https://img-blog.csdnimg.cn/fa03031276894be3a8d63d3587f44f64.png\"><br>HLS全称是HTTP Live Streaming，是一个由Apple公司提出的基于HTTP的媒体流传输协议，用于实时音视频流的传输。目前HLS协议被广泛的应用于视频点播和直播领域。在IOS段，只要把M3U8的地址直接赋给video标签的src，就可以直接播放。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/1ba33bbe1f844c579648b0eebdd63fa8.png\"></p>\n<hr>\n<h2 id=\"3、应用场景\"><a href=\"#3、应用场景\" class=\"headerlink\" title=\"3、应用场景\"></a>3、应用场景</h2><p>Web多媒体：视频编辑、点播、直播、图片、云游戏、实时通信。</p>\n<hr>\n<h2 id=\"4、总结和展望\"><a href=\"#4、总结和展望\" class=\"headerlink\" title=\"4、总结和展望\"></a>4、总结和展望</h2><p><strong>总结：</strong></p>\n<ul>\n<li>flash &gt; H5 video&gt; MSE</li>\n<li>编码格式、封装格式、多媒体元素、流媒体协议</li>\n<li>应用场景</li>\n</ul>\n<p><strong>新技术标准：</strong></p>\n<ul>\n<li>Webassembly</li>\n<li>WebCodecs</li>\n<li>WebGPU</li>\n<li>WebVR、WebXR</li>\n</ul>\n","feature":false,"text":"Web多媒体是Web开发中的重要组成部分，它包括图像、音频和视频等多种形式。本文将介绍常见的Web图像格式（如JPEG、PNG、GIF等）及其特点、优缺点，并深入讨论如何使用CSS和JavaScript来实现Web图像的动态效果。...","permalink":"/post/青训营--Web多媒体入门","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81Web%E5%A4%9A%E5%AA%92%E4%BD%93%E5%8E%86%E5%8F%B2\"><span class=\"toc-text\">1、Web多媒体历史</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">2、基础知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">编码格式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%81%E8%A3%85%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">封装格式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E5%AA%92%E4%BD%93%E5%85%83%E7%B4%A0%E5%92%8C%E6%89%A9%E5%B1%95API\"><span class=\"toc-text\">多媒体元素和扩展API</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">流媒体协议</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">3、应用场景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E6%80%BB%E7%BB%93%E5%92%8C%E5%B1%95%E6%9C%9B\"><span class=\"toc-text\">4、总结和展望</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Typescript快速入门","uid":"fc3331da72f382869606f6a944c6cf7d","slug":"青训营--Typescript快速入门","date":"2022-02-05T10:40:59.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--Typescript快速入门.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","text":"TypeScript是一种由Microsoft开发的语言，它是JavaScript的一个超集，增加了静态类型和面向对象编程等特性。本文将引导读者快速入门TypeScript，包括环境搭建、基本语法、类型系统、面向对象编程、模块化等方面的内容。...","permalink":"/post/青训营--Typescript快速入门","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"17 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false},"next_post":{"title":"数据结构基础","uid":"a4ba43b16c40c17ef43c675dbe1ccabe","slug":"数据结构（C语言版）-- 数据结构基础","date":"2022-01-31T02:10:54.000Z","updated":"2025-07-14T15:12:20.469Z","comments":true,"path":"api/articles/数据结构（C语言版）-- 数据结构基础.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/a7ee138129bc4e54ae59143d2f81518d.png","text":"数据结构是计算机科学中的重要基础，它提供了存储和组织数据的方法。本文将引导读者了解并掌握数据结构的基本概念和原理。我们还将学习数据结构的算法操作，如查找、排序、插入、删除等，并讨论它们的时间复杂度和空间复杂度。...","permalink":"/post/数据结构（C语言版）-- 数据结构基础","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}