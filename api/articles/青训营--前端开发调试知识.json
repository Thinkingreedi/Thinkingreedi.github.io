{"title":"前端必须知道的开发调试知识","uid":"c724a6391cb1c094df5a91070462b271","slug":"青训营--前端开发调试知识","date":"2022-01-17T15:35:19.000Z","updated":"2025-07-14T15:12:20.471Z","comments":true,"path":"api/articles/青训营--前端开发调试知识.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","content":"<h2 id=\"1、Bug和Debug\"><a href=\"#1、Bug和Debug\" class=\"headerlink\" title=\"1、Bug和Debug\"></a>1、Bug和Debug</h2><h3 id=\"1-1、Bug的产生\"><a href=\"#1-1、Bug的产生\" class=\"headerlink\" title=\"1.1、Bug的产生\"></a>1.1、Bug的产生</h3><p><img src=\"https://img-blog.csdnimg.cn/f9ac01b619604ddca5021c406e4d064d.png#pic_center\"><br>Bug一词的原意是臭虫或虫子。第一代计算机是由许多庞大的真空管组成，并利用大量的电力来使真空管发光，引得一只小虫子Bug钻进了一支真空管内，导致整个计算机无法工作。研究人员费了半天时间，总算发现原因所在，把这只小虫子从真空管中取出后，计算机又恢复正常。后来，Bug这个名词就沿用下来。</p>\n<h3 id=\"1-2、前端Debug的特点\"><a href=\"#1-2、前端Debug的特点\" class=\"headerlink\" title=\"1.2、前端Debug的特点\"></a>1.2、前端Debug的特点</h3><ol>\n<li><p>多平台<br>浏览器、nodejs、小程序、桌面应用…</p>\n</li>\n<li><p>多环境<br>本地开发环境、线上环境…</p>\n</li>\n<li><p>多工具<br>chrome、devTools、Charles、Spy-Debugger、vConsole…</p>\n</li>\n<li><p>多技巧<br>Console、BreakPoint、sourceMap、代理…</p>\n</li>\n</ol>\n<h2 id=\"2、Chrome-DevTools\"><a href=\"#2、Chrome-DevTools\" class=\"headerlink\" title=\"2、Chrome DevTools\"></a>2、Chrome DevTools</h2><h3 id=\"2-1、Chrome-DevTools–Element工具栏\"><a href=\"#2-1、Chrome-DevTools–Element工具栏\" class=\"headerlink\" title=\"2.1、Chrome DevTools–Element工具栏\"></a>2.1、Chrome DevTools–Element工具栏</h3><p>页面上右键–&gt;检查工具，或者直接F12键显示出来。</p>\n<p> <strong>动态修改元素和样式</strong></p>\n<ul>\n<li>点击.cls开启动态修改元素的class</li>\n<li>输入字符串可以动态的给元素添加类名</li>\n<li>勾选&#x2F;取消类名可以动态的查看类名生效效果</li>\n<li>点击具体的样式值（字号、颜色、宽度高度等）可以进行编辑，浏览器内容区域实时预览</li>\n<li>Computed下点击样式里的箭头可以跳转到styles面板中的CSS规则<br><img src=\"https://img-blog.csdnimg.cn/7086e16fab8840f19748e3f249749554.png#pic_center\"></li>\n</ul>\n<p><strong>伪类样式的修改：</strong><br>元素处右键，点击Force state，再点击：hover，样式就出来了。<br><img src=\"https://img-blog.csdnimg.cn/3e3ffc5b7b1642d8b5bfbdf509613409.png#pic_center\" alt=\"：\"><br>点击.cls前面的:hov，选择：hover，样式就出来了。<br><img src=\"https://img-blog.csdnimg.cn/82948649567f43f2bf495c86abe59eee.png#pic_center\"><br><strong>元素样式特别多时：</strong><br>Computed下点击样式里的箭头可以跳转到styles面板中的CSS规则。<br><img src=\"https://img-blog.csdnimg.cn/58049b2b1c3a42598d717724cfbc004c.png#pic_center\"><br><img src=\"https://img-blog.csdnimg.cn/edec679dfc9e49f49a74fbed898bfa8a.png#pic_center\"><br><strong>关于截图：</strong><br>选中元素，右键，capture node screenshot截图。<br><img src=\"https://img-blog.csdnimg.cn/4a77f0d567d94ffea320e36a2a13d105.png#pic_center\"></p>\n<h3 id=\"2-2、Chrome-DevTools–Console日志工具栏\"><a href=\"#2-2、Chrome-DevTools–Console日志工具栏\" class=\"headerlink\" title=\"2.2、Chrome DevTools–Console日志工具栏\"></a>2.2、Chrome DevTools–Console日志工具栏</h3><p>console日志工具栏是我们在写js代码时用到的最多的，我们可以在js代码中插入相应的语句，在devTools中查看相应的输入日志，在函数的不同阶段插入不同的console可以帮助我们观察到函数不同阶段变量的变化，帮助我们找出问题。<br><img src=\"https://img-blog.csdnimg.cn/0db906a71a57454cb43d8dfd30d6aaf4.png#pic_center\"></p>\n<ul>\n<li>console.log 日志打印 灰色是字符串 蓝色数字number</li>\n<li>console.warn  输出警告信息（黄色）</li>\n<li>console.error 输出错误信息（红色）</li>\n<li>console.debug 调试（蓝色）</li>\n<li>console.info info函数里放的是调试信息</li>\n<li>console.table 具象化展示json和数组数据</li>\n<li>console.dir 展示节点的属性</li>\n<li>占位符 %S 字符串占位符 %O 对象占位符 %C 样式占位符 在字符串之前添加样式，更加突出主题信息<br> <img src=\"https://img-blog.csdnimg.cn/d0ee3d46c71e4131bfe696e8ead3ea62.png#pic_center\"></li>\n</ul>\n<h3 id=\"2-3、Chrome-DevTools–Sources面板\"><a href=\"#2-3、Chrome-DevTools–Sources面板\" class=\"headerlink\" title=\"2.3、Chrome DevTools–Sources面板\"></a>2.3、Chrome DevTools–Sources面板</h3><p>Sources面板组成:<br><img src=\"https://img-blog.csdnimg.cn/8ff4fa904994409996a9b979fc61a262.png#pic_center\"><br>在调试中，我们可以通过Sources面板看到网页的源代码，在右边的工具栏中可以查看监听、断点、作用域、调用栈等等信息。进入断点时，鼠标移到变量上可以查看数值，有点像后端IDE调试代码的感觉。 另外我们可以点击行号前面新增断点，也可以直接在程序中写上debugger。可以通过鼠标移动监听变量也可以通过watch方法监听变量。<br><img src=\"https://img-blog.csdnimg.cn/7563e2762cbf4574947b026a66907268.png#pic_center\"><br>由于Sources面板可以直接看到源代码，那么就引出了安全性的问题，一般我们打开网站时看到的一般是处理过的。有的是压缩混淆过的，替换了变量名并压缩成一行，这种可以点击{}按钮进行格式化，而有的直接看不见。</p>\n<p>调试时为了保持客户端代码可读性和可调试性，可以使用Source Maps(源码映射)将源代码映射到已编译的代码。打包的时候生成Source map文件，上线前把文件上传到自己内网的错误监控平台，产生错误的时候就可以看到对应的映射。</p>\n<h3 id=\"2-4、Chrome-DevTools–Performance面板\"><a href=\"#2-4、Chrome-DevTools–Performance面板\" class=\"headerlink\" title=\"2.4、Chrome DevTools–Performance面板\"></a>2.4、Chrome DevTools–Performance面板</h3><p>Performance面板组成：<img src=\"https://img-blog.csdnimg.cn/72769883624b44829a0cb0c2a3cd5d5e.png#pic_center\"><br>当我们对网站性能要求比较高的时候，可以在performance面板中查看每一帧。每一毫秒中执行了什么，汇总信息查看加载某一个模块花费了多少时间。</p>\n<h3 id=\"2-5、Chrome-DevTools–NetWork面板\"><a href=\"#2-5、Chrome-DevTools–NetWork面板\" class=\"headerlink\" title=\"2.5、Chrome DevTools–NetWork面板\"></a>2.5、Chrome DevTools–NetWork面板</h3><p>NetWork面板组成：<img src=\"https://img-blog.csdnimg.cn/54acfb78e331497d814998b68544e796.png#pic_center\" alt=\"##  Chrome DevTools--Performance面板\"><br>Network面板里面可以看到所有的网络请求信息，进行抓包操作，禁止从cache中加载资源，限制带宽模拟弱网环境等等。选中一项网络请求信息，可以查看该请求的详细信息，比如请求行、请求头、响应行、响应头和响应体等等。直观地看到数据包中的原始内容，从而排除是否是自己网页渲染出了bug。</p>\n<h3 id=\"2-6、Chrome-DevTools–Application\"><a href=\"#2-6、Chrome-DevTools–Application\" class=\"headerlink\" title=\"2.6、Chrome DevTools–Application\"></a>2.6、Chrome DevTools–Application</h3><p>Application组成：<br>在Application面板里可以检查和修改Storage(存储)、Databases(数据库)和Caches(缓存)。 在storage中可以点击clear site data 清除该网站的数据。<br><img src=\"https://img-blog.csdnimg.cn/97b32f92365743a685cdac0f81b6e663.png#pic_center\"></p>\n<h2 id=\"3、移动端H5调试\"><a href=\"#3、移动端H5调试\" class=\"headerlink\" title=\"3、移动端H5调试\"></a>3、移动端H5调试</h2><h3 id=\"3-1、真机调试\"><a href=\"#3-1、真机调试\" class=\"headerlink\" title=\"3.1、真机调试\"></a>3.1、真机调试</h3><p>真机调试时，如果使用有线连接非常不方便，建议直接扫码。可以使用Fehelper插件（推荐）将网站生成二维码，在局域网内里可以用手机直接扫码查看网站。<br><img src=\"https://img-blog.csdnimg.cn/d71651bd33fb45d9aa2d2a24688cd976.png#pic_center\"></p>\n<h3 id=\"3-2、使用代理工具调试\"><a href=\"#3-2、使用代理工具调试\" class=\"headerlink\" title=\"3.2、使用代理工具调试\"></a>3.2、使用代理工具调试</h3><p><img src=\"https://img-blog.csdnimg.cn/ae276f19aa0b415ab511082299270053.png#pic_center\"></p>\n<h3 id=\"3-3、常用工具：\"><a href=\"#3-3、常用工具：\" class=\"headerlink\" title=\"3.3、常用工具：\"></a>3.3、常用工具：</h3><p><img src=\"https://img-blog.csdnimg.cn/979050f2b94244c285c9a8e190d681a1.png#pic_center\"></p>\n<h2 id=\"4、常用调试技巧\"><a href=\"#4、常用调试技巧\" class=\"headerlink\" title=\"4、常用调试技巧\"></a>4、常用调试技巧</h2><h3 id=\"4-1、线上及时修改\"><a href=\"#4-1、线上及时修改\" class=\"headerlink\" title=\"4.1、线上及时修改\"></a>4.1、线上及时修改<img src=\"https://img-blog.csdnimg.cn/72d30ebe6fd64691af15a297f2d9a220.png#pic_center\" alt=\" 线上及时修改\"></h3><h3 id=\"4-2、利用代理解决开发阶段的跨域问题\"><a href=\"#4-2、利用代理解决开发阶段的跨域问题\" class=\"headerlink\" title=\"4.2、利用代理解决开发阶段的跨域问题\"></a>4.2、利用代理解决开发阶段的跨域问题</h3><p><img src=\"https://img-blog.csdnimg.cn/74d6995c85c34f49891d61ae57d484cd.png#pic_center\"></p>\n<h3 id=\"4-3、启用本地source-map\"><a href=\"#4-3、启用本地source-map\" class=\"headerlink\" title=\"4.3、启用本地source map\"></a>4.3、启用本地source map</h3><p><img src=\"https://img-blog.csdnimg.cn/3270daaa88b94363894c3959f20bdb10.png#pic_center\"></p>\n<h3 id=\"4-4、小黄鸭调试大法\"><a href=\"#4-4、小黄鸭调试大法\" class=\"headerlink\" title=\"4.4、小黄鸭调试大法\"></a>4.4、小黄鸭调试大法</h3><p>“对鸭讲码”，帮助自己再次理清代码。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/8246d49eb61d4104a12311eba4f55248.png#pic_center\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这次的《前端必须知道的开发调试知识》一课属实受益匪浅，因为接触前端不久，用到这些方法不多，但是通过这次课程了解到许多的调试方法和技巧，以后会多多实践！<strong>Knowledge has no limit！</strong><br>（附Chrome DevTools手册文档）<a href=\"https://developer.chrome.com/docs/devtools/\">Chrome DevTools</a></p>\n","feature":false,"text":"前端开发调试是在开发过程中解决和修复代码问题的关键步骤。本文将介绍一些常见的前端调试技巧和工具，包括浏览器开发者工具的使用、调试工具的配置和断点调试等。...","permalink":"/post/青训营--前端开发调试知识","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81Bug%E5%92%8CDebug\"><span class=\"toc-text\">1、Bug和Debug</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1%E3%80%81Bug%E7%9A%84%E4%BA%A7%E7%94%9F\"><span class=\"toc-text\">1.1、Bug的产生</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2%E3%80%81%E5%89%8D%E7%AB%AFDebug%E7%9A%84%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">1.2、前端Debug的特点</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81Chrome-DevTools\"><span class=\"toc-text\">2、Chrome DevTools</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1%E3%80%81Chrome-DevTools%E2%80%93Element%E5%B7%A5%E5%85%B7%E6%A0%8F\"><span class=\"toc-text\">2.1、Chrome DevTools–Element工具栏</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2%E3%80%81Chrome-DevTools%E2%80%93Console%E6%97%A5%E5%BF%97%E5%B7%A5%E5%85%B7%E6%A0%8F\"><span class=\"toc-text\">2.2、Chrome DevTools–Console日志工具栏</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3%E3%80%81Chrome-DevTools%E2%80%93Sources%E9%9D%A2%E6%9D%BF\"><span class=\"toc-text\">2.3、Chrome DevTools–Sources面板</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4%E3%80%81Chrome-DevTools%E2%80%93Performance%E9%9D%A2%E6%9D%BF\"><span class=\"toc-text\">2.4、Chrome DevTools–Performance面板</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5%E3%80%81Chrome-DevTools%E2%80%93NetWork%E9%9D%A2%E6%9D%BF\"><span class=\"toc-text\">2.5、Chrome DevTools–NetWork面板</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6%E3%80%81Chrome-DevTools%E2%80%93Application\"><span class=\"toc-text\">2.6、Chrome DevTools–Application</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E7%A7%BB%E5%8A%A8%E7%AB%AFH5%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">3、移动端H5调试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1%E3%80%81%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">3.1、真机调试</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2%E3%80%81%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">3.2、使用代理工具调试</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3%E3%80%81%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%EF%BC%9A\"><span class=\"toc-text\">3.3、常用工具：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E5%B8%B8%E7%94%A8%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7\"><span class=\"toc-text\">4、常用调试技巧</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1%E3%80%81%E7%BA%BF%E4%B8%8A%E5%8F%8A%E6%97%B6%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">4.1、线上及时修改</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2%E3%80%81%E5%88%A9%E7%94%A8%E4%BB%A3%E7%90%86%E8%A7%A3%E5%86%B3%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E7%9A%84%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">4.2、利用代理解决开发阶段的跨域问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3%E3%80%81%E5%90%AF%E7%94%A8%E6%9C%AC%E5%9C%B0source-map\"><span class=\"toc-text\">4.3、启用本地source map</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4%E3%80%81%E5%B0%8F%E9%BB%84%E9%B8%AD%E8%B0%83%E8%AF%95%E5%A4%A7%E6%B3%95\"><span class=\"toc-text\">4.4、小黄鸭调试大法</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"响应式系统与React","uid":"daa70c85e66020d3179c9d18aed40c23","slug":"青训营--响应式系统与React","date":"2022-01-21T07:55:49.000Z","updated":"2025-07-14T15:12:20.472Z","comments":true,"path":"api/articles/青训营--响应式系统与React.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/3112c385d3c845d4b0305beebbc3ffdf.jpeg","text":"React是一个流行的JavaScript库，而响应式系统是现代前端开发中的重要概念。本文将探讨React与响应式系统之间的关系，包括React中的状态管理、组件的渲染机制以及响应式数据流的实现原理。...","permalink":"/post/青训营--响应式系统与React","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":48,"path":"api/categories/前端.json"}],"tags":[{"name":"字节跳动青训营","slug":"字节跳动青训营","count":21,"path":"api/tags/字节跳动青训营.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":false},"next_post":{"title":"C++_STL_常用算法","uid":"9e5f4d79310e12911a75fefd0392a14d","slug":"C++_STL_常用算法","date":"2022-01-15T08:40:57.000Z","updated":"2025-07-14T15:12:20.457Z","comments":true,"path":"api/articles/C++_STL_常用算法.json","keywords":"web前端开发,web前端博客,个人博客,html,css,javascript,vue,react","cover":"https://img-blog.csdnimg.cn/506e6842fd8542408c76ef139e90ebd3.png","text":"C++标准模板库（STL）是C++编程中不可或缺的部分，它提供了丰富的数据结构和算法。本文我们将对每种容器和算法进行简要介绍，并给出示例代码加深理解。...","permalink":"/post/C++_STL_常用算法","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"22 mins."},"categories":[{"name":"C++","slug":"C","count":6,"path":"api/categories/C.json"}],"tags":[{"name":"STL","slug":"STL","count":3,"path":"api/tags/STL.json"}],"author":{"name":"会思想的苇草i","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"日拱一卒，功不唐捐 <br/> With each day's arduous effort,<br/>no achievement shall be in vain","socials":{"github":"https://github.com/Thinkingreedi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/ASHIYI66","juejin":"https://juejin.cn/user/4284166567110935","customs":{}}},"feature":true}}